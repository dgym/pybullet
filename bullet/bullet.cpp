/* Generated by Cython 0.14 on Fri Feb 10 22:22:59 2012 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#else

#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif

#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif

#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif

#if PY_VERSION_HEX < 0x02040000
  #define METH_COEXIST 0
  #define PyDict_CheckExact(op) (Py_TYPE(op) == &PyDict_Type)
  #define PyDict_Contains(d,o)   PySequence_Contains(d,o)
#endif

#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   PyInt_AsLong(o)
  #define PyNumber_Index(o)    PyNumber_Int(o)
  #define PyIndex_Check(o)     PyNumber_Check(o)
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
#endif

#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)

  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;

  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)

#endif

#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#endif

#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif

#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif

#ifndef PySet_CheckExact
#  define PySet_CheckExact(obj)          (Py_TYPE(obj) == &PySet_Type)
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject PyLongObject
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif

#ifdef __cplusplus
#define __PYX_EXTERN_C extern "C"
#else
#define __PYX_EXTERN_C extern
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE_API__bullet__bullet
#include "stdio.h"
#include "stdlib.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "btBulletCollisionCommon.h"
#include "BulletCollision/CollisionShapes/btBox2dShape.h"
#include "btBulletDynamicsCommon.h"
#include "BulletCollision/CollisionShapes/btCylinderShape.h"
#include "BulletCollision/CollisionShapes/btStaticPlaneShape.h"
#include "BulletCollision/BroadphaseCollision/btOverlappingPairCache.h"
#include "BulletCollision/CollisionDispatch/btGhostObject.h"
#include "BulletDynamics/Character/btKinematicCharacterController.h"
#include "LinearMath/btIDebugDraw.h"
#include "bulletdebugdraw.h"
#include "utils.h"

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif


/* inline attribute */
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

/* unused attribute */
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || defined(__INTEL_COMPILER)
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif

typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/


/* Type Conversion Predeclarations */

#define __Pyx_PyBytes_FromUString(s) PyBytes_FromString((char*)s)
#define __Pyx_PyBytes_AsUString(s)   ((unsigned char*) PyBytes_AsString(s))

#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);

#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))


#ifdef __GNUC__
/* Test for GCC > 2.95 */
#if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
#define likely(x)   __builtin_expect(!!(x), 1)
#define unlikely(x) __builtin_expect(!!(x), 0)
#else /* __GNUC__ > 2 ... */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif

#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif

static const char *__pyx_f[] = {
  "bullet.pyx",
  "numpy.pxd",
};

typedef npy_int8 __pyx_t_5numpy_int8_t;

typedef npy_int16 __pyx_t_5numpy_int16_t;

typedef npy_int32 __pyx_t_5numpy_int32_t;

typedef npy_int64 __pyx_t_5numpy_int64_t;

typedef npy_uint8 __pyx_t_5numpy_uint8_t;

typedef npy_uint16 __pyx_t_5numpy_uint16_t;

typedef npy_uint32 __pyx_t_5numpy_uint32_t;

typedef npy_uint64 __pyx_t_5numpy_uint64_t;

typedef npy_float32 __pyx_t_5numpy_float32_t;

typedef npy_float64 __pyx_t_5numpy_float64_t;

typedef npy_long __pyx_t_5numpy_int_t;

typedef npy_longlong __pyx_t_5numpy_long_t;

typedef npy_intp __pyx_t_5numpy_intp_t;

typedef npy_uintp __pyx_t_5numpy_uintp_t;

typedef npy_ulong __pyx_t_5numpy_uint_t;

typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

typedef npy_double __pyx_t_5numpy_float_t;

typedef npy_double __pyx_t_5numpy_double_t;

typedef npy_longdouble __pyx_t_5numpy_longdouble_t;

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif

/* Type declarations */

typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":534
 * 
 * 
 * cdef class Quaternion:             # <<<<<<<<<<<<<<
 *     """
 *     A Quaternion represents a point or vector in four-dimensional space.  It is
 */

struct __pyx_obj_6bullet_6bullet_Quaternion {
  PyObject_HEAD
  btQuaternion *quaternion;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1674
 * 
 * 
 * cdef class ConstraintSolver:             # <<<<<<<<<<<<<<
 *     """
 *     A ConstraintSolver determines what contact forces to apply.
 */

struct __pyx_obj_6bullet_6bullet_ConstraintSolver {
  PyObject_HEAD
  btConstraintSolver *thisptr;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1716
 * 
 * 
 * cdef class CollisionWorld:             # <<<<<<<<<<<<<<
 *     """
 *     A CollisionWorld is a container for CollisionObjects which can detect
 */

struct __pyx_obj_6bullet_6bullet_CollisionWorld {
  PyObject_HEAD
  struct __pyx_vtabstruct_6bullet_6bullet_CollisionWorld *__pyx_vtab;
  btCollisionWorld *thisptr;
  PythonDebugDraw *debugDraw;
  struct _object *dispatcher;
  struct _object *broadphase;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1459
 * 
 * 
 * cdef class ActionInterface:             # <<<<<<<<<<<<<<
 *     """
 *     ActionInterface is a base class for objects in a DynamicsWorld which are not
 */

struct __pyx_obj_6bullet_6bullet_ActionInterface {
  PyObject_HEAD
  btActionInterface *thisptr;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1475
 * 
 * 
 * cdef class CharacterControllerInterface(ActionInterface):             # <<<<<<<<<<<<<<
 *     """
 *     A CharacterControllerInterface is an ActionInterface which allows walking
 */

struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface {
  struct __pyx_obj_6bullet_6bullet_ActionInterface __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1531
 * 
 * 
 * cdef class KinematicCharacterController(CharacterControllerInterface):             # <<<<<<<<<<<<<<
 *     """
 *     A KinematicCharacterController is a CharacterControllerInterface which
 */

struct __pyx_obj_6bullet_6bullet_KinematicCharacterController {
  struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface __pyx_base;
  struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *ghost;
  struct __pyx_obj_6bullet_6bullet_ConvexShape *shape;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1133
 * 
 * 
 * cdef class MotionState:             # <<<<<<<<<<<<<<
 *     """
 *     A MotionState is a primarily an object to provide callback methods to the
 */

struct __pyx_obj_6bullet_6bullet_MotionState {
  PyObject_HEAD
  btMotionState *thisptr;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1689
 * 
 * 
 * cdef class SequentialImpulseConstraintSolver(ConstraintSolver):             # <<<<<<<<<<<<<<
 *     """
 *     A SequentialImpulseConstraintSolver is a ConstraintSolver based on a fast
 */

struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver {
  struct __pyx_obj_6bullet_6bullet_ConstraintSolver __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1847
 * 
 * 
 * cdef class DynamicsWorld(CollisionWorld):             # <<<<<<<<<<<<<<
 *     """
 *     A DynamicsWorld is a container for RigidBodies which implements dynamics (ie
 */

struct __pyx_obj_6bullet_6bullet_DynamicsWorld {
  struct __pyx_obj_6bullet_6bullet_CollisionWorld __pyx_base;
  PyObject *_rigidBodies;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1904
 * 
 * 
 * cdef class DiscreteDynamicsWorld(DynamicsWorld):             # <<<<<<<<<<<<<<
 *     """
 *     A DiscreteDynamicsWorld is a DynamicsWorld in which time passes in fixed
 */

struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld {
  struct __pyx_obj_6bullet_6bullet_DynamicsWorld __pyx_base;
  struct __pyx_obj_6bullet_6bullet_ConstraintSolver *solver;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":624
 * 
 * 
 * cdef class CollisionShape:             # <<<<<<<<<<<<<<
 *     """
 *     A CollisionShape defines the shape of an object in a CollisionWorld.  Shapes
 */

struct __pyx_obj_6bullet_6bullet_CollisionShape {
  PyObject_HEAD
  btCollisionShape *thisptr;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":639
 * 
 * 
 * cdef class ConvexShape(CollisionShape):             # <<<<<<<<<<<<<<
 *     """
 *     A ConvexShape is a shape that curves outwards only.  This is a base class
 */

struct __pyx_obj_6bullet_6bullet_ConvexShape {
  struct __pyx_obj_6bullet_6bullet_CollisionShape __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":719
 * 
 * 
 * cdef class CylinderShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A CylinderShape is a cylinder with its central axis aligned with the Y axis.
 */

struct __pyx_obj_6bullet_6bullet_CylinderShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":740
 * 
 * 
 * cdef class CylinderShapeX(CylinderShape):             # <<<<<<<<<<<<<<
 *     """
 *     A CylinderShapeX is a cylinder with its central axis aligned with the X
 */

struct __pyx_obj_6bullet_6bullet_CylinderShapeX {
  struct __pyx_obj_6bullet_6bullet_CylinderShape __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":753
 * 
 * 
 * cdef class CylinderShapeZ(CylinderShape):             # <<<<<<<<<<<<<<
 *     """
 *     A CylinderShapeZ is a cylinder with its central axis aligned with the Z
 */

struct __pyx_obj_6bullet_6bullet_CylinderShapeZ {
  struct __pyx_obj_6bullet_6bullet_CylinderShape __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":663
 * 
 * 
 * cdef class BoxShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A Box2dShape is a box primitive around the origin, its sides axis aligned
 */

struct __pyx_obj_6bullet_6bullet_BoxShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":778
 * 
 * 
 * cdef class IndexedMesh:             # <<<<<<<<<<<<<<
 *     """
 *     An IndexedMesh is a vertex array and an array of index data into that
 */

struct __pyx_obj_6bullet_6bullet_IndexedMesh {
  PyObject_HEAD
  struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh *__pyx_vtab;
  btIndexedMesh *thisptr;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":965
 * 
 * 
 * cdef class Transform:             # <<<<<<<<<<<<<<
 *     """
 *     A Transform represents an a translation and rotation.
 */

struct __pyx_obj_6bullet_6bullet_Transform {
  PyObject_HEAD
  btTransform *thisptr;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1177
 * 
 * 
 * cdef class DefaultMotionState(MotionState):             # <<<<<<<<<<<<<<
 *     """
 *     A DefaultMotionState is a MotionState which keeps track of the last
 */

struct __pyx_obj_6bullet_6bullet_DefaultMotionState {
  struct __pyx_obj_6bullet_6bullet_MotionState __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":766
 * 
 * 
 * cdef class StaticPlaneShape(CollisionShape):             # <<<<<<<<<<<<<<
 *     """
 *     A StaticPlaneShape is an immobile plane.
 */

struct __pyx_obj_6bullet_6bullet_StaticPlaneShape {
  struct __pyx_obj_6bullet_6bullet_CollisionShape __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":878
 * 
 * 
 * cdef class StridingMeshInterface:             # <<<<<<<<<<<<<<
 *     """
 *     A StridingMeshInterface is an object suitable for use in defining a triangle
 */

struct __pyx_obj_6bullet_6bullet_StridingMeshInterface {
  PyObject_HEAD
  btStridingMeshInterface *thisptr;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":902
 * 
 * 
 * cdef class TriangleIndexVertexArray(StridingMeshInterface):             # <<<<<<<<<<<<<<
 *     """
 *     A TriangleIndexVertexArray is a striding mesh defined in terms of an array
 */

struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray {
  struct __pyx_obj_6bullet_6bullet_StridingMeshInterface __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":932
 * 
 * 
 * cdef class BvhTriangleMeshShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A BvhTriangleMeshShape is a shape defined by an array of triangle vertex
 */

struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
  struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *stride;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1590
 * 
 * 
 * cdef class OverlappingPairCache:             # <<<<<<<<<<<<<<
 *     """
 *     An OverlappingPairCache manages the addition, removal, and storage of
 */

struct __pyx_obj_6bullet_6bullet_OverlappingPairCache {
  PyObject_HEAD
  btOverlappingPairCache *thisptr;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1617
 * 
 * 
 * cdef class HashedOverlappingPairCache(OverlappingPairCache):             # <<<<<<<<<<<<<<
 *     """
 *     A HashedOverlappingPairCache manages the addition, removal, and storage of
 */

struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache {
  struct __pyx_obj_6bullet_6bullet_OverlappingPairCache __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1562
 * 
 * 
 * cdef class CollisionDispatcher:             # <<<<<<<<<<<<<<
 *     """
 *     A CollisionDispatcher implements pairwise collision detection.  It supports
 */

struct __pyx_obj_6bullet_6bullet_CollisionDispatcher {
  PyObject_HEAD
  btCollisionConfiguration *config;
  btDispatcher *thisptr;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1629
 * 
 * 
 * cdef class BroadphaseInterface:             # <<<<<<<<<<<<<<
 *     """
 *     A BroadphaseInterface generates lists of potentially colliding pairs.  It is
 */

struct __pyx_obj_6bullet_6bullet_BroadphaseInterface {
  PyObject_HEAD
  btBroadphaseInterface *thisptr;
  struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *_paircache;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1656
 * 
 * 
 * cdef class AxisSweep3(BroadphaseInterface):             # <<<<<<<<<<<<<<
 *     """
 *     An AxisSweep3 is a BroadphaseInterface implemented using the sweep and prune
 */

struct __pyx_obj_6bullet_6bullet_AxisSweep3 {
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":649
 * 
 * 
 * cdef class Box2dShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A Box2dShape is a box primitive around the origin, its sides axis aligned
 */

struct __pyx_obj_6bullet_6bullet_Box2dShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":459
 * 
 * 
 * cdef class Vector3:             # <<<<<<<<<<<<<<
 *     """
 *     A Vector3 represents a point or vector in three-dimensional space.
 */

struct __pyx_obj_6bullet_6bullet_Vector3 {
  PyObject_HEAD
  btScalar x;
  btScalar y;
  btScalar z;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":695
 * 
 * 
 * cdef class CapsuleShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A CapsuleShape is a capsule around the Y axis.  A capsule is a cylinder with
 */

struct __pyx_obj_6bullet_6bullet_CapsuleShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1705
 * 
 * 
 * cdef class Collision:             # <<<<<<<<<<<<<<
 *     """
 *     A Collision has information about a single collision detected during a sweep test
 */

struct __pyx_obj_6bullet_6bullet_Collision {
  PyObject_HEAD
  float distance;
  struct __pyx_obj_6bullet_6bullet_Vector3 *position;
  struct __pyx_obj_6bullet_6bullet_Vector3 *collision_normal;
  int triangle_index;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":455
 * 
 * # Forward declare some things because of circularity in the API.
 * cdef class CollisionObject             # <<<<<<<<<<<<<<
 * 
 * 
 */

struct __pyx_obj_6bullet_6bullet_CollisionObject {
  PyObject_HEAD
  btCollisionObject *thisptr;
  struct __pyx_obj_6bullet_6bullet_CollisionShape *_shape;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":707
 * 
 * 
 * cdef class CapsuleShapeZ(CapsuleShape):             # <<<<<<<<<<<<<<
 *     """
 *     A CapsuleShapeZ is a capsule around the Z axis.  A capsule is a cylinder with
 */

struct __pyx_obj_6bullet_6bullet_CapsuleShapeZ {
  struct __pyx_obj_6bullet_6bullet_CapsuleShape __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1193
 * 
 * 
 * cdef class RigidBody(CollisionObject):             # <<<<<<<<<<<<<<
 *     """
 *     A RigidBody is an object which can be added to a DynamicsWorld and involved
 */

struct __pyx_obj_6bullet_6bullet_RigidBody {
  struct __pyx_obj_6bullet_6bullet_CollisionObject __pyx_base;
  struct __pyx_obj_6bullet_6bullet_MotionState *motion;
  struct __pyx_obj_6bullet_6bullet_CollisionShape *shape;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1519
 * 
 * 
 * cdef class PairCachingGhostObject(CollisionObject):             # <<<<<<<<<<<<<<
 *      """
 *      A PairCachingGhostObject is a CollisionObject which keeps track of all the
 */

struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject {
  struct __pyx_obj_6bullet_6bullet_CollisionObject __pyx_base;
};

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":677
 * 
 * 
 * cdef class SphereShape(ConvexShape):             # <<<<<<<<<<<<<<
 *     """
 *     A SphereShape is a sphere around the origin, with a specified radius.
 */

struct __pyx_obj_6bullet_6bullet_SphereShape {
  struct __pyx_obj_6bullet_6bullet_ConvexShape __pyx_base;
};


/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1716
 * 
 * 
 * cdef class CollisionWorld:             # <<<<<<<<<<<<<<
 *     """
 *     A CollisionWorld is a container for CollisionObjects which can detect
 */

struct __pyx_vtabstruct_6bullet_6bullet_CollisionWorld {
  PyObject *(*__collisionResultsToList)(struct __pyx_obj_6bullet_6bullet_CollisionWorld *, PyBulletCollisionResults *);
};
static struct __pyx_vtabstruct_6bullet_6bullet_CollisionWorld *__pyx_vtabptr_6bullet_6bullet_CollisionWorld;


/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1847
 * 
 * 
 * cdef class DynamicsWorld(CollisionWorld):             # <<<<<<<<<<<<<<
 *     """
 *     A DynamicsWorld is a container for RigidBodies which implements dynamics (ie
 */

struct __pyx_vtabstruct_6bullet_6bullet_DynamicsWorld {
  struct __pyx_vtabstruct_6bullet_6bullet_CollisionWorld __pyx_base;
};
static struct __pyx_vtabstruct_6bullet_6bullet_DynamicsWorld *__pyx_vtabptr_6bullet_6bullet_DynamicsWorld;


/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":778
 * 
 * 
 * cdef class IndexedMesh:             # <<<<<<<<<<<<<<
 *     """
 *     An IndexedMesh is a vertex array and an array of index data into that
 */

struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh {
  enum PHY_ScalarType (*_dtypeToScalarType)(struct __pyx_obj_6bullet_6bullet_IndexedMesh *, PyArrayObject *);
};
static struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh *__pyx_vtabptr_6bullet_6bullet_IndexedMesh;


/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1904
 * 
 * 
 * cdef class DiscreteDynamicsWorld(DynamicsWorld):             # <<<<<<<<<<<<<<
 *     """
 *     A DiscreteDynamicsWorld is a DynamicsWorld in which time passes in fixed
 */

struct __pyx_vtabstruct_6bullet_6bullet_DiscreteDynamicsWorld {
  struct __pyx_vtabstruct_6bullet_6bullet_DynamicsWorld __pyx_base;
};
static struct __pyx_vtabstruct_6bullet_6bullet_DiscreteDynamicsWorld *__pyx_vtabptr_6bullet_6bullet_DiscreteDynamicsWorld;

#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif

#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct * __Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
  end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
  }
  #define __Pyx_RefNannySetupContext(name)           void *__pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
  #define __Pyx_RefNannyFinishContext()           __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r) __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r) __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r) __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XDECREF(r) do { if((r) != NULL) {__Pyx_DECREF(r);} } while(0)
#else
  #define __Pyx_RefNannySetupContext(name)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);} } while(0)
#define __Pyx_XGOTREF(r) do { if((r) != NULL) {__Pyx_GOTREF(r);} } while(0)

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name, PyObject* kw_name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],     PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,     const char* function_name); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

static double __Pyx__PyObject_AsDouble(PyObject* obj); /* proto */

#define __Pyx_PyObject_AsDouble(obj) \
    ((likely(PyFloat_CheckExact(obj))) ? \
     PyFloat_AS_DOUBLE(obj) : __Pyx__PyObject_AsDouble(obj))

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(PyObject *kwdict,
    const char* function_name, int kw_allowed); /*proto*/

static CYTHON_INLINE PyObject* __Pyx_tp_new(PyObject* type_obj) {
    return (PyObject*) (((PyTypeObject*)(type_obj))->tp_new(
        (PyTypeObject*)(type_obj), __pyx_empty_tuple, NULL));
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index); /*proto*/

#include "descrobject.h"
static PyObject* __Pyx_Method_ClassMethod(PyObject *method); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb); /*proto*/

static CYTHON_INLINE PyObject *__Pyx_PyInt_to_py_bool(bool);

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif

#if defined(_WIN32) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_absf(z)     (::std::abs(z))
        #define __Pyx_c_powf(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    #if 1
        #define __Pyx_c_absf(z)     (cabsf(z))
        #define __Pyx_c_powf(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (::std::abs(z))
        #define __Pyx_c_pow(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (cabs(z))
        #define __Pyx_c_pow(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static void __Pyx_WriteUnraisable(const char *name); /*proto*/

static int __Pyx_SetVtable(PyObject *dict, void *vtable); /*proto*/

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, long size, int strict);  /*proto*/

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static void __Pyx_AddTraceback(const char *funcname); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/
/* Module declarations from libcpp */

/* Module declarations from cpython.buffer */

/* Module declarations from cpython.ref */

/* Module declarations from libc.stdio */

/* Module declarations from cpython.object */

/* Module declarations from libc.stdlib */

/* Module declarations from numpy */

/* Module declarations from numpy */

static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *, PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *, PyObject *, PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *, PyObject *, PyObject *, PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/
static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *); /*proto*/
/* Module declarations from bullet.bullet */

static PyTypeObject *__pyx_ptype_6bullet_6bullet_CollisionObject = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_Vector3 = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_Quaternion = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CollisionShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_ConvexShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_Box2dShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_BoxShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_SphereShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CapsuleShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CapsuleShapeZ = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CylinderShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CylinderShapeX = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CylinderShapeZ = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_StaticPlaneShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_IndexedMesh = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_StridingMeshInterface = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_TriangleIndexVertexArray = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_BvhTriangleMeshShape = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_Transform = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_MotionState = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_DefaultMotionState = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_RigidBody = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_ActionInterface = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CharacterControllerInterface = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_PairCachingGhostObject = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_KinematicCharacterController = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CollisionDispatcher = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_OverlappingPairCache = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_HashedOverlappingPairCache = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_BroadphaseInterface = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_AxisSweep3 = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_ConstraintSolver = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_SequentialImpulseConstraintSolver = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_Collision = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_CollisionWorld = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_DynamicsWorld = 0;
static PyTypeObject *__pyx_ptype_6bullet_6bullet_DiscreteDynamicsWorld = 0;
#define __Pyx_MODULE_NAME "bullet.bullet"
int __pyx_module_is_main_bullet__bullet = 0;

/* Implementation of bullet.bullet */
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_RuntimeError;
static char __pyx_k_1[] = "<Vector x=%s y=%s z=%s>";
static char __pyx_k_2[] = "getHalfExtentsWithoutMargin";
static char __pyx_k_3[] = "m_triangleIndexStride";
static char __pyx_k_4[] = "Unsupported index array type";
static char __pyx_k_8[] = "calculateLocalInertia";
static char __pyx_k_9[] = "linearSleepingThreshold";
static char __pyx_k_10[] = "angularSleepingThreshold";
static char __pyx_k_11[] = "m_startWorldTransform";
static char __pyx_k_12[] = "m_linearSleepingThreshold";
static char __pyx_k_13[] = "m_angularSleepingThreshold";
static char __pyx_k_14[] = "getInvInertiaDiagLocal";
static char __pyx_k_15[] = "getLinearSleepingThreshold";
static char __pyx_k_16[] = "getAngularSleepingThreshold";
static char __pyx_k_17[] = "setVelocityForTimeInterval";
static char __pyx_k_18[] = "setInternalGhostPairCallback";
static char __pyx_k_21[] = "getNumCollisionObjects";
static char __pyx_k_22[] = "Cannot add CollisionObject without a CollisionShape";
static char __pyx_k_24[] = "removeCollisionObject";
static char __pyx_k_25[] = "__collisionResultsToList";
static char __pyx_k_29[] = "ndarray is not C contiguous";
static char __pyx_k_31[] = "ndarray is not Fortran contiguous";
static char __pyx_k_33[] = "Non-native byte order not supported";
static char __pyx_k_35[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_36[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_39[] = "Format string allocated too short.";
static char __pyx_k_41[] = "\nPyBullet wraps the Bullet Physics library for Python.\n\nDynamics features are provided mainly by DynamicsWorld and RigidBody.  For\nexample:\n\n    world = DiscreteDynamicsWorld()\n    ball = RigidBody(shape=SphereShape(1.0), mass=1.0)\n    world.addRigidBody(ball)\n    world.stepSimulation(1.0, 60, 1.0 / 60.0)\n    print ball.getWorldTransform().getOrigin()\n\n";
static char __pyx_k_42[] = "DRAW_CONSTRAINT_LIMITS";
static char __pyx_k_43[] = "DISABLE_DEACTIVATION";
static char __pyx_k_44[] = "fromConstructionInfo";
static char __pyx_k__B[] = "B";
static char __pyx_k__H[] = "H";
static char __pyx_k__I[] = "I";
static char __pyx_k__L[] = "L";
static char __pyx_k__O[] = "O";
static char __pyx_k__Q[] = "Q";
static char __pyx_k__b[] = "b";
static char __pyx_k__d[] = "d";
static char __pyx_k__f[] = "f";
static char __pyx_k__g[] = "g";
static char __pyx_k__h[] = "h";
static char __pyx_k__i[] = "i";
static char __pyx_k__l[] = "l";
static char __pyx_k__q[] = "q";
static char __pyx_k__w[] = "w";
static char __pyx_k__x[] = "x";
static char __pyx_k__y[] = "y";
static char __pyx_k__z[] = "z";
static char __pyx_k__Zd[] = "Zd";
static char __pyx_k__Zf[] = "Zf";
static char __pyx_k__Zg[] = "Zg";
static char __pyx_k__XXX[] = "XXX";
static char __pyx_k__buf[] = "buf";
static char __pyx_k__dot[] = "dot";
static char __pyx_k__obj[] = "obj";
static char __pyx_k__pop[] = "pop";
static char __pyx_k__axis[] = "axis";
static char __pyx_k__base[] = "base";
static char __pyx_k__char[] = "char";
static char __pyx_k__data[] = "data";
static char __pyx_k__getW[] = "getW";
static char __pyx_k__getX[] = "getX";
static char __pyx_k__getY[] = "getY";
static char __pyx_k__getZ[] = "getZ";
static char __pyx_k__mass[] = "mass";
static char __pyx_k__mesh[] = "mesh";
static char __pyx_k__more[] = "more";
static char __pyx_k__ndim[] = "ndim";
static char __pyx_k__warp[] = "warp";
static char __pyx_k__angle[] = "angle";
static char __pyx_k__cross[] = "cross";
static char __pyx_k__descr[] = "descr";
static char __pyx_k__dtype[] = "dtype";
static char __pyx_k__ghost[] = "ghost";
static char __pyx_k__lower[] = "lower";
static char __pyx_k__names[] = "names";
static char __pyx_k__range[] = "range";
static char __pyx_k__shape[] = "shape";
static char __pyx_k__trans[] = "trans";
static char __pyx_k__upper[] = "upper";
static char __pyx_k___shape[] = "_shape";
static char __pyx_k__append[] = "append";
static char __pyx_k__config[] = "config";
static char __pyx_k__fields[] = "fields";
static char __pyx_k__format[] = "format";
static char __pyx_k__height[] = "height";
static char __pyx_k__m_mass[] = "m_mass";
static char __pyx_k__motion[] = "motion";
static char __pyx_k__normal[] = "normal";
static char __pyx_k__radius[] = "radius";
static char __pyx_k__remove[] = "remove";
static char __pyx_k__solver[] = "solver";
static char __pyx_k__stride[] = "stride";
static char __pyx_k__upAxis[] = "upAxis";
static char __pyx_k__getAxis[] = "getAxis";
static char __pyx_k__inertia[] = "inertia";
static char __pyx_k__strides[] = "strides";
static char __pyx_k__thisptr[] = "thisptr";
static char __pyx_k__NO_DEBUG[] = "NO_DEBUG";
static char __pyx_k____init__[] = "__init__";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__constant[] = "constant";
static char __pyx_k__distance[] = "distance";
static char __pyx_k__friction[] = "friction";
static char __pyx_k__getAngle[] = "getAngle";
static char __pyx_k__itemsize[] = "itemsize";
static char __pyx_k__position[] = "position";
static char __pyx_k__readonly[] = "readonly";
static char __pyx_k__timeStep[] = "timeStep";
static char __pyx_k__trans_to[] = "trans_to";
static char __pyx_k__type_num[] = "type_num";
static char __pyx_k__velocity[] = "velocity";
static char __pyx_k__DRAW_AABB[] = "DRAW_AABB";
static char __pyx_k__DRAW_TEXT[] = "DRAW_TEXT";
static char __pyx_k__addAction[] = "addAction";
static char __pyx_k__byteorder[] = "byteorder";
static char __pyx_k__debugDraw[] = "debugDraw";
static char __pyx_k__getOrigin[] = "getOrigin";
static char __pyx_k__getRadius[] = "getRadius";
static char __pyx_k__indexBase[] = "indexBase";
static char __pyx_k__isInWorld[] = "isInWorld";
static char __pyx_k__normalize[] = "normalize";
static char __pyx_k__setOrigin[] = "setOrigin";
static char __pyx_k__ACTIVE_TAG[] = "ACTIVE_TAG";
static char __pyx_k__ValueError[] = "ValueError";
static char __pyx_k___paircache[] = "_paircache";
static char __pyx_k__applyForce[] = "applyForce";
static char __pyx_k__broadphase[] = "broadphase";
static char __pyx_k__dispatcher[] = "dispatcher";
static char __pyx_k__getGravity[] = "getGravity";
static char __pyx_k__getInvMass[] = "getInvMass";
static char __pyx_k__m_distance[] = "m_distance";
static char __pyx_k__m_friction[] = "m_friction";
static char __pyx_k__m_position[] = "m_position";
static char __pyx_k__quaternion[] = "quaternion";
static char __pyx_k__setGravity[] = "setGravity";
static char __pyx_k__stepHeight[] = "stepHeight";
static char __pyx_k__suboffsets[] = "suboffsets";
static char __pyx_k__trans_from[] = "trans_from";
static char __pyx_k__vertexBase[] = "vertexBase";
static char __pyx_k__fromScalars[] = "fromScalars";
static char __pyx_k__getFriction[] = "getFriction";
static char __pyx_k__getRotation[] = "getRotation";
static char __pyx_k__halfExtents[] = "halfExtents";
static char __pyx_k__indexStride[] = "indexStride";
static char __pyx_k__m_indexType[] = "m_indexType";
static char __pyx_k__maxSubSteps[] = "maxSubSteps";
static char __pyx_k__numVertices[] = "numVertices";
static char __pyx_k__restitution[] = "restitution";
static char __pyx_k__setFriction[] = "setFriction";
static char __pyx_k__setIdentity[] = "setIdentity";
static char __pyx_k__setRotation[] = "setRotation";
static char __pyx_k__RuntimeError[] = "RuntimeError";
static char __pyx_k___rigidBodies[] = "_rigidBodies";
static char __pyx_k__addRigidBody[] = "addRigidBody";
static char __pyx_k__applyImpulse[] = "applyImpulse";
static char __pyx_k__m_vertexBase[] = "m_vertexBase";
static char __pyx_k__m_vertexType[] = "m_vertexType";
static char __pyx_k__numTriangles[] = "numTriangles";
static char __pyx_k__removeAction[] = "removeAction";
static char __pyx_k__timeInterval[] = "timeInterval";
static char __pyx_k__vertexStride[] = "vertexStride";
static char __pyx_k__fixedTimeStep[] = "fixedTimeStep";
static char __pyx_k__fromAxisAngle[] = "fromAxisAngle";
static char __pyx_k__linearDamping[] = "linearDamping";
static char __pyx_k__m_numVertices[] = "m_numVertices";
static char __pyx_k__m_restitution[] = "m_restitution";
static char __pyx_k__DRAW_WIREFRAME[] = "DRAW_WIREFRAME";
static char __pyx_k__addIndexedMesh[] = "addIndexedMesh";
static char __pyx_k__angularDamping[] = "angularDamping";
static char __pyx_k__boxHalfExtents[] = "boxHalfExtents";
static char __pyx_k__debugDrawWorld[] = "debugDrawWorld";
static char __pyx_k__getNumSubParts[] = "getNumSubParts";
static char __pyx_k__getRestitution[] = "getRestitution";
static char __pyx_k__m_numTriangles[] = "m_numTriangles";
static char __pyx_k__m_vertexStride[] = "m_vertexStride";
static char __pyx_k__setDebugDrawer[] = "setDebugDrawer";
static char __pyx_k__setRestitution[] = "setRestitution";
static char __pyx_k__stepSimulation[] = "stepSimulation";
static char __pyx_k__triangle_index[] = "triangle_index";
static char __pyx_k__worldTransform[] = "worldTransform";
static char __pyx_k__ISLAND_SLEEPING[] = "ISLAND_SLEEPING";
static char __pyx_k__m_linearDamping[] = "m_linearDamping";
static char __pyx_k__removeRigidBody[] = "removeRigidBody";
static char __pyx_k__DRAW_CONSTRAINTS[] = "DRAW_CONSTRAINTS";
static char __pyx_k__collision_normal[] = "collision_normal";
static char __pyx_k__getLinearDamping[] = "getLinearDamping";
static char __pyx_k__m_angularDamping[] = "m_angularDamping";
static char __pyx_k__m_triangle_index[] = "m_triangle_index";
static char __pyx_k__relativePosition[] = "relativePosition";
static char __pyx_k__setAngularFactor[] = "setAngularFactor";
static char __pyx_k__setWalkDirection[] = "setWalkDirection";
static char __pyx_k__applyCentralForce[] = "applyCentralForce";
static char __pyx_k__buildOptimizedBvh[] = "buildOptimizedBvh";
static char __pyx_k__getAngularDamping[] = "getAngularDamping";
static char __pyx_k__getCollisionShape[] = "getCollisionShape";
static char __pyx_k__getLinearVelocity[] = "getLinearVelocity";
static char __pyx_k__getWorldTransform[] = "getWorldTransform";
static char __pyx_k__setCollisionShape[] = "setCollisionShape";
static char __pyx_k__setLinearVelocity[] = "setLinearVelocity";
static char __pyx_k__setWorldTransform[] = "setWorldTransform";
static char __pyx_k__DISABLE_SIMULATION[] = "DISABLE_SIMULATION";
static char __pyx_k__DRAW_FEATURES_TEXT[] = "DRAW_FEATURES_TEXT";
static char __pyx_k__WANTS_DEACTIVATION[] = "WANTS_DEACTIVATION";
static char __pyx_k___dtypeToScalarType[] = "_dtypeToScalarType";
static char __pyx_k__addCollisionObject[] = "addCollisionObject";
static char __pyx_k__getActivationState[] = "getActivationState";
static char __pyx_k__m_collision_normal[] = "m_collision_normal";
static char __pyx_k__setActivationState[] = "setActivationState";
static char __pyx_k__DRAW_CONTACT_POINTS[] = "DRAW_CONTACT_POINTS";
static char __pyx_k__applyCentralImpulse[] = "applyCentralImpulse";
static char __pyx_k__m_triangleIndexBase[] = "m_triangleIndexBase";
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_n_s_10;
static PyObject *__pyx_n_s_11;
static PyObject *__pyx_n_s_12;
static PyObject *__pyx_n_s_13;
static PyObject *__pyx_n_s_14;
static PyObject *__pyx_n_s_15;
static PyObject *__pyx_n_s_16;
static PyObject *__pyx_n_s_17;
static PyObject *__pyx_n_s_18;
static PyObject *__pyx_n_s_2;
static PyObject *__pyx_n_s_21;
static PyObject *__pyx_kp_s_22;
static PyObject *__pyx_n_s_24;
static PyObject *__pyx_n_s_25;
static PyObject *__pyx_kp_u_29;
static PyObject *__pyx_n_s_3;
static PyObject *__pyx_kp_u_31;
static PyObject *__pyx_kp_u_33;
static PyObject *__pyx_kp_u_35;
static PyObject *__pyx_kp_u_36;
static PyObject *__pyx_kp_u_39;
static PyObject *__pyx_kp_s_4;
static PyObject *__pyx_n_s_42;
static PyObject *__pyx_n_s_43;
static PyObject *__pyx_n_s_44;
static PyObject *__pyx_n_s_8;
static PyObject *__pyx_n_s_9;
static PyObject *__pyx_n_s__ACTIVE_TAG;
static PyObject *__pyx_n_s__DISABLE_SIMULATION;
static PyObject *__pyx_n_s__DRAW_AABB;
static PyObject *__pyx_n_s__DRAW_CONSTRAINTS;
static PyObject *__pyx_n_s__DRAW_CONTACT_POINTS;
static PyObject *__pyx_n_s__DRAW_FEATURES_TEXT;
static PyObject *__pyx_n_s__DRAW_TEXT;
static PyObject *__pyx_n_s__DRAW_WIREFRAME;
static PyObject *__pyx_n_s__ISLAND_SLEEPING;
static PyObject *__pyx_n_s__NO_DEBUG;
static PyObject *__pyx_n_s__RuntimeError;
static PyObject *__pyx_n_s__ValueError;
static PyObject *__pyx_n_s__WANTS_DEACTIVATION;
static PyObject *__pyx_n_s__XXX;
static PyObject *__pyx_n_s____init__;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s___dtypeToScalarType;
static PyObject *__pyx_n_s___paircache;
static PyObject *__pyx_n_s___rigidBodies;
static PyObject *__pyx_n_s___shape;
static PyObject *__pyx_n_s__addAction;
static PyObject *__pyx_n_s__addCollisionObject;
static PyObject *__pyx_n_s__addIndexedMesh;
static PyObject *__pyx_n_s__addRigidBody;
static PyObject *__pyx_n_s__angle;
static PyObject *__pyx_n_s__angularDamping;
static PyObject *__pyx_n_s__append;
static PyObject *__pyx_n_s__applyCentralForce;
static PyObject *__pyx_n_s__applyCentralImpulse;
static PyObject *__pyx_n_s__applyForce;
static PyObject *__pyx_n_s__applyImpulse;
static PyObject *__pyx_n_s__axis;
static PyObject *__pyx_n_s__base;
static PyObject *__pyx_n_s__boxHalfExtents;
static PyObject *__pyx_n_s__broadphase;
static PyObject *__pyx_n_s__buf;
static PyObject *__pyx_n_s__buildOptimizedBvh;
static PyObject *__pyx_n_s__byteorder;
static PyObject *__pyx_n_s__char;
static PyObject *__pyx_n_s__collision_normal;
static PyObject *__pyx_n_s__config;
static PyObject *__pyx_n_s__constant;
static PyObject *__pyx_n_s__cross;
static PyObject *__pyx_n_s__data;
static PyObject *__pyx_n_s__debugDraw;
static PyObject *__pyx_n_s__debugDrawWorld;
static PyObject *__pyx_n_s__descr;
static PyObject *__pyx_n_s__dispatcher;
static PyObject *__pyx_n_s__distance;
static PyObject *__pyx_n_s__dot;
static PyObject *__pyx_n_s__dtype;
static PyObject *__pyx_n_s__f;
static PyObject *__pyx_n_s__fields;
static PyObject *__pyx_n_s__fixedTimeStep;
static PyObject *__pyx_n_s__format;
static PyObject *__pyx_n_s__friction;
static PyObject *__pyx_n_s__fromAxisAngle;
static PyObject *__pyx_n_s__fromScalars;
static PyObject *__pyx_n_s__getActivationState;
static PyObject *__pyx_n_s__getAngle;
static PyObject *__pyx_n_s__getAngularDamping;
static PyObject *__pyx_n_s__getAxis;
static PyObject *__pyx_n_s__getCollisionShape;
static PyObject *__pyx_n_s__getFriction;
static PyObject *__pyx_n_s__getGravity;
static PyObject *__pyx_n_s__getInvMass;
static PyObject *__pyx_n_s__getLinearDamping;
static PyObject *__pyx_n_s__getLinearVelocity;
static PyObject *__pyx_n_s__getNumSubParts;
static PyObject *__pyx_n_s__getOrigin;
static PyObject *__pyx_n_s__getRadius;
static PyObject *__pyx_n_s__getRestitution;
static PyObject *__pyx_n_s__getRotation;
static PyObject *__pyx_n_s__getW;
static PyObject *__pyx_n_s__getWorldTransform;
static PyObject *__pyx_n_s__getX;
static PyObject *__pyx_n_s__getY;
static PyObject *__pyx_n_s__getZ;
static PyObject *__pyx_n_s__ghost;
static PyObject *__pyx_n_s__halfExtents;
static PyObject *__pyx_n_s__height;
static PyObject *__pyx_n_s__i;
static PyObject *__pyx_n_s__indexBase;
static PyObject *__pyx_n_s__indexStride;
static PyObject *__pyx_n_s__inertia;
static PyObject *__pyx_n_s__isInWorld;
static PyObject *__pyx_n_s__itemsize;
static PyObject *__pyx_n_s__linearDamping;
static PyObject *__pyx_n_s__lower;
static PyObject *__pyx_n_s__m_angularDamping;
static PyObject *__pyx_n_s__m_collision_normal;
static PyObject *__pyx_n_s__m_distance;
static PyObject *__pyx_n_s__m_friction;
static PyObject *__pyx_n_s__m_indexType;
static PyObject *__pyx_n_s__m_linearDamping;
static PyObject *__pyx_n_s__m_mass;
static PyObject *__pyx_n_s__m_numTriangles;
static PyObject *__pyx_n_s__m_numVertices;
static PyObject *__pyx_n_s__m_position;
static PyObject *__pyx_n_s__m_restitution;
static PyObject *__pyx_n_s__m_triangleIndexBase;
static PyObject *__pyx_n_s__m_triangle_index;
static PyObject *__pyx_n_s__m_vertexBase;
static PyObject *__pyx_n_s__m_vertexStride;
static PyObject *__pyx_n_s__m_vertexType;
static PyObject *__pyx_n_s__mass;
static PyObject *__pyx_n_s__maxSubSteps;
static PyObject *__pyx_n_s__mesh;
static PyObject *__pyx_n_s__more;
static PyObject *__pyx_n_s__motion;
static PyObject *__pyx_n_s__names;
static PyObject *__pyx_n_s__ndim;
static PyObject *__pyx_n_s__normal;
static PyObject *__pyx_n_s__normalize;
static PyObject *__pyx_n_s__numTriangles;
static PyObject *__pyx_n_s__numVertices;
static PyObject *__pyx_n_s__obj;
static PyObject *__pyx_n_s__pop;
static PyObject *__pyx_n_s__position;
static PyObject *__pyx_n_s__quaternion;
static PyObject *__pyx_n_s__radius;
static PyObject *__pyx_n_s__range;
static PyObject *__pyx_n_s__readonly;
static PyObject *__pyx_n_s__relativePosition;
static PyObject *__pyx_n_s__remove;
static PyObject *__pyx_n_s__removeAction;
static PyObject *__pyx_n_s__removeRigidBody;
static PyObject *__pyx_n_s__restitution;
static PyObject *__pyx_n_s__setActivationState;
static PyObject *__pyx_n_s__setAngularFactor;
static PyObject *__pyx_n_s__setCollisionShape;
static PyObject *__pyx_n_s__setDebugDrawer;
static PyObject *__pyx_n_s__setFriction;
static PyObject *__pyx_n_s__setGravity;
static PyObject *__pyx_n_s__setIdentity;
static PyObject *__pyx_n_s__setLinearVelocity;
static PyObject *__pyx_n_s__setOrigin;
static PyObject *__pyx_n_s__setRestitution;
static PyObject *__pyx_n_s__setRotation;
static PyObject *__pyx_n_s__setWalkDirection;
static PyObject *__pyx_n_s__setWorldTransform;
static PyObject *__pyx_n_s__shape;
static PyObject *__pyx_n_s__solver;
static PyObject *__pyx_n_s__stepHeight;
static PyObject *__pyx_n_s__stepSimulation;
static PyObject *__pyx_n_s__stride;
static PyObject *__pyx_n_s__strides;
static PyObject *__pyx_n_s__suboffsets;
static PyObject *__pyx_n_s__thisptr;
static PyObject *__pyx_n_s__timeInterval;
static PyObject *__pyx_n_s__timeStep;
static PyObject *__pyx_n_s__trans;
static PyObject *__pyx_n_s__trans_from;
static PyObject *__pyx_n_s__trans_to;
static PyObject *__pyx_n_s__triangle_index;
static PyObject *__pyx_n_s__type_num;
static PyObject *__pyx_n_s__upAxis;
static PyObject *__pyx_n_s__upper;
static PyObject *__pyx_n_s__velocity;
static PyObject *__pyx_n_s__vertexBase;
static PyObject *__pyx_n_s__vertexStride;
static PyObject *__pyx_n_s__w;
static PyObject *__pyx_n_s__warp;
static PyObject *__pyx_n_s__worldTransform;
static PyObject *__pyx_n_s__x;
static PyObject *__pyx_n_s__y;
static PyObject *__pyx_n_s__z;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_10;
static PyObject *__pyx_int_15;
static PyObject *__pyx_int_100;
static PyObject *__pyx_int_neg_100;
static btScalar __pyx_k_28;
static PyObject *__pyx_k_tuple_5;
static PyObject *__pyx_k_tuple_6;
static PyObject *__pyx_k_tuple_7;
static PyObject *__pyx_k_tuple_19;
static PyObject *__pyx_k_tuple_20;
static PyObject *__pyx_k_tuple_23;
static PyObject *__pyx_k_tuple_26;
static PyObject *__pyx_k_tuple_27;
static PyObject *__pyx_k_tuple_30;
static PyObject *__pyx_k_tuple_32;
static PyObject *__pyx_k_tuple_34;
static PyObject *__pyx_k_tuple_37;
static PyObject *__pyx_k_tuple_38;
static PyObject *__pyx_k_tuple_40;

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":472
 *     cdef readonly btScalar z
 * 
 *     def __cinit__(self, btScalar x, btScalar y, btScalar z):             # <<<<<<<<<<<<<<
 *         self.x = x
 *         self.y = y
 */

static int __pyx_pf_6bullet_6bullet_7Vector3_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_7Vector3_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_x;
  btScalar __pyx_v_y;
  btScalar __pyx_v_z;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__z,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__z);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_z = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_z == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_z = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_z == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.Vector3.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":473
 * 
 *     def __cinit__(self, btScalar x, btScalar y, btScalar z):
 *         self.x = x             # <<<<<<<<<<<<<<
 *         self.y = y
 *         self.z = z
 */
  ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->x = __pyx_v_x;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":474
 *     def __cinit__(self, btScalar x, btScalar y, btScalar z):
 *         self.x = x
 *         self.y = y             # <<<<<<<<<<<<<<
 *         self.z = z
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->y = __pyx_v_y;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":475
 *         self.x = x
 *         self.y = y
 *         self.z = z             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->z = __pyx_v_z;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":478
 * 
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return '<Vector x=%s y=%s z=%s>' % (self.x, self.y, self.z)
 * 
 */

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1__repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__repr__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":479
 * 
 *     def __repr__(self):
 *         return '<Vector x=%s y=%s z=%s>' % (self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->z); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_1), ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = ((PyObject *)__pyx_t_3);
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.__repr__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":482
 * 
 * 
 *     def __mul__(Vector3 self, scale):             # <<<<<<<<<<<<<<
 *         """
 *         Support multiplication of a Vector3 by a scalar.
 */

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_2__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_scale); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_2__mul__[] = "\n        Support multiplication of a Vector3 by a scalar.\n        ";
struct wrapperbase __pyx_wrapperbase_6bullet_6bullet_7Vector3_2__mul__;
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_2__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_scale) {
  PyObject *__pyx_r = NULL;
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("__mul__");
  __Pyx_INCREF(__pyx_v_scale);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_6bullet_6bullet_Vector3, 1, "self", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":486
 *         Support multiplication of a Vector3 by a scalar.
 *         """
 *         scale = float(scale)             # <<<<<<<<<<<<<<
 *         return Vector3(self.x * scale, self.y * scale, self.z * scale)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsDouble(__pyx_v_scale); if (unlikely(__pyx_t_1 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_v_scale);
  __pyx_v_scale = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":487
 *         """
 *         scale = float(scale)
 *         return Vector3(self.x * scale, self.y * scale, self.z * scale)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->x); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_2, __pyx_v_scale); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->y); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_2, __pyx_v_scale); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->z); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyNumber_Multiply(__pyx_t_2, __pyx_v_scale); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bullet.bullet.Vector3.__mul__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_scale);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":490
 * 
 * 
 *     def __add__(Vector3 self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Support addition of two Vector3s.
 */

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_3__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_3__add__[] = "\n        Support addition of two Vector3s.\n        ";
struct wrapperbase __pyx_wrapperbase_6bullet_6bullet_7Vector3_3__add__;
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_3__add__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__add__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_6bullet_6bullet_Vector3, 1, "self", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_6bullet_6bullet_Vector3, 0, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":494
 *         Support addition of two Vector3s.
 *         """
 *         return Vector3(self.x + other.x, self.y + other.y, self.z + other.z)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->x + ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->x)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble((((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->y + ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->y)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble((((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->z + ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->z)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.__add__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":497
 * 
 * 
 *     def __sub__(Vector3 self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Support subtraction of two Vector3s.
 */

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_4__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_4__sub__[] = "\n        Support subtraction of two Vector3s.\n        ";
struct wrapperbase __pyx_wrapperbase_6bullet_6bullet_7Vector3_4__sub__;
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_4__sub__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("__sub__");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_6bullet_6bullet_Vector3, 1, "self", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_6bullet_6bullet_Vector3, 0, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":501
 *         Support subtraction of two Vector3s.
 *         """
 *         return Vector3(self.x - other.x, self.y - other.y, self.z - other.z)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble((((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->x - ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->x)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble((((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->y - ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->y)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble((((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->z - ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->z)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.__sub__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":504
 * 
 * 
 *     def normalized(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return a new normalized L{Vector3} pointing in the same direction as
 */

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_5normalized(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_5normalized[] = "\n        Return a new normalized L{Vector3} pointing in the same direction as\n        this one.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_5normalized(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btVector3 __pyx_v_v;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("normalized");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":509
 *         this one.
 *         """
 *         cdef btVector3 v = btVector3(self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 *         v.normalize()
 *         return Vector3(v.getX(), v.getY(), v.getZ())
 */
  __pyx_v_v = btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":510
 *         """
 *         cdef btVector3 v = btVector3(self.x, self.y, self.z)
 *         v.normalize()             # <<<<<<<<<<<<<<
 *         return Vector3(v.getX(), v.getY(), v.getZ())
 * 
 */
  __pyx_v_v.normalize();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":511
 *         cdef btVector3 v = btVector3(self.x, self.y, self.z)
 *         v.normalize()
 *         return Vector3(v.getX(), v.getY(), v.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_v.getX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_v.getY()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_v.getZ()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.normalized");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":514
 * 
 * 
 *     def cross(self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the vector cross product of this vector and the other one.
 */

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_6cross(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_6cross[] = "\n        Return the vector cross product of this vector and the other one.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_6cross(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  btVector3 __pyx_v_v1;
  btVector3 __pyx_v_v2;
  btVector3 __pyx_v_result;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("cross");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_6bullet_6bullet_Vector3, 0, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":518
 *         Return the vector cross product of this vector and the other one.
 *         """
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)
 *         cdef btVector3 result = v1.cross(v2)
 */
  __pyx_v_v1 = btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":519
 *         """
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 result = v1.cross(v2)
 *         return Vector3(result.getX(), result.getY(), result.getZ())
 */
  __pyx_v_v2 = btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":520
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)
 *         cdef btVector3 result = v1.cross(v2)             # <<<<<<<<<<<<<<
 *         return Vector3(result.getX(), result.getY(), result.getZ())
 * 
 */
  __pyx_v_result = __pyx_v_v1.cross(__pyx_v_v2);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":521
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)
 *         cdef btVector3 result = v1.cross(v2)
 *         return Vector3(result.getX(), result.getY(), result.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_result.getX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_result.getY()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_result.getZ()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 521; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Vector3.cross");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":524
 * 
 * 
 *     def dot(self, Vector3 other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the dot product of this vector and the other one.
 */

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_7dot(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_6bullet_6bullet_7Vector3_7dot[] = "\n        Return the dot product of this vector and the other one.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_7dot(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  btVector3 __pyx_v_v1;
  btVector3 __pyx_v_v2;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("dot");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_6bullet_6bullet_Vector3, 0, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":528
 *         Return the dot product of this vector and the other one.
 *         """
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)
 *         return v1.dot(v2)
 */
  __pyx_v_v1 = btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":529
 *         """
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)             # <<<<<<<<<<<<<<
 *         return v1.dot(v2)
 * 
 */
  __pyx_v_v2 = btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_other)->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":530
 *         cdef btVector3 v1 = btVector3(self.x, self.y, self.z)
 *         cdef btVector3 v2 = btVector3(other.x, other.y, other.z)
 *         return v1.dot(v2)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_v1.dot(__pyx_v_v2)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.dot");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":468
 *     This class is loosely a wrapper around btVector3.
 *     """
 *     cdef readonly btScalar x             # <<<<<<<<<<<<<<
 *     cdef readonly btScalar y
 *     cdef readonly btScalar z
 */

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1x_0__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1x_0__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->x); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.x.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":469
 *     """
 *     cdef readonly btScalar x
 *     cdef readonly btScalar y             # <<<<<<<<<<<<<<
 *     cdef readonly btScalar z
 * 
 */

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1y_0__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1y_0__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->y); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 469; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.y.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":470
 *     cdef readonly btScalar x
 *     cdef readonly btScalar y
 *     cdef readonly btScalar z             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, btScalar x, btScalar y, btScalar z):
 */

static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1z_0__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_7Vector3_1z_0__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_self)->z); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Vector3.z.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":544
 *     cdef btQuaternion* quaternion
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.quaternion
 * 
 */

static void __pyx_pf_6bullet_6bullet_10Quaternion_0__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_10Quaternion_0__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":545
 * 
 *     def __dealloc__(self):
 *         del self.quaternion             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self)->quaternion;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":549
 * 
 *     @classmethod
 *     def fromScalars(cls, btScalar x, btScalar y, btScalar z, btScalar w):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Quaternion from four scalar components.
 */

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_1fromScalars(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_1fromScalars[] = "\n        Construct a new Quaternion from four scalar components.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_1fromScalars(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_x;
  btScalar __pyx_v_y;
  btScalar __pyx_v_z;
  btScalar __pyx_v_w;
  struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_q;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__x,&__pyx_n_s__y,&__pyx_n_s__z,&__pyx_n_s__w,0};
  __Pyx_RefNannySetupContext("fromScalars");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__x);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__y);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromScalars", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__z);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromScalars", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__w);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromScalars", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "fromScalars") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_x = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_x == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_y == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_z = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_z == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_w = __pyx_PyFloat_AsDouble(values[3]); if (unlikely((__pyx_v_w == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_x == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_y == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_z = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_z == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_w = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_w == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fromScalars", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.Quaternion.fromScalars");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_q = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)Py_None); __Pyx_INCREF(Py_None);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":553
 *         Construct a new Quaternion from four scalar components.
 *         """
 *         q = Quaternion()             # <<<<<<<<<<<<<<
 *         q.quaternion = new btQuaternion(x, y, z, w)
 *         return q
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Quaternion)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_v_q));
  __pyx_v_q = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":554
 *         """
 *         q = Quaternion()
 *         q.quaternion = new btQuaternion(x, y, z, w)             # <<<<<<<<<<<<<<
 *         return q
 * 
 */
  __pyx_v_q->quaternion = new btQuaternion(__pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_w);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":555
 *         q = Quaternion()
 *         q.quaternion = new btQuaternion(x, y, z, w)
 *         return q             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_q));
  __pyx_r = ((PyObject *)__pyx_v_q);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.fromScalars");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_q);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":559
 * 
 *     @classmethod
 *     def fromAxisAngle(cls, Vector3 axis not None, btScalar angle):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Quaternion from an axis and a rotation around that axis.
 */

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_2fromAxisAngle(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_2fromAxisAngle[] = "\n        Construct a new Quaternion from an axis and a rotation around that axis.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_2fromAxisAngle(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_axis = 0;
  btScalar __pyx_v_angle;
  struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_q;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__axis,&__pyx_n_s__angle,0};
  __Pyx_RefNannySetupContext("fromAxisAngle");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__axis);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__angle);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromAxisAngle", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "fromAxisAngle") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_axis = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_angle = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_angle == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_axis = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_angle = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_angle == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fromAxisAngle", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.Quaternion.fromAxisAngle");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_q = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)Py_None); __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_axis), __pyx_ptype_6bullet_6bullet_Vector3, 0, "axis", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":563
 *         Construct a new Quaternion from an axis and a rotation around that axis.
 *         """
 *         q = Quaternion()             # <<<<<<<<<<<<<<
 *         q.quaternion = new btQuaternion(
 *             btVector3(axis.x, axis.y, axis.z), angle)
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Quaternion)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_v_q));
  __pyx_v_q = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":564
 *         """
 *         q = Quaternion()
 *         q.quaternion = new btQuaternion(             # <<<<<<<<<<<<<<
 *             btVector3(axis.x, axis.y, axis.z), angle)
 *         return q
 */
  __pyx_v_q->quaternion = new btQuaternion(btVector3(__pyx_v_axis->x, __pyx_v_axis->y, __pyx_v_axis->z), __pyx_v_angle);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":566
 *         q.quaternion = new btQuaternion(
 *             btVector3(axis.x, axis.y, axis.z), angle)
 *         return q             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_q));
  __pyx_r = ((PyObject *)__pyx_v_q);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.fromAxisAngle");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_q);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":569
 * 
 * 
 *     def __mul__(Quaternion self, Quaternion other not None):             # <<<<<<<<<<<<<<
 *         """
 *         Support multiplication of two Quaternions.
 */

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_3__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_3__mul__[] = "\n        Support multiplication of two Quaternions.\n        ";
struct wrapperbase __pyx_wrapperbase_6bullet_6bullet_10Quaternion_3__mul__;
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_3__mul__(PyObject *__pyx_v_self, PyObject *__pyx_v_other) {
  btQuaternion __pyx_v_product;
  struct __pyx_obj_6bullet_6bullet_Quaternion *__pyx_v_result;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__mul__");
  __pyx_v_result = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)Py_None); __Pyx_INCREF(Py_None);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_self), __pyx_ptype_6bullet_6bullet_Quaternion, 1, "self", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_other), __pyx_ptype_6bullet_6bullet_Quaternion, 0, "other", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":573
 *         Support multiplication of two Quaternions.
 *         """
 *         cdef btQuaternion product = self.quaternion[0] * other.quaternion[0]             # <<<<<<<<<<<<<<
 *         result = Quaternion()
 *         result.quaternion = new btQuaternion(
 */
  __pyx_v_product = ((((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self)->quaternion[0]) * (((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_other)->quaternion[0]));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":574
 *         """
 *         cdef btQuaternion product = self.quaternion[0] * other.quaternion[0]
 *         result = Quaternion()             # <<<<<<<<<<<<<<
 *         result.quaternion = new btQuaternion(
 *             product.getAxis(), product.getAngle())
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Quaternion)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_v_result));
  __pyx_v_result = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":575
 *         cdef btQuaternion product = self.quaternion[0] * other.quaternion[0]
 *         result = Quaternion()
 *         result.quaternion = new btQuaternion(             # <<<<<<<<<<<<<<
 *             product.getAxis(), product.getAngle())
 *         return result
 */
  __pyx_v_result->quaternion = new btQuaternion(__pyx_v_product.getAxis(), __pyx_v_product.getAngle());

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":577
 *         result.quaternion = new btQuaternion(
 *             product.getAxis(), product.getAngle())
 *         return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.__mul__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":580
 * 
 * 
 *     def getX(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the X component of the Quaternion.
 */

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_4getX(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_4getX[] = "\n        Get the X component of the Quaternion.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_4getX(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getX");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":584
 *         Get the X component of the Quaternion.
 *         """
 *         return self.quaternion.getX()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self)->quaternion->getX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getX");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":587
 * 
 * 
 *     def getY(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the Y component of the Quaternion.
 */

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_5getY(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_5getY[] = "\n        Get the Y component of the Quaternion.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_5getY(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getY");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":591
 *         Get the Y component of the Quaternion.
 *         """
 *         return self.quaternion.getY()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self)->quaternion->getY()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getY");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":594
 * 
 * 
 *     def getZ(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the Z component of the Quaternion.
 */

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_6getZ(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_6getZ[] = "\n        Get the Z component of the Quaternion.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_6getZ(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getZ");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":598
 *         Get the Z component of the Quaternion.
 *         """
 *         return self.quaternion.getZ()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self)->quaternion->getZ()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getZ");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":601
 * 
 * 
 *     def getW(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the W component of the Quaternion.
 */

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_7getW(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_7getW[] = "\n        Get the W component of the Quaternion.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_7getW(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getW");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":605
 *         Get the W component of the Quaternion.
 *         """
 *         return self.quaternion.getW()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self)->quaternion->getW()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getW");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":608
 * 
 * 
 *     def getAxis(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the axis of rotation represented by this quaternion.
 */

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_8getAxis(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_8getAxis[] = "\n        Return the axis of rotation represented by this quaternion.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_8getAxis(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btVector3 __pyx_v_axis;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getAxis");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":612
 *         Return the axis of rotation represented by this quaternion.
 *         """
 *         cdef btVector3 axis = self.quaternion.getAxis()             # <<<<<<<<<<<<<<
 *         return Vector3(axis.getX(), axis.getY(), axis.getZ())
 * 
 */
  __pyx_v_axis = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self)->quaternion->getAxis();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":613
 *         """
 *         cdef btVector3 axis = self.quaternion.getAxis()
 *         return Vector3(axis.getX(), axis.getY(), axis.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_axis.getX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_axis.getY()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_axis.getZ()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getAxis");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":616
 * 
 * 
 *     def getAngle(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the angle of rotation represented by this quaternion.
 */

static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_9getAngle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_10Quaternion_9getAngle[] = "\n        Return the angle of rotation represented by this quaternion.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_10Quaternion_9getAngle(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getAngle");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":620
 *         Return the angle of rotation represented by this quaternion.
 *         """
 *         return self.quaternion.getAngle()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_self)->quaternion->getAngle()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Quaternion.getAngle");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":634
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_6bullet_6bullet_14CollisionShape_0__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_14CollisionShape_0__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":635
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)__pyx_v_self)->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":657
 *     This class is a wrapper around btBox2dShape.
 *     """
 *     def __cinit__(self, Vector3 boxHalfExtents):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btBox2dShape(
 *             btVector3(boxHalfExtents.x, boxHalfExtents.y, boxHalfExtents.z))
 */

static int __pyx_pf_6bullet_6bullet_10Box2dShape_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_10Box2dShape_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_boxHalfExtents = 0;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__boxHalfExtents,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__boxHalfExtents);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_boxHalfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_boxHalfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.Box2dShape.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_boxHalfExtents), __pyx_ptype_6bullet_6bullet_Vector3, 1, "boxHalfExtents", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":658
 *     """
 *     def __cinit__(self, Vector3 boxHalfExtents):
 *         self.thisptr = new btBox2dShape(             # <<<<<<<<<<<<<<
 *             btVector3(boxHalfExtents.x, boxHalfExtents.y, boxHalfExtents.z))
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_Box2dShape *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr = new btBox2dShape(btVector3(__pyx_v_boxHalfExtents->x, __pyx_v_boxHalfExtents->y, __pyx_v_boxHalfExtents->z));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.Box2dShape.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":671
 *     This class is a wrapper around btBox2dShape.
 *     """
 *     def __cinit__(self, Vector3 boxHalfExtents):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btBoxShape(
 *             btVector3(boxHalfExtents.x, boxHalfExtents.y, boxHalfExtents.z))
 */

static int __pyx_pf_6bullet_6bullet_8BoxShape_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_8BoxShape_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_boxHalfExtents = 0;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__boxHalfExtents,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__boxHalfExtents);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_boxHalfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_boxHalfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.BoxShape.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_boxHalfExtents), __pyx_ptype_6bullet_6bullet_Vector3, 1, "boxHalfExtents", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":672
 *     """
 *     def __cinit__(self, Vector3 boxHalfExtents):
 *         self.thisptr = new btBoxShape(             # <<<<<<<<<<<<<<
 *             btVector3(boxHalfExtents.x, boxHalfExtents.y, boxHalfExtents.z))
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_BoxShape *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr = new btBoxShape(btVector3(__pyx_v_boxHalfExtents->x, __pyx_v_boxHalfExtents->y, __pyx_v_boxHalfExtents->z));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.BoxShape.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":683
 *     This class is a wrapper around btSphereShape.
 *     """
 *     def __cinit__(self, btScalar radius):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btSphereShape(radius)
 * 
 */

static int __pyx_pf_6bullet_6bullet_11SphereShape_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_11SphereShape_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_radius;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__radius,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__radius);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_radius = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_radius == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_radius = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_radius == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 683; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.SphereShape.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":684
 *     """
 *     def __cinit__(self, btScalar radius):
 *         self.thisptr = new btSphereShape(radius)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_SphereShape *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr = new btSphereShape(__pyx_v_radius);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":687
 * 
 * 
 *     def getRadius(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the radius of the sphere.
 */

static PyObject *__pyx_pf_6bullet_6bullet_11SphereShape_1getRadius(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_11SphereShape_1getRadius[] = "\n        Return the radius of the sphere.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_11SphereShape_1getRadius(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getRadius");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":691
 *         Return the radius of the sphere.
 *         """
 *         return (<btSphereShape*>self.thisptr).getRadius()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((btSphereShape *)((struct __pyx_obj_6bullet_6bullet_SphereShape *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr)->getRadius()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.SphereShape.getRadius");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":702
 *     This class is a wrapper around btCapsuleShape.
 *     """
 *     def __cinit__(self, btScalar radius, btScalar height):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCapsuleShape(radius, height)
 * 
 */

static int __pyx_pf_6bullet_6bullet_12CapsuleShape_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_12CapsuleShape_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_radius;
  btScalar __pyx_v_height;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__radius,&__pyx_n_s__height,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__radius);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_radius = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_radius == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_height == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_radius = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_radius == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_height == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CapsuleShape.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":703
 *     """
 *     def __cinit__(self, btScalar radius, btScalar height):
 *         self.thisptr = new btCapsuleShape(radius, height)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CapsuleShape *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr = new btCapsuleShape(__pyx_v_radius, __pyx_v_height);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":714
 *     This class is a wrapper around btCapsuleShape.Z
 *     """
 *     def __cinit__(self, btScalar radius, btScalar height):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCapsuleShapeZ(radius, height)
 * 
 */

static int __pyx_pf_6bullet_6bullet_13CapsuleShapeZ_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_13CapsuleShapeZ_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_radius;
  btScalar __pyx_v_height;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__radius,&__pyx_n_s__height,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__radius);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__height);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 714; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 714; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_radius = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_radius == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 714; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_height == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 714; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_radius = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_radius == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 714; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_height = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_height == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 714; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 714; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CapsuleShapeZ.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":715
 *     """
 *     def __cinit__(self, btScalar radius, btScalar height):
 *         self.thisptr = new btCapsuleShapeZ(radius, height)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CapsuleShapeZ *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.thisptr = new btCapsuleShapeZ(__pyx_v_radius, __pyx_v_height);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":725
 *     This class is a wrapper around btCylinderShape.
 *     """
 *     def __init__(self, Vector3 halfExtents not None):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCylinderShape(
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 */

static int __pyx_pf_6bullet_6bullet_13CylinderShape_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_13CylinderShape_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents = 0;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__halfExtents,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__halfExtents);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 725; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_halfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_halfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 725; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CylinderShape.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_halfExtents), __pyx_ptype_6bullet_6bullet_Vector3, 0, "halfExtents", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":726
 *     """
 *     def __init__(self, Vector3 halfExtents not None):
 *         self.thisptr = new btCylinderShape(             # <<<<<<<<<<<<<<
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CylinderShape *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr = new btCylinderShape(btVector3(__pyx_v_halfExtents->x, __pyx_v_halfExtents->y, __pyx_v_halfExtents->z));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.CylinderShape.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":730
 * 
 * 
 *     def getRadius(self):             # <<<<<<<<<<<<<<
 *         return (<btCylinderShape*>self.thisptr).getRadius()
 * 
 */

static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_1getRadius(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_1getRadius(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getRadius");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":731
 * 
 *     def getRadius(self):
 *         return (<btCylinderShape*>self.thisptr).getRadius()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((btCylinderShape *)((struct __pyx_obj_6bullet_6bullet_CylinderShape *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr)->getRadius()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CylinderShape.getRadius");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":734
 * 
 * 
 *     def getHalfExtentsWithoutMargin(self):             # <<<<<<<<<<<<<<
 *         cdef btVector3 v = (<btCylinderShape*>self.thisptr).getHalfExtentsWithoutMargin()
 *         return Vector3(v.getX(), v.getY(), v.getZ())
 */

static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_2getHalfExtentsWithoutMargin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_13CylinderShape_2getHalfExtentsWithoutMargin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btVector3 __pyx_v_v;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getHalfExtentsWithoutMargin");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":735
 * 
 *     def getHalfExtentsWithoutMargin(self):
 *         cdef btVector3 v = (<btCylinderShape*>self.thisptr).getHalfExtentsWithoutMargin()             # <<<<<<<<<<<<<<
 *         return Vector3(v.getX(), v.getY(), v.getZ())
 * 
 */
  __pyx_v_v = ((btCylinderShape *)((struct __pyx_obj_6bullet_6bullet_CylinderShape *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr)->getHalfExtentsWithoutMargin();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":736
 *     def getHalfExtentsWithoutMargin(self):
 *         cdef btVector3 v = (<btCylinderShape*>self.thisptr).getHalfExtentsWithoutMargin()
 *         return Vector3(v.getX(), v.getY(), v.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_v.getX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_v.getY()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_v.getZ()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.CylinderShape.getHalfExtentsWithoutMargin");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":747
 *     This class is a wrapper around btCylinderShapeX.
 *     """
 *     def __init__(self, Vector3 halfExtents not None):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCylinderShapeX(
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 */

static int __pyx_pf_6bullet_6bullet_14CylinderShapeX_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_14CylinderShapeX_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents = 0;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__halfExtents,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__halfExtents);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 747; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_halfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_halfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 747; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CylinderShapeX.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_halfExtents), __pyx_ptype_6bullet_6bullet_Vector3, 0, "halfExtents", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":748
 *     """
 *     def __init__(self, Vector3 halfExtents not None):
 *         self.thisptr = new btCylinderShapeX(             # <<<<<<<<<<<<<<
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CylinderShapeX *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.thisptr = new btCylinderShapeX(btVector3(__pyx_v_halfExtents->x, __pyx_v_halfExtents->y, __pyx_v_halfExtents->z));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.CylinderShapeX.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":760
 *     This class is a wrapper around btCylinderShapeZ.
 *     """
 *     def __init__(self, Vector3 halfExtents not None):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCylinderShapeZ(
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 */

static int __pyx_pf_6bullet_6bullet_14CylinderShapeZ_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_14CylinderShapeZ_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_halfExtents = 0;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__halfExtents,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__halfExtents);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_halfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_halfExtents = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CylinderShapeZ.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_halfExtents), __pyx_ptype_6bullet_6bullet_Vector3, 0, "halfExtents", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":761
 *     """
 *     def __init__(self, Vector3 halfExtents not None):
 *         self.thisptr = new btCylinderShapeZ(             # <<<<<<<<<<<<<<
 *             btVector3(halfExtents.x, halfExtents.y, halfExtents.z))
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CylinderShapeZ *)__pyx_v_self)->__pyx_base.__pyx_base.__pyx_base.thisptr = new btCylinderShapeZ(btVector3(__pyx_v_halfExtents->x, __pyx_v_halfExtents->y, __pyx_v_halfExtents->z));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.CylinderShapeZ.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":772
 *     This class is a wrapper around btStaticPlaneShape.
 *     """
 *     def __cinit__(self, Vector3 normal not None, btScalar constant):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btStaticPlaneShape(
 *             btVector3(normal.x, normal.y, normal.z), constant)
 */

static int __pyx_pf_6bullet_6bullet_16StaticPlaneShape_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_16StaticPlaneShape_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_normal = 0;
  btScalar __pyx_v_constant;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__normal,&__pyx_n_s__constant,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__normal);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__constant);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_normal = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_constant = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_constant == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_normal = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_constant = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_constant == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.StaticPlaneShape.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_normal), __pyx_ptype_6bullet_6bullet_Vector3, 0, "normal", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":773
 *     """
 *     def __cinit__(self, Vector3 normal not None, btScalar constant):
 *         self.thisptr = new btStaticPlaneShape(             # <<<<<<<<<<<<<<
 *             btVector3(normal.x, normal.y, normal.z), constant)
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_StaticPlaneShape *)__pyx_v_self)->__pyx_base.thisptr = new btStaticPlaneShape(btVector3(__pyx_v_normal->x, __pyx_v_normal->y, __pyx_v_normal->z), __pyx_v_constant);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.StaticPlaneShape.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":800
 *     cdef btIndexedMesh* thisptr
 * 
 *     cdef PHY_ScalarType _dtypeToScalarType(self, numpy.ndarray array):             # <<<<<<<<<<<<<<
 *         cdef char *dname = array.dtype.char
 *         cdef char dtype = dname[0]
 */

static  enum PHY_ScalarType __pyx_f_6bullet_6bullet_11IndexedMesh__dtypeToScalarType(struct __pyx_obj_6bullet_6bullet_IndexedMesh *__pyx_v_self, PyArrayObject *__pyx_v_array) {
  char *__pyx_v_dname;
  char __pyx_v_dtype;
  enum PHY_ScalarType __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  char *__pyx_t_3;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("_dtypeToScalarType");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":801
 * 
 *     cdef PHY_ScalarType _dtypeToScalarType(self, numpy.ndarray array):
 *         cdef char *dname = array.dtype.char             # <<<<<<<<<<<<<<
 *         cdef char dtype = dname[0]
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_array), __pyx_n_s__dtype); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__char); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = PyBytes_AsString(__pyx_t_2); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_dname = __pyx_t_3;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":802
 *     cdef PHY_ScalarType _dtypeToScalarType(self, numpy.ndarray array):
 *         cdef char *dname = array.dtype.char
 *         cdef char dtype = dname[0]             # <<<<<<<<<<<<<<
 * 
 *         if dtype == 'f':
 */
  __pyx_v_dtype = (__pyx_v_dname[0]);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":804
 *         cdef char dtype = dname[0]
 * 
 *         if dtype == 'f':             # <<<<<<<<<<<<<<
 *             return PHY_FLOAT
 *         elif dtype == 'd':
 */
  __pyx_t_4 = (__pyx_v_dtype == 'f');
  if (__pyx_t_4) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":805
 * 
 *         if dtype == 'f':
 *             return PHY_FLOAT             # <<<<<<<<<<<<<<
 *         elif dtype == 'd':
 *             return PHY_DOUBLE
 */
    __pyx_r = PHY_FLOAT;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":806
 *         if dtype == 'f':
 *             return PHY_FLOAT
 *         elif dtype == 'd':             # <<<<<<<<<<<<<<
 *             return PHY_DOUBLE
 *         elif dtype == 'i':
 */
  __pyx_t_4 = (__pyx_v_dtype == 'd');
  if (__pyx_t_4) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":807
 *             return PHY_FLOAT
 *         elif dtype == 'd':
 *             return PHY_DOUBLE             # <<<<<<<<<<<<<<
 *         elif dtype == 'i':
 *             return PHY_INTEGER
 */
    __pyx_r = PHY_DOUBLE;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":808
 *         elif dtype == 'd':
 *             return PHY_DOUBLE
 *         elif dtype == 'i':             # <<<<<<<<<<<<<<
 *             return PHY_INTEGER
 *         elif dtype == 'h':
 */
  __pyx_t_4 = (__pyx_v_dtype == 'i');
  if (__pyx_t_4) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":809
 *             return PHY_DOUBLE
 *         elif dtype == 'i':
 *             return PHY_INTEGER             # <<<<<<<<<<<<<<
 *         elif dtype == 'h':
 *             return PHY_SHORT
 */
    __pyx_r = PHY_INTEGER;
    goto __pyx_L0;
    goto __pyx_L3;
  }

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":810
 *         elif dtype == 'i':
 *             return PHY_INTEGER
 *         elif dtype == 'h':             # <<<<<<<<<<<<<<
 *             return PHY_SHORT
 *         return <PHY_ScalarType>-1
 */
  __pyx_t_4 = (__pyx_v_dtype == 'h');
  if (__pyx_t_4) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":811
 *             return PHY_INTEGER
 *         elif dtype == 'h':
 *             return PHY_SHORT             # <<<<<<<<<<<<<<
 *         return <PHY_ScalarType>-1
 * 
 */
    __pyx_r = PHY_SHORT;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":812
 *         elif dtype == 'h':
 *             return PHY_SHORT
 *         return <PHY_ScalarType>-1             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((enum PHY_ScalarType)-1);
  goto __pyx_L0;

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("bullet.bullet.IndexedMesh._dtypeToScalarType");
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":815
 * 
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btIndexedMesh()
 *         self.thisptr.m_numTriangles = 0
 */

static int __pyx_pf_6bullet_6bullet_11IndexedMesh_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_11IndexedMesh_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":816
 * 
 *     def __cinit__(self):
 *         self.thisptr = new btIndexedMesh()             # <<<<<<<<<<<<<<
 *         self.thisptr.m_numTriangles = 0
 *         self.thisptr.m_triangleIndexBase = NULL
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr = new btIndexedMesh();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":817
 *     def __cinit__(self):
 *         self.thisptr = new btIndexedMesh()
 *         self.thisptr.m_numTriangles = 0             # <<<<<<<<<<<<<<
 *         self.thisptr.m_triangleIndexBase = NULL
 *         self.thisptr.m_triangleIndexStride = 0
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_numTriangles = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":818
 *         self.thisptr = new btIndexedMesh()
 *         self.thisptr.m_numTriangles = 0
 *         self.thisptr.m_triangleIndexBase = NULL             # <<<<<<<<<<<<<<
 *         self.thisptr.m_triangleIndexStride = 0
 *         self.thisptr.m_numVertices = 0
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_triangleIndexBase = NULL;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":819
 *         self.thisptr.m_numTriangles = 0
 *         self.thisptr.m_triangleIndexBase = NULL
 *         self.thisptr.m_triangleIndexStride = 0             # <<<<<<<<<<<<<<
 *         self.thisptr.m_numVertices = 0
 *         self.thisptr.m_vertexBase = NULL
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_triangleIndexStride = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":820
 *         self.thisptr.m_triangleIndexBase = NULL
 *         self.thisptr.m_triangleIndexStride = 0
 *         self.thisptr.m_numVertices = 0             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexBase = NULL
 *         self.thisptr.m_vertexStride = 0
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_numVertices = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":821
 *         self.thisptr.m_triangleIndexStride = 0
 *         self.thisptr.m_numVertices = 0
 *         self.thisptr.m_vertexBase = NULL             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexStride = 0
 *         self.thisptr.m_indexType = PHY_FLOAT
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_vertexBase = NULL;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":822
 *         self.thisptr.m_numVertices = 0
 *         self.thisptr.m_vertexBase = NULL
 *         self.thisptr.m_vertexStride = 0             # <<<<<<<<<<<<<<
 *         self.thisptr.m_indexType = PHY_FLOAT
 *         self.thisptr.m_vertexType = PHY_FLOAT
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_vertexStride = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":823
 *         self.thisptr.m_vertexBase = NULL
 *         self.thisptr.m_vertexStride = 0
 *         self.thisptr.m_indexType = PHY_FLOAT             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexType = PHY_FLOAT
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_indexType = PHY_FLOAT;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":824
 *         self.thisptr.m_vertexStride = 0
 *         self.thisptr.m_indexType = PHY_FLOAT
 *         self.thisptr.m_vertexType = PHY_FLOAT             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_vertexType = PHY_FLOAT;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":827
 * 
 * 
 *     def setIndices(self, int numTriangles, int indexStride,             # <<<<<<<<<<<<<<
 *                    numpy.ndarray indexBase not None):
 *         """
 */

static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_1setIndices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_11IndexedMesh_1setIndices[] = "\n        Specify the index data for for this IndexedMesh.\n\n        numTriangles specifies the total number of triangles this mesh will\n        contain.\n\n        indexStride gives the distance in bytes between the start of each triple\n        of values defining a triangle.\n\n        indexBase is a numpy array giving the index data itself.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_1setIndices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_numTriangles;
  int __pyx_v_indexStride;
  PyArrayObject *__pyx_v_indexBase = 0;
  enum PHY_ScalarType __pyx_v_indexType;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__numTriangles,&__pyx_n_s__indexStride,&__pyx_n_s__indexBase,0};
  __Pyx_RefNannySetupContext("setIndices");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__numTriangles);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__indexStride);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("setIndices", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__indexBase);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("setIndices", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "setIndices") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_numTriangles = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_numTriangles == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_indexStride = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_indexStride == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_indexBase = ((PyArrayObject *)values[2]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_numTriangles = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_numTriangles == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_indexStride = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_indexStride == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_indexBase = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 2));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setIndices", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.setIndices");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_indexBase), __pyx_ptype_5numpy_ndarray, 0, "indexBase", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":840
 *         indexBase is a numpy array giving the index data itself.
 *         """
 *         cdef PHY_ScalarType indexType = self._dtypeToScalarType(indexBase)             # <<<<<<<<<<<<<<
 *         if indexType == -1:
 *             raise ValueError("Unsupported index array type")
 */
  __pyx_v_indexType = ((struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh *)((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->__pyx_vtab)->_dtypeToScalarType(((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self), __pyx_v_indexBase);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":841
 *         """
 *         cdef PHY_ScalarType indexType = self._dtypeToScalarType(indexBase)
 *         if indexType == -1:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unsupported index array type")
 * 
 */
  __pyx_t_1 = (__pyx_v_indexType == -1);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":842
 *         cdef PHY_ScalarType indexType = self._dtypeToScalarType(indexBase)
 *         if indexType == -1:
 *             raise ValueError("Unsupported index array type")             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr.m_numTriangles = numTriangles
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_5), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":844
 *             raise ValueError("Unsupported index array type")
 * 
 *         self.thisptr.m_numTriangles = numTriangles             # <<<<<<<<<<<<<<
 *         self.thisptr.m_triangleIndexStride = indexStride
 *         self.thisptr.m_triangleIndexBase = <unsigned char*>indexBase.data
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_numTriangles = __pyx_v_numTriangles;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":845
 * 
 *         self.thisptr.m_numTriangles = numTriangles
 *         self.thisptr.m_triangleIndexStride = indexStride             # <<<<<<<<<<<<<<
 *         self.thisptr.m_triangleIndexBase = <unsigned char*>indexBase.data
 *         self.thisptr.m_indexType = indexType
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_triangleIndexStride = __pyx_v_indexStride;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":846
 *         self.thisptr.m_numTriangles = numTriangles
 *         self.thisptr.m_triangleIndexStride = indexStride
 *         self.thisptr.m_triangleIndexBase = <unsigned char*>indexBase.data             # <<<<<<<<<<<<<<
 *         self.thisptr.m_indexType = indexType
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_triangleIndexBase = ((unsigned char *)__pyx_v_indexBase->data);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":847
 *         self.thisptr.m_triangleIndexStride = indexStride
 *         self.thisptr.m_triangleIndexBase = <unsigned char*>indexBase.data
 *         self.thisptr.m_indexType = indexType             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_indexType = __pyx_v_indexType;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.setIndices");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":850
 * 
 * 
 *     def setVertices(self, int numVertices, int vertexStride,             # <<<<<<<<<<<<<<
 *                     numpy.ndarray vertexBase not None):
 *         """
 */

static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_2setVertices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_11IndexedMesh_2setVertices[] = "\n        Specify the vertex data for this IndexedMesh.\n\n        numVertices specifies the total number of vertices this mesh will\n        contain.\n\n        vertexStride gives the distance in bytes between the start of each\n        triple of values defining a vertex.\n\n        vertexBase is a numpy array giving the vertex data itself.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_11IndexedMesh_2setVertices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_numVertices;
  int __pyx_v_vertexStride;
  PyArrayObject *__pyx_v_vertexBase = 0;
  enum PHY_ScalarType __pyx_v_vertexType;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__numVertices,&__pyx_n_s__vertexStride,&__pyx_n_s__vertexBase,0};
  __Pyx_RefNannySetupContext("setVertices");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__numVertices);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__vertexStride);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("setVertices", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__vertexBase);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("setVertices", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "setVertices") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_numVertices = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_numVertices == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_vertexStride = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_vertexStride == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_vertexBase = ((PyArrayObject *)values[2]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_numVertices = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_numVertices == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_vertexStride = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_vertexStride == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_vertexBase = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 2));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setVertices", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 850; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.setVertices");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_vertexBase), __pyx_ptype_5numpy_ndarray, 0, "vertexBase", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":863
 *         vertexBase is a numpy array giving the vertex data itself.
 *         """
 *         cdef PHY_ScalarType vertexType = self._dtypeToScalarType(vertexBase)             # <<<<<<<<<<<<<<
 *         if vertexType == -1:
 *             raise ValueError("Unsupported index array type")
 */
  __pyx_v_vertexType = ((struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh *)((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->__pyx_vtab)->_dtypeToScalarType(((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self), __pyx_v_vertexBase);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":864
 *         """
 *         cdef PHY_ScalarType vertexType = self._dtypeToScalarType(vertexBase)
 *         if vertexType == -1:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unsupported index array type")
 * 
 */
  __pyx_t_1 = (__pyx_v_vertexType == -1);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":865
 *         cdef PHY_ScalarType vertexType = self._dtypeToScalarType(vertexBase)
 *         if vertexType == -1:
 *             raise ValueError("Unsupported index array type")             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr.m_numVertices = numVertices
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_6), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":867
 *             raise ValueError("Unsupported index array type")
 * 
 *         self.thisptr.m_numVertices = numVertices             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexStride = vertexStride
 *         self.thisptr.m_vertexBase = <unsigned char*>vertexBase.data
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_numVertices = __pyx_v_numVertices;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":868
 * 
 *         self.thisptr.m_numVertices = numVertices
 *         self.thisptr.m_vertexStride = vertexStride             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexBase = <unsigned char*>vertexBase.data
 *         self.thisptr.m_vertexType = vertexType
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_vertexStride = __pyx_v_vertexStride;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":869
 *         self.thisptr.m_numVertices = numVertices
 *         self.thisptr.m_vertexStride = vertexStride
 *         self.thisptr.m_vertexBase = <unsigned char*>vertexBase.data             # <<<<<<<<<<<<<<
 *         self.thisptr.m_vertexType = vertexType
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_vertexBase = ((unsigned char *)__pyx_v_vertexBase->data);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":870
 *         self.thisptr.m_vertexStride = vertexStride
 *         self.thisptr.m_vertexBase = <unsigned char*>vertexBase.data
 *         self.thisptr.m_vertexType = vertexType             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr->m_vertexType = __pyx_v_vertexType;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bullet.bullet.IndexedMesh.setVertices");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":873
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_6bullet_6bullet_11IndexedMesh_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_11IndexedMesh_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":874
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_self)->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":889
 *     cdef btStridingMeshInterface *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_6bullet_6bullet_21StridingMeshInterface_0__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_21StridingMeshInterface_0__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":890
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)__pyx_v_self)->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":893
 * 
 * 
 *     def getNumSubParts(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the number of separate continuous vertex arrays are part of this
 */

static PyObject *__pyx_pf_6bullet_6bullet_21StridingMeshInterface_1getNumSubParts(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_21StridingMeshInterface_1getNumSubParts[] = "\n        Return the number of separate continuous vertex arrays are part of this\n        StridingMeshInterface.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_21StridingMeshInterface_1getNumSubParts(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getNumSubParts");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":898
 *         StridingMeshInterface.
 *         """
 *         return self.thisptr.getNumSubParts()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)__pyx_v_self)->thisptr->getNumSubParts()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.StridingMeshInterface.getNumSubParts");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":912
 *     This class is a wrapper around btTriangleIndexVertexArray.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btTriangleIndexVertexArray()
 * 
 */

static int __pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":913
 *     """
 *     def __cinit__(self):
 *         self.thisptr = new btTriangleIndexVertexArray()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *)__pyx_v_self)->__pyx_base.thisptr = new btTriangleIndexVertexArray();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":916
 * 
 * 
 *     def addIndexedMesh(self, IndexedMesh mesh not None):             # <<<<<<<<<<<<<<
 *         """
 *         Add another IndexedMesh to this index/vertex array.
 */

static PyObject *__pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_1addIndexedMesh(PyObject *__pyx_v_self, PyObject *__pyx_v_mesh); /*proto*/
static char __pyx_doc_6bullet_6bullet_24TriangleIndexVertexArray_1addIndexedMesh[] = "\n        Add another IndexedMesh to this index/vertex array.\n\n        XXX When is it necessary to rebuild the optimized bvh on\n        BvhTriangleMeshShape with respect to changes to this\n        TriangleIndexVertexArray.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_1addIndexedMesh(PyObject *__pyx_v_self, PyObject *__pyx_v_mesh) {
  btTriangleIndexVertexArray *__pyx_v_array;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("addIndexedMesh");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_mesh), __pyx_ptype_6bullet_6bullet_IndexedMesh, 0, "mesh", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":924
 *         TriangleIndexVertexArray.
 *         """
 *         if mesh.thisptr.m_vertexType == PHY_INTEGER:             # <<<<<<<<<<<<<<
 *             raise ValueError("XXX")
 *         cdef btTriangleIndexVertexArray *array
 */
  __pyx_t_1 = (((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_mesh)->thisptr->m_vertexType == PHY_INTEGER);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":925
 *         """
 *         if mesh.thisptr.m_vertexType == PHY_INTEGER:
 *             raise ValueError("XXX")             # <<<<<<<<<<<<<<
 *         cdef btTriangleIndexVertexArray *array
 *         array = <btTriangleIndexVertexArray*>self.thisptr
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_7), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":927
 *             raise ValueError("XXX")
 *         cdef btTriangleIndexVertexArray *array
 *         array = <btTriangleIndexVertexArray*>self.thisptr             # <<<<<<<<<<<<<<
 *         array.addIndexedMesh(mesh.thisptr[0], mesh.thisptr.m_indexType)
 * 
 */
  __pyx_v_array = ((btTriangleIndexVertexArray *)((struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":928
 *         cdef btTriangleIndexVertexArray *array
 *         array = <btTriangleIndexVertexArray*>self.thisptr
 *         array.addIndexedMesh(mesh.thisptr[0], mesh.thisptr.m_indexType)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_array->addIndexedMesh((((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_mesh)->thisptr[0]), ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)__pyx_v_mesh)->thisptr->m_indexType);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bullet.bullet.TriangleIndexVertexArray.addIndexedMesh");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":941
 *     cdef StridingMeshInterface stride
 * 
 *     def __init__(self, StridingMeshInterface mesh not None):             # <<<<<<<<<<<<<<
 *         self.stride = mesh
 *         self.thisptr = new btBvhTriangleMeshShape(mesh.thisptr, True, True)
 */

static int __pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *__pyx_v_mesh = 0;
  int __pyx_r;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__mesh,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mesh);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_mesh = ((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)values[0]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_mesh = ((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)PyTuple_GET_ITEM(__pyx_args, 0));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.BvhTriangleMeshShape.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_mesh), __pyx_ptype_6bullet_6bullet_StridingMeshInterface, 0, "mesh", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 941; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":942
 * 
 *     def __init__(self, StridingMeshInterface mesh not None):
 *         self.stride = mesh             # <<<<<<<<<<<<<<
 *         self.thisptr = new btBvhTriangleMeshShape(mesh.thisptr, True, True)
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_mesh));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_mesh));
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)__pyx_v_self)->stride);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)__pyx_v_self)->stride));
  ((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)__pyx_v_self)->stride = __pyx_v_mesh;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":943
 *     def __init__(self, StridingMeshInterface mesh not None):
 *         self.stride = mesh
 *         self.thisptr = new btBvhTriangleMeshShape(mesh.thisptr, True, True)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr = new btBvhTriangleMeshShape(__pyx_v_mesh->thisptr, 1, 1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.BvhTriangleMeshShape.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":946
 * 
 * 
 *     def buildOptimizedBvh(self):             # <<<<<<<<<<<<<<
 *         """
 *         Build the internal optimized Bounding Volume Hierarchy structure to
 */

static PyObject *__pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_1buildOptimizedBvh(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_20BvhTriangleMeshShape_1buildOptimizedBvh[] = "\n        Build the internal optimized Bounding Volume Hierarchy structure to\n        allow fast collision detection between this and other shapes.\n\n        XXX You probably have to call this if you ever change the underlying\n        mesh.  But I don't know.\n\n        XXX You also have to call it before you try to use this shape for\n        collision detection.\n\n        XXX You also must put data into the underlying mesh or an assert will\n        fail in bullet.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_1buildOptimizedBvh(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("buildOptimizedBvh");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":961
 *         """
 *         # XXX This is executed by the test suite, but it's not actually tested.
 *         (<btBvhTriangleMeshShape*>self.thisptr).buildOptimizedBvh()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((btBvhTriangleMeshShape *)((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr)->buildOptimizedBvh();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":977
 *     cdef btTransform *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btTransform()
 *         self.thisptr.setIdentity()
 */

static int __pyx_pf_6bullet_6bullet_9Transform_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_9Transform_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":978
 * 
 *     def __cinit__(self):
 *         self.thisptr = new btTransform()             # <<<<<<<<<<<<<<
 *         self.thisptr.setIdentity()
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self)->thisptr = new btTransform();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":979
 *     def __cinit__(self):
 *         self.thisptr = new btTransform()
 *         self.thisptr.setIdentity()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self)->thisptr->setIdentity();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":982
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_6bullet_6bullet_9Transform_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_9Transform_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":983
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self)->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":986
 * 
 * 
 *     def getOrigin(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the origin vector translation as a Vector3.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_2getOrigin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9Transform_2getOrigin[] = "\n        Get the origin vector translation as a Vector3.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_2getOrigin(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btVector3 __pyx_v_origin;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getOrigin");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":990
 *         Get the origin vector translation as a Vector3.
 *         """
 *         cdef btVector3 origin = self.thisptr.getOrigin()             # <<<<<<<<<<<<<<
 *         return Vector3(origin.getX(), origin.getY(), origin.getZ())
 * 
 */
  __pyx_v_origin = ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self)->thisptr->getOrigin();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":991
 *         """
 *         cdef btVector3 origin = self.thisptr.getOrigin()
 *         return Vector3(origin.getX(), origin.getY(), origin.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_origin.getX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_origin.getY()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_origin.getZ()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 991; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.Transform.getOrigin");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":994
 * 
 * 
 *     def setOrigin(self, Vector3 origin not None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the origin vector translation for this Transform.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_3setOrigin(PyObject *__pyx_v_self, PyObject *__pyx_v_origin); /*proto*/
static char __pyx_doc_6bullet_6bullet_9Transform_3setOrigin[] = "\n        Set the origin vector translation for this Transform.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_3setOrigin(PyObject *__pyx_v_self, PyObject *__pyx_v_origin) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setOrigin");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_origin), __pyx_ptype_6bullet_6bullet_Vector3, 0, "origin", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 994; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":998
 *         Set the origin vector translation for this Transform.
 *         """
 *         self.thisptr.setOrigin(btVector3(origin.x, origin.y, origin.z))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self)->thisptr->setOrigin(btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_origin)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_origin)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_origin)->z));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.Transform.setOrigin");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1001
 * 
 * 
 *     def setRotation(self, Quaternion rot not None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the rotation of this Transform using a Quaternion.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_4setRotation(PyObject *__pyx_v_self, PyObject *__pyx_v_rot); /*proto*/
static char __pyx_doc_6bullet_6bullet_9Transform_4setRotation[] = "\n        Set the rotation of this Transform using a Quaternion.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_4setRotation(PyObject *__pyx_v_self, PyObject *__pyx_v_rot) {
  btQuaternion *__pyx_v_quat;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setRotation");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rot), __pyx_ptype_6bullet_6bullet_Quaternion, 0, "rot", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1001; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1005
 *         Set the rotation of this Transform using a Quaternion.
 *         """
 *         cdef btQuaternion *quat = rot.quaternion             # <<<<<<<<<<<<<<
 *         self.thisptr.setRotation(quat[0])
 * 
 */
  __pyx_v_quat = ((struct __pyx_obj_6bullet_6bullet_Quaternion *)__pyx_v_rot)->quaternion;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1006
 *         """
 *         cdef btQuaternion *quat = rot.quaternion
 *         self.thisptr.setRotation(quat[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self)->thisptr->setRotation((__pyx_v_quat[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.Transform.setRotation");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1009
 * 
 * 
 *     def getRotation(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the rotation of this Transform as a Quaternion.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_5getRotation(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9Transform_5getRotation[] = "\n        Get the rotation of this Transform as a Quaternion.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_5getRotation(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btQuaternion __pyx_v_quat;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_RefNannySetupContext("getRotation");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1013
 *         Get the rotation of this Transform as a Quaternion.
 *         """
 *         cdef btQuaternion quat = self.thisptr.getRotation()             # <<<<<<<<<<<<<<
 *         return Quaternion.fromScalars(
 *             quat.getX(), quat.getY(), quat.getZ(), quat.getW())
 */
  __pyx_v_quat = ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self)->thisptr->getRotation();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1014
 *         """
 *         cdef btQuaternion quat = self.thisptr.getRotation()
 *         return Quaternion.fromScalars(             # <<<<<<<<<<<<<<
 *             quat.getX(), quat.getY(), quat.getZ(), quat.getW())
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Quaternion)), __pyx_n_s__fromScalars); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1015
 *         cdef btQuaternion quat = self.thisptr.getRotation()
 *         return Quaternion.fromScalars(
 *             quat.getX(), quat.getY(), quat.getZ(), quat.getW())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_quat.getX()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_quat.getY()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_quat.getZ()); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_quat.getW()); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_6));
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("bullet.bullet.Transform.getRotation");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1018
 * 
 * 
 *     def setIdentity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set this Transform to be the identity.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9Transform_6setIdentity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9Transform_6setIdentity[] = "\n        Set this Transform to be the identity.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9Transform_6setIdentity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setIdentity");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1022
 *         Set this Transform to be the identity.
 *         """
 *         self.thisptr.setIdentity()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_self)->thisptr->setIdentity();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1043
 *     cdef CollisionShape _shape
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCollisionObject()
 * 
 */

static int __pyx_pf_6bullet_6bullet_15CollisionObject_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_15CollisionObject_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1044
 * 
 *     def __init__(self):
 *         self.thisptr = new btCollisionObject()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr = new btCollisionObject();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1047
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_6bullet_6bullet_15CollisionObject_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_15CollisionObject_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1048
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1051
 * 
 * 
 *     def getFriction(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the friction value for this L{CollisionObject}.
 */

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_2getFriction(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_2getFriction[] = "\n        Return the friction value for this L{CollisionObject}.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_2getFriction(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getFriction");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1055
 *         Return the friction value for this L{CollisionObject}.
 *         """
 *         return self.thisptr.getFriction()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr->getFriction()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1055; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.getFriction");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1058
 * 
 * 
 *     def setFriction(self, btScalar friction):             # <<<<<<<<<<<<<<
 *         """
 *         Change the friction value for this L{CollisionObject}.
 */

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_3setFriction(PyObject *__pyx_v_self, PyObject *__pyx_arg_friction); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_3setFriction[] = "\n        Change the friction value for this L{CollisionObject}.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_3setFriction(PyObject *__pyx_v_self, PyObject *__pyx_arg_friction) {
  btScalar __pyx_v_friction;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setFriction");
  assert(__pyx_arg_friction); {
    __pyx_v_friction = __pyx_PyFloat_AsDouble(__pyx_arg_friction); if (unlikely((__pyx_v_friction == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1058; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.setFriction");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1062
 *         Change the friction value for this L{CollisionObject}.
 *         """
 *         self.thisptr.setFriction(friction)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr->setFriction(__pyx_v_friction);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1065
 * 
 * 
 *     def setRestitution(self, btScalar restitution):             # <<<<<<<<<<<<<<
 *         """
 *         Specify a scaling factor to be applied to the normal impulse computed
 */

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_4setRestitution(PyObject *__pyx_v_self, PyObject *__pyx_arg_restitution); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_4setRestitution[] = "\n        Specify a scaling factor to be applied to the normal impulse computed\n        when this object collides with another.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_4setRestitution(PyObject *__pyx_v_self, PyObject *__pyx_arg_restitution) {
  btScalar __pyx_v_restitution;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setRestitution");
  assert(__pyx_arg_restitution); {
    __pyx_v_restitution = __pyx_PyFloat_AsDouble(__pyx_arg_restitution); if (unlikely((__pyx_v_restitution == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1065; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.setRestitution");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1070
 *         when this object collides with another.
 *         """
 *         self.thisptr.setRestitution(restitution)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr->setRestitution(__pyx_v_restitution);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1073
 * 
 * 
 *     def getRestitution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the restitution value for this object.
 */

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_5getRestitution(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_5getRestitution[] = "\n        Get the restitution value for this object.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_5getRestitution(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getRestitution");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1077
 *         Get the restitution value for this object.
 *         """
 *         return self.thisptr.getRestitution()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr->getRestitution()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.getRestitution");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1080
 * 
 * 
 *     def getCollisionShape(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the CollisionShape associated with this object.
 */

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_6getCollisionShape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_6getCollisionShape[] = "\n        Get the CollisionShape associated with this object.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_6getCollisionShape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("getCollisionShape");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1084
 *         Get the CollisionShape associated with this object.
 *         """
 *         return self._shape             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->_shape));
  __pyx_r = ((PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->_shape);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1087
 * 
 * 
 *     def setCollisionShape(self, CollisionShape collisionShape):             # <<<<<<<<<<<<<<
 *         """
 *         Replace this object's CollisionShape.
 */

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_7setCollisionShape(PyObject *__pyx_v_self, PyObject *__pyx_v_collisionShape); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_7setCollisionShape[] = "\n        Replace this object's CollisionShape.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_7setCollisionShape(PyObject *__pyx_v_self, PyObject *__pyx_v_collisionShape) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setCollisionShape");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_collisionShape), __pyx_ptype_6bullet_6bullet_CollisionShape, 1, "collisionShape", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1091
 *         Replace this object's CollisionShape.
 *         """
 *         self.thisptr.setCollisionShape(collisionShape.thisptr)             # <<<<<<<<<<<<<<
 *         self._shape = collisionShape
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr->setCollisionShape(((struct __pyx_obj_6bullet_6bullet_CollisionShape *)__pyx_v_collisionShape)->thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1092
 *         """
 *         self.thisptr.setCollisionShape(collisionShape.thisptr)
 *         self._shape = collisionShape             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_INCREF(__pyx_v_collisionShape);
  __Pyx_GIVEREF(__pyx_v_collisionShape);
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->_shape);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->_shape));
  ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)__pyx_v_collisionShape);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.setCollisionShape");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1095
 * 
 * 
 *     def getWorldTransform(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get a copy of the transformation for this CollisionObject as a Transform
 */

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_8getWorldTransform(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_8getWorldTransform[] = "\n        Get a copy of the transformation for this CollisionObject as a Transform\n        instance.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_8getWorldTransform(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_transform = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getWorldTransform");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1100
 *         instance.
 *         """
 *         cdef Transform transform = Transform()             # <<<<<<<<<<<<<<
 *         # TODO This leaks memory, and then corrupts memory and crashes, I think.
 *         transform.thisptr[0] = self.thisptr.getWorldTransform()
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Transform)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1100; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_transform = ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1102
 *         cdef Transform transform = Transform()
 *         # TODO This leaks memory, and then corrupts memory and crashes, I think.
 *         transform.thisptr[0] = self.thisptr.getWorldTransform()             # <<<<<<<<<<<<<<
 *         return transform
 * 
 */
  (__pyx_v_transform->thisptr[0]) = ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr->getWorldTransform();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1103
 *         # TODO This leaks memory, and then corrupts memory and crashes, I think.
 *         transform.thisptr[0] = self.thisptr.getWorldTransform()
 *         return transform             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_transform));
  __pyx_r = ((PyObject *)__pyx_v_transform);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.getWorldTransform");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_transform);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1106
 * 
 * 
 *     def setWorldTransform(self, Transform transform not None):             # <<<<<<<<<<<<<<
 *         """
 *         Replace the transformation for this CollisionObject.
 */

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_9setWorldTransform(PyObject *__pyx_v_self, PyObject *__pyx_v_transform); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_9setWorldTransform[] = "\n        Replace the transformation for this CollisionObject.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_9setWorldTransform(PyObject *__pyx_v_self, PyObject *__pyx_v_transform) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setWorldTransform");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_transform), __pyx_ptype_6bullet_6bullet_Transform, 0, "transform", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1110
 *         Replace the transformation for this CollisionObject.
 *         """
 *         self.thisptr.setWorldTransform(transform.thisptr[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr->setWorldTransform((((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_transform)->thisptr[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.setWorldTransform");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1113
 * 
 * 
 *     def getActivationState(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the current activation state of this object.
 */

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_10getActivationState(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_10getActivationState[] = "\n        Return the current activation state of this object.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_10getActivationState(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getActivationState");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1117
 *         Return the current activation state of this object.
 *         """
 *         return self.thisptr.getActivationState()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr->getActivationState()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.getActivationState");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1120
 * 
 * 
 *     def setActivationState(self, int newState):             # <<<<<<<<<<<<<<
 *         """
 *         Change the activation state of this object.  newState must be one of:
 */

static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_11setActivationState(PyObject *__pyx_v_self, PyObject *__pyx_arg_newState); /*proto*/
static char __pyx_doc_6bullet_6bullet_15CollisionObject_11setActivationState[] = "\n        Change the activation state of this object.  newState must be one of:\n\n          - ACTIVE_TAG\n          - ISLAND_SLEEPING\n          - WANTS_DEACTIVATION\n          - DISABLE_DEACTIVATION\n          - DISABLE_SIMULATION\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_15CollisionObject_11setActivationState(PyObject *__pyx_v_self, PyObject *__pyx_arg_newState) {
  int __pyx_v_newState;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setActivationState");
  assert(__pyx_arg_newState); {
    __pyx_v_newState = __Pyx_PyInt_AsInt(__pyx_arg_newState); if (unlikely((__pyx_v_newState == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1120; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionObject.setActivationState");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1130
 *           - DISABLE_SIMULATION
 *         """
 *         self.thisptr.setActivationState(newState)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_self)->thisptr->setActivationState(__pyx_v_newState);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1150
 *     cdef btMotionState *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_6bullet_6bullet_11MotionState_0__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_11MotionState_0__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1151
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_MotionState *)__pyx_v_self)->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1154
 * 
 * 
 *     def getWorldTransform(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get a copy of the transformation for this motion state as a Transform
 */

static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_1getWorldTransform(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_11MotionState_1getWorldTransform[] = "\n        Get a copy of the transformation for this motion state as a Transform\n        instance.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_1getWorldTransform(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_transform;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getWorldTransform");
  __pyx_v_transform = ((struct __pyx_obj_6bullet_6bullet_Transform *)Py_None); __Pyx_INCREF(Py_None);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1159
 *         instance.
 *         """
 *         transform = Transform()             # <<<<<<<<<<<<<<
 *         self.thisptr.getWorldTransform(transform.thisptr[0])
 *         return transform
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Transform)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_v_transform));
  __pyx_v_transform = ((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1160
 *         """
 *         transform = Transform()
 *         self.thisptr.getWorldTransform(transform.thisptr[0])             # <<<<<<<<<<<<<<
 *         return transform
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_MotionState *)__pyx_v_self)->thisptr->getWorldTransform((__pyx_v_transform->thisptr[0]));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1161
 *         transform = Transform()
 *         self.thisptr.getWorldTransform(transform.thisptr[0])
 *         return transform             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_transform));
  __pyx_r = ((PyObject *)__pyx_v_transform);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.MotionState.getWorldTransform");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_transform);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1164
 * 
 * 
 *     def setWorldTransform(self, Transform centerOfMassWorldTrans not None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the transformation for this motion state.  This will probably have
 */

static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_2setWorldTransform(PyObject *__pyx_v_self, PyObject *__pyx_v_centerOfMassWorldTrans); /*proto*/
static char __pyx_doc_6bullet_6bullet_11MotionState_2setWorldTransform[] = "\n        Set the transformation for this motion state.  This will probably have\n        no meaningful effect on the state of the world containing the object\n        this MotionState is associated with.\n\n        XXX If this method is overridden in a subclass, the overridden method\n        will not be called by Bullet.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_11MotionState_2setWorldTransform(PyObject *__pyx_v_self, PyObject *__pyx_v_centerOfMassWorldTrans) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setWorldTransform");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_centerOfMassWorldTrans), __pyx_ptype_6bullet_6bullet_Transform, 0, "centerOfMassWorldTrans", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1173
 *         will not be called by Bullet.
 *         """
 *         self.thisptr.setWorldTransform(centerOfMassWorldTrans.thisptr[0])             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_MotionState *)__pyx_v_self)->thisptr->setWorldTransform((((struct __pyx_obj_6bullet_6bullet_Transform *)__pyx_v_centerOfMassWorldTrans)->thisptr[0]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.MotionState.setWorldTransform");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1188
 *     wrapping doesn't really make sense and will probably be changed.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btDefaultMotionState()
 * 
 */

static int __pyx_pf_6bullet_6bullet_18DefaultMotionState_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_18DefaultMotionState_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1189
 *     """
 *     def __cinit__(self):
 *         self.thisptr = new btDefaultMotionState()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_DefaultMotionState *)__pyx_v_self)->__pyx_base.thisptr = new btDefaultMotionState();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1208
 *     cdef CollisionShape shape
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  MotionState motion = None,
 *                  CollisionShape shape = None,
 */

static int __pyx_pf_6bullet_6bullet_9RigidBody_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_9RigidBody_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_motion = 0;
  struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_shape = 0;
  btScalar __pyx_v_mass;
  btVector3 __pyx_v_inertia;
  btRigidBody::btRigidBodyConstructionInfo *__pyx_v_info;
  int __pyx_r;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__motion,&__pyx_n_s__shape,&__pyx_n_s__mass,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1209
 * 
 *     def __init__(self,
 *                  MotionState motion = None,             # <<<<<<<<<<<<<<
 *                  CollisionShape shape = None,
 *                  btScalar mass = 0.0):
 */
    values[0] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_MotionState *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1210
 *     def __init__(self,
 *                  MotionState motion = None,
 *                  CollisionShape shape = None,             # <<<<<<<<<<<<<<
 *                  btScalar mass = 0.0):
 *         if motion is None:
 */
    values[1] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__motion);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__shape);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mass);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)values[0]);
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)values[1]);
    if (values[2]) {
      __pyx_v_mass = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_mass == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1211; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1211
 *                  MotionState motion = None,
 *                  CollisionShape shape = None,
 *                  btScalar mass = 0.0):             # <<<<<<<<<<<<<<
 *         if motion is None:
 *             motion = DefaultMotionState()
 */
      __pyx_v_mass = ((btScalar)0.0);
    }
  } else {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1209
 * 
 *     def __init__(self,
 *                  MotionState motion = None,             # <<<<<<<<<<<<<<
 *                  CollisionShape shape = None,
 *                  btScalar mass = 0.0):
 */
    __pyx_v_motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1210
 *     def __init__(self,
 *                  MotionState motion = None,
 *                  CollisionShape shape = None,             # <<<<<<<<<<<<<<
 *                  btScalar mass = 0.0):
 *         if motion is None:
 */
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1211
 *                  MotionState motion = None,
 *                  CollisionShape shape = None,
 *                  btScalar mass = 0.0):             # <<<<<<<<<<<<<<
 *         if motion is None:
 *             motion = DefaultMotionState()
 */
    __pyx_v_mass = ((btScalar)0.0);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_mass = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_mass == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1211; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)PyTuple_GET_ITEM(__pyx_args, 0));
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1208; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_motion);
  __Pyx_INCREF((PyObject *)__pyx_v_shape);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_motion), __pyx_ptype_6bullet_6bullet_MotionState, 1, "motion", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), __pyx_ptype_6bullet_6bullet_CollisionShape, 1, "shape", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1212
 *                  CollisionShape shape = None,
 *                  btScalar mass = 0.0):
 *         if motion is None:             # <<<<<<<<<<<<<<
 *             motion = DefaultMotionState()
 *         if shape is None:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_motion) == Py_None);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1213
 *                  btScalar mass = 0.0):
 *         if motion is None:
 *             motion = DefaultMotionState()             # <<<<<<<<<<<<<<
 *         if shape is None:
 *             shape = BoxShape(Vector3(0.5, 0.5, 0.5))
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_DefaultMotionState)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_v_motion));
    __pyx_v_motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1214
 *         if motion is None:
 *             motion = DefaultMotionState()
 *         if shape is None:             # <<<<<<<<<<<<<<
 *             shape = BoxShape(Vector3(0.5, 0.5, 0.5))
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_shape) == Py_None);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1215
 *             motion = DefaultMotionState()
 *         if shape is None:
 *             shape = BoxShape(Vector3(0.5, 0.5, 0.5))             # <<<<<<<<<<<<<<
 * 
 *         self.motion = motion
 */
    __pyx_t_2 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_BoxShape)), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_v_shape));
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)__pyx_t_4);
    __pyx_t_4 = 0;
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1217
 *             shape = BoxShape(Vector3(0.5, 0.5, 0.5))
 * 
 *         self.motion = motion             # <<<<<<<<<<<<<<
 *         self.shape = shape
 * 
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_motion));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_motion));
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->motion);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->motion));
  ((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->motion = __pyx_v_motion;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1218
 * 
 *         self.motion = motion
 *         self.shape = shape             # <<<<<<<<<<<<<<
 * 
 *         cdef btVector3 inertia = btVector3(0, 0, 0)
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_shape));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_shape));
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->shape);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->shape));
  ((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->shape = __pyx_v_shape;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1220
 *         self.shape = shape
 * 
 *         cdef btVector3 inertia = btVector3(0, 0, 0)             # <<<<<<<<<<<<<<
 *         # TODO This is a weak heuristic to avoid using calculateLocalInertia on
 *         # a shape that does not support it (and will probably SIGABRT the
 */
  __pyx_v_inertia = btVector3(0.0, 0.0, 0.0);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1226
 *         # explicitly list the shapes which cannot have their local inertia
 *         # calculated.
 *         if mass != 0.0:             # <<<<<<<<<<<<<<
 *             shape.thisptr.calculateLocalInertia(mass, inertia)
 * 
 */
  __pyx_t_1 = (__pyx_v_mass != 0.0);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1227
 *         # calculated.
 *         if mass != 0.0:
 *             shape.thisptr.calculateLocalInertia(mass, inertia)             # <<<<<<<<<<<<<<
 * 
 *         cdef btRigidBodyConstructionInfo* info
 */
    __pyx_v_shape->thisptr->calculateLocalInertia(__pyx_v_mass, __pyx_v_inertia);
    goto __pyx_L8;
  }
  __pyx_L8:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1231
 *         cdef btRigidBodyConstructionInfo* info
 *         info = new btRigidBodyConstructionInfo(
 *             mass, self.motion.thisptr, self.shape.thisptr, inertia)             # <<<<<<<<<<<<<<
 *         self.thisptr = new btRigidBody(info[0])
 *         del info
 */
  __pyx_v_info = new btRigidBody::btRigidBodyConstructionInfo(__pyx_v_mass, ((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->motion->thisptr, ((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->shape->thisptr, __pyx_v_inertia);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1232
 *         info = new btRigidBodyConstructionInfo(
 *             mass, self.motion.thisptr, self.shape.thisptr, inertia)
 *         self.thisptr = new btRigidBody(info[0])             # <<<<<<<<<<<<<<
 *         del info
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr = new btRigidBody((__pyx_v_info[0]));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1233
 *             mass, self.motion.thisptr, self.shape.thisptr, inertia)
 *         self.thisptr = new btRigidBody(info[0])
 *         del info             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete __pyx_v_info;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_motion);
  __Pyx_DECREF((PyObject *)__pyx_v_shape);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1237
 * 
 *     @classmethod
 *     def fromConstructionInfo(cls, MotionState motion,             # <<<<<<<<<<<<<<
 *                              CollisionShape shape, btScalar mass,
 *                              Vector3 inertia, Transform worldTransform,
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_1fromConstructionInfo(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_1fromConstructionInfo[] = "\n        Create a new L{RigidBody} instance, specifying all of its parameters.\n\n        @param motion: A L{MotionState} instance which specifies the body's\n            initial world transform and which will receive motion updates for\n            the body.  If specified, worldTransform is ignored.\n\n        @param shape: A L{CollisionShape} instance which specifies the body's\n            shape for collision detection.\n\n        @param mass: The body's mass.  Setting this to C{0} creates a fixed\n            (static; non-dynamic; stationary) body.\n\n        @param worldTransform: A L{Transform} which specifies the body's initial\n            position and orientation in the world.  Only used if C{motion} is\n            not given.\n\n        @param linearDamping: A value between 0 and 1 which is used to dampen\n            linear velocity.  Higher values dampen more.\n\n        @param angularDamping: A value between 0 and 1 which is used to dampen\n            angular velocity.  Higher values dampen more.\n\n        @param friction: The friction value this body constributes to friction\n            calculates.\n\n        @param restitution: The coefficient of restitution for this body, giving\n            the ratio of speed after and before a collision with another object.\n\n        @param linearSleepingThreshold: See L{getLinearSleepingThreshold}.\n\n        @param angularSleepingThreshold: See L{getAngularSleepingThreshold}.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_1fromConstructionInfo(PyObject *__pyx_v_cls, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_MotionState *__pyx_v_motion = 0;
  struct __pyx_obj_6bullet_6bullet_CollisionShape *__pyx_v_shape = 0;
  btScalar __pyx_v_mass;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_inertia = 0;
  struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_worldTransform = 0;
  btScalar __pyx_v_linearDamping;
  btScalar __pyx_v_angularDamping;
  btScalar __pyx_v_friction;
  btScalar __pyx_v_restitution;
  btScalar __pyx_v_linearSleepingThreshold;
  btScalar __pyx_v_angularSleepingThreshold;
  struct __pyx_obj_6bullet_6bullet_RigidBody *__pyx_v_body = 0;
  btRigidBody::btRigidBodyConstructionInfo *__pyx_v_info;
  btMotionState *__pyx_v_motionState;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__motion,&__pyx_n_s__shape,&__pyx_n_s__mass,&__pyx_n_s__inertia,&__pyx_n_s__worldTransform,&__pyx_n_s__linearDamping,&__pyx_n_s__angularDamping,&__pyx_n_s__friction,&__pyx_n_s__restitution,&__pyx_n_s_9,&__pyx_n_s_10,0};
  __Pyx_RefNannySetupContext("fromConstructionInfo");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[11] = {0,0,0,0,0,0,0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
      case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
      case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
      case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
      case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__motion);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__shape);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__mass);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__inertia);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  4:
      values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__worldTransform);
      if (likely(values[4])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  5:
      values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__linearDamping);
      if (likely(values[5])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  6:
      values[6] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__angularDamping);
      if (likely(values[6])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 6); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  7:
      values[7] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__friction);
      if (likely(values[7])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 7); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  8:
      values[8] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__restitution);
      if (likely(values[8])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 8); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  9:
      values[9] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_9);
      if (likely(values[9])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 9); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case 10:
      values[10] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_10);
      if (likely(values[10])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, 10); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "fromConstructionInfo") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)values[0]);
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)values[1]);
    __pyx_v_mass = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_mass == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1238; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_inertia = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[3]);
    __pyx_v_worldTransform = ((struct __pyx_obj_6bullet_6bullet_Transform *)values[4]);
    __pyx_v_linearDamping = __pyx_PyFloat_AsDouble(values[5]); if (unlikely((__pyx_v_linearDamping == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1240; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_angularDamping = __pyx_PyFloat_AsDouble(values[6]); if (unlikely((__pyx_v_angularDamping == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1240; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_friction = __pyx_PyFloat_AsDouble(values[7]); if (unlikely((__pyx_v_friction == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_restitution = __pyx_PyFloat_AsDouble(values[8]); if (unlikely((__pyx_v_restitution == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_linearSleepingThreshold = __pyx_PyFloat_AsDouble(values[9]); if (unlikely((__pyx_v_linearSleepingThreshold == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1242; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_angularSleepingThreshold = __pyx_PyFloat_AsDouble(values[10]); if (unlikely((__pyx_v_angularSleepingThreshold == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1243; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 11) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_mass = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_mass == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1238; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_inertia = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 3));
    __pyx_v_worldTransform = ((struct __pyx_obj_6bullet_6bullet_Transform *)PyTuple_GET_ITEM(__pyx_args, 4));
    __pyx_v_linearDamping = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 5)); if (unlikely((__pyx_v_linearDamping == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1240; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_angularDamping = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 6)); if (unlikely((__pyx_v_angularDamping == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1240; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_friction = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 7)); if (unlikely((__pyx_v_friction == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_restitution = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 8)); if (unlikely((__pyx_v_restitution == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_linearSleepingThreshold = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 9)); if (unlikely((__pyx_v_linearSleepingThreshold == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1242; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_angularSleepingThreshold = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 10)); if (unlikely((__pyx_v_angularSleepingThreshold == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1243; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fromConstructionInfo", 1, 11, 11, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.fromConstructionInfo");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_motion), __pyx_ptype_6bullet_6bullet_MotionState, 1, "motion", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), __pyx_ptype_6bullet_6bullet_CollisionShape, 1, "shape", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_inertia), __pyx_ptype_6bullet_6bullet_Vector3, 1, "inertia", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_worldTransform), __pyx_ptype_6bullet_6bullet_Transform, 1, "worldTransform", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1277
 *         @param angularSleepingThreshold: See L{getAngularSleepingThreshold}.
 *         """
 *         cdef RigidBody body = cls.__new__(cls)             # <<<<<<<<<<<<<<
 *         cdef btRigidBodyConstructionInfo *info
 *         cdef btMotionState *motionState
 */
  if (unlikely(__pyx_v_cls == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object.__new__(X): X is not a type object (NoneType)"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1277; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = __Pyx_tp_new(((PyObject*)__pyx_v_cls)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_6bullet_6bullet_RigidBody)))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_body = ((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1281
 *         cdef btMotionState *motionState
 * 
 *         if motion is not None:             # <<<<<<<<<<<<<<
 *             motionState = motion.thisptr
 *         else:
 */
  __pyx_t_2 = (((PyObject *)__pyx_v_motion) != Py_None);
  if (__pyx_t_2) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1282
 * 
 *         if motion is not None:
 *             motionState = motion.thisptr             # <<<<<<<<<<<<<<
 *         else:
 *             motionState = <btMotionState*>0
 */
    __pyx_v_motionState = __pyx_v_motion->thisptr;
    goto __pyx_L6;
  }
  /*else*/ {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1284
 *             motionState = motion.thisptr
 *         else:
 *             motionState = <btMotionState*>0             # <<<<<<<<<<<<<<
 * 
 *         info = new btRigidBodyConstructionInfo(
 */
    __pyx_v_motionState = ((btMotionState *)0);
  }
  __pyx_L6:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1288
 *         info = new btRigidBodyConstructionInfo(
 *             mass, motionState, shape.thisptr,
 *             btVector3(inertia.x, inertia.y, inertia.z))             # <<<<<<<<<<<<<<
 * 
 *         info.m_mass = mass
 */
  __pyx_v_info = new btRigidBody::btRigidBodyConstructionInfo(__pyx_v_mass, __pyx_v_motionState, __pyx_v_shape->thisptr, btVector3(__pyx_v_inertia->x, __pyx_v_inertia->y, __pyx_v_inertia->z));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1290
 *             btVector3(inertia.x, inertia.y, inertia.z))
 * 
 *         info.m_mass = mass             # <<<<<<<<<<<<<<
 *         info.m_startWorldTransform = worldTransform.thisptr[0]
 *         info.m_linearDamping = linearDamping
 */
  __pyx_v_info->m_mass = __pyx_v_mass;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1291
 * 
 *         info.m_mass = mass
 *         info.m_startWorldTransform = worldTransform.thisptr[0]             # <<<<<<<<<<<<<<
 *         info.m_linearDamping = linearDamping
 *         info.m_angularDamping = angularDamping
 */
  __pyx_v_info->m_startWorldTransform = (__pyx_v_worldTransform->thisptr[0]);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1292
 *         info.m_mass = mass
 *         info.m_startWorldTransform = worldTransform.thisptr[0]
 *         info.m_linearDamping = linearDamping             # <<<<<<<<<<<<<<
 *         info.m_angularDamping = angularDamping
 *         info.m_friction = friction
 */
  __pyx_v_info->m_linearDamping = __pyx_v_linearDamping;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1293
 *         info.m_startWorldTransform = worldTransform.thisptr[0]
 *         info.m_linearDamping = linearDamping
 *         info.m_angularDamping = angularDamping             # <<<<<<<<<<<<<<
 *         info.m_friction = friction
 *         info.m_restitution = restitution
 */
  __pyx_v_info->m_angularDamping = __pyx_v_angularDamping;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1294
 *         info.m_linearDamping = linearDamping
 *         info.m_angularDamping = angularDamping
 *         info.m_friction = friction             # <<<<<<<<<<<<<<
 *         info.m_restitution = restitution
 *         info.m_linearSleepingThreshold = linearSleepingThreshold
 */
  __pyx_v_info->m_friction = __pyx_v_friction;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1295
 *         info.m_angularDamping = angularDamping
 *         info.m_friction = friction
 *         info.m_restitution = restitution             # <<<<<<<<<<<<<<
 *         info.m_linearSleepingThreshold = linearSleepingThreshold
 *         info.m_angularSleepingThreshold = angularSleepingThreshold
 */
  __pyx_v_info->m_restitution = __pyx_v_restitution;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1296
 *         info.m_friction = friction
 *         info.m_restitution = restitution
 *         info.m_linearSleepingThreshold = linearSleepingThreshold             # <<<<<<<<<<<<<<
 *         info.m_angularSleepingThreshold = angularSleepingThreshold
 * 
 */
  __pyx_v_info->m_linearSleepingThreshold = __pyx_v_linearSleepingThreshold;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1297
 *         info.m_restitution = restitution
 *         info.m_linearSleepingThreshold = linearSleepingThreshold
 *         info.m_angularSleepingThreshold = angularSleepingThreshold             # <<<<<<<<<<<<<<
 * 
 *         body.thisptr = new btRigidBody(info[0])
 */
  __pyx_v_info->m_angularSleepingThreshold = __pyx_v_angularSleepingThreshold;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1299
 *         info.m_angularSleepingThreshold = angularSleepingThreshold
 * 
 *         body.thisptr = new btRigidBody(info[0])             # <<<<<<<<<<<<<<
 *         body.motion = motion
 *         body._shape = shape
 */
  __pyx_v_body->__pyx_base.thisptr = new btRigidBody((__pyx_v_info[0]));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1300
 * 
 *         body.thisptr = new btRigidBody(info[0])
 *         body.motion = motion             # <<<<<<<<<<<<<<
 *         body._shape = shape
 *         del info
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_motion));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_motion));
  __Pyx_GOTREF(__pyx_v_body->motion);
  __Pyx_DECREF(((PyObject *)__pyx_v_body->motion));
  __pyx_v_body->motion = __pyx_v_motion;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1301
 *         body.thisptr = new btRigidBody(info[0])
 *         body.motion = motion
 *         body._shape = shape             # <<<<<<<<<<<<<<
 *         del info
 *         return body
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_shape));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_shape));
  __Pyx_GOTREF(__pyx_v_body->__pyx_base._shape);
  __Pyx_DECREF(((PyObject *)__pyx_v_body->__pyx_base._shape));
  __pyx_v_body->__pyx_base._shape = __pyx_v_shape;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1302
 *         body.motion = motion
 *         body._shape = shape
 *         del info             # <<<<<<<<<<<<<<
 *         return body
 * 
 */
  delete __pyx_v_info;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1303
 *         body._shape = shape
 *         del info
 *         return body             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_body));
  __pyx_r = ((PyObject *)__pyx_v_body);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.fromConstructionInfo");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_body);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1306
 * 
 * 
 *     def isInWorld(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return a boolean indicating whether or not this RigidBody has been added
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_2isInWorld(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_2isInWorld[] = "\n        Return a boolean indicating whether or not this RigidBody has been added\n        to a CollisionWorld.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_2isInWorld(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("isInWorld");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1312
 *         """
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.isInWorld()
 * 
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1313
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr
 *         return body.isInWorld()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_to_py_bool(__pyx_v_body->isInWorld()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.isInWorld");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1316
 * 
 * 
 *     def getInvMass(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the inverse of the mass of this L{RigidBody}.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_3getInvMass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_3getInvMass[] = "\n        Return the inverse of the mass of this L{RigidBody}.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_3getInvMass(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getInvMass");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1321
 *         """
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.getInvMass()
 * 
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1322
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr
 *         return body.getInvMass()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_body->getInvMass()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getInvMass");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1325
 * 
 * 
 *     def getInvInertiaDiagLocal(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the inverse of the local inertia vector.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_4getInvInertiaDiagLocal(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_4getInvInertiaDiagLocal[] = "\n        Return the inverse of the local inertia vector.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_4getInvInertiaDiagLocal(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_inertia;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getInvInertiaDiagLocal");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1330
 *         """
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 inertia = body.getInvInertiaDiagLocal()
 *         return Vector3(inertia.getX(), inertia.getY(), inertia.getZ())
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1331
 *         cdef btRigidBody *body
 *         body = <btRigidBody*>self.thisptr
 *         cdef btVector3 inertia = body.getInvInertiaDiagLocal()             # <<<<<<<<<<<<<<
 *         return Vector3(inertia.getX(), inertia.getY(), inertia.getZ())
 * 
 */
  __pyx_v_inertia = __pyx_v_body->getInvInertiaDiagLocal();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1332
 *         body = <btRigidBody*>self.thisptr
 *         cdef btVector3 inertia = body.getInvInertiaDiagLocal()
 *         return Vector3(inertia.getX(), inertia.getY(), inertia.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_inertia.getX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_inertia.getY()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_inertia.getZ()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getInvInertiaDiagLocal");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1335
 * 
 * 
 *     def getMotionState(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the MotionState associated with this RigidBody.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_5getMotionState(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_5getMotionState[] = "\n        Return the MotionState associated with this RigidBody.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_5getMotionState(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("getMotionState");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1339
 *         Return the MotionState associated with this RigidBody.
 *         """
 *         return self.motion             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->motion));
  __pyx_r = ((PyObject *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->motion);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1342
 * 
 * 
 *     def setAngularFactor(self, btScalar angularFactor):             # <<<<<<<<<<<<<<
 *         """
 *         Specify whether this object will be allowed to rotate or not.  If the
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_6setAngularFactor(PyObject *__pyx_v_self, PyObject *__pyx_arg_angularFactor); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_6setAngularFactor[] = "\n        Specify whether this object will be allowed to rotate or not.  If the\n        given angularFactor argument is 0, rotation will not be allowed.  If it\n        is 1, rotation will be allowed.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_6setAngularFactor(PyObject *__pyx_v_self, PyObject *__pyx_arg_angularFactor) {
  btScalar __pyx_v_angularFactor;
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setAngularFactor");
  assert(__pyx_arg_angularFactor); {
    __pyx_v_angularFactor = __pyx_PyFloat_AsDouble(__pyx_arg_angularFactor); if (unlikely((__pyx_v_angularFactor == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1342; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.setAngularFactor");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1348
 *         is 1, rotation will be allowed.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         body.setAngularFactor(angularFactor)
 * 
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1349
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         body.setAngularFactor(angularFactor)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->setAngularFactor(__pyx_v_angularFactor);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1352
 * 
 * 
 *     def setLinearVelocity(self, Vector3 v not None):             # <<<<<<<<<<<<<<
 *         """
 *         Change the linear velocity of this RigidBody for at least a single
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_7setLinearVelocity(PyObject *__pyx_v_self, PyObject *__pyx_v_v); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_7setLinearVelocity[] = "\n        Change the linear velocity of this RigidBody for at least a single\n        simulation step.  It is unspecified whether the change will persist for\n        more than one simulation step.  For reliable and reproducable results,\n        you must set the linear velocity before each simulation tick.  This is\n        best done in the physics tick callback.\n\n        XXX The physics tick callback is presently unexposed.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_7setLinearVelocity(PyObject *__pyx_v_self, PyObject *__pyx_v_v) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_vel;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setLinearVelocity");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_v), __pyx_ptype_6bullet_6bullet_Vector3, 0, "v", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1362
 *         XXX The physics tick callback is presently unexposed.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 vel = btVector3(v.x, v.y, v.z)
 *         body.setLinearVelocity(vel)
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1363
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 vel = btVector3(v.x, v.y, v.z)             # <<<<<<<<<<<<<<
 *         body.setLinearVelocity(vel)
 * 
 */
  __pyx_v_vel = btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_v)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_v)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_v)->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1364
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 vel = btVector3(v.x, v.y, v.z)
 *         body.setLinearVelocity(vel)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->setLinearVelocity(__pyx_v_vel);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.setLinearVelocity");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1367
 * 
 * 
 *     def getLinearVelocity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve the current linear velocity of this RigidBody as a Vector3.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_8getLinearVelocity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_8getLinearVelocity[] = "\n        Retrieve the current linear velocity of this RigidBody as a Vector3.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_8getLinearVelocity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_vel;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getLinearVelocity");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1371
 *         Retrieve the current linear velocity of this RigidBody as a Vector3.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 vel = body.getLinearVelocity()
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1372
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 vel = body.getLinearVelocity()             # <<<<<<<<<<<<<<
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())
 * 
 */
  __pyx_v_vel = __pyx_v_body->getLinearVelocity();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1373
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 vel = body.getLinearVelocity()
 *         return Vector3(vel.getX(), vel.getY(), vel.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_vel.getX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_vel.getY()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_vel.getZ()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1373; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getLinearVelocity");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1376
 * 
 * 
 *     def getLinearDamping(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the linear velocity damping value for this RigidBody.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_9getLinearDamping(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_9getLinearDamping[] = "\n        Return the linear velocity damping value for this RigidBody.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_9getLinearDamping(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getLinearDamping");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1380
 *         Return the linear velocity damping value for this RigidBody.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.getLinearDamping()
 * 
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1381
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         return body.getLinearDamping()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_body->getLinearDamping()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getLinearDamping");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1384
 * 
 * 
 *     def getLinearSleepingThreshold(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the linear velocity threshold below which the body will not be
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_10getLinearSleepingThreshold(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_10getLinearSleepingThreshold[] = "\n        Return the linear velocity threshold below which the body will not be\n        deactivated.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_10getLinearSleepingThreshold(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getLinearSleepingThreshold");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1389
 *         deactivated.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.getLinearSleepingThreshold()
 * 
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1390
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         return body.getLinearSleepingThreshold()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_body->getLinearSleepingThreshold()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1390; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getLinearSleepingThreshold");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1393
 * 
 * 
 *     def getAngularSleepingThreshold(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the linear velocity threshold below which the body will not be
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_11getAngularSleepingThreshold(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_11getAngularSleepingThreshold[] = "\n        Return the linear velocity threshold below which the body will not be\n        deactivated.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_11getAngularSleepingThreshold(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getAngularSleepingThreshold");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1398
 *         deactivated.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.getAngularSleepingThreshold()
 * 
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1399
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         return body.getAngularSleepingThreshold()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_body->getAngularSleepingThreshold()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getAngularSleepingThreshold");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1402
 * 
 * 
 *     def getAngularDamping(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the angular velocity damping value for this RigidBody.
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_12getAngularDamping(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_12getAngularDamping[] = "\n        Return the angular velocity damping value for this RigidBody.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_12getAngularDamping(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btRigidBody *__pyx_v_body;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getAngularDamping");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1406
 *         Return the angular velocity damping value for this RigidBody.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         return body.getAngularDamping()
 * 
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1407
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         return body.getAngularDamping()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_body->getAngularDamping()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.RigidBody.getAngularDamping");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1410
 * 
 * 
 *     def applyCentralForce(self, Vector3 f not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply a force to the center of mass of this RigidBody.  The resulting
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_13applyCentralForce(PyObject *__pyx_v_self, PyObject *__pyx_v_f); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_13applyCentralForce[] = "\n        Apply a force to the center of mass of this RigidBody.  The resulting\n        acceleration is computed in the usual way, dividing the force by the\n        mass of the RigidBody.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_13applyCentralForce(PyObject *__pyx_v_self, PyObject *__pyx_v_f) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_force;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("applyCentralForce");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_f), __pyx_ptype_6bullet_6bullet_Vector3, 0, "f", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1416
 *         mass of the RigidBody.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)
 *         body.applyCentralForce(force)
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1417
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)             # <<<<<<<<<<<<<<
 *         body.applyCentralForce(force)
 * 
 */
  __pyx_v_force = btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_f)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_f)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_f)->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1418
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)
 *         body.applyCentralForce(force)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->applyCentralForce(__pyx_v_force);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.applyCentralForce");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1421
 * 
 * 
 *     def applyForce(self, Vector3 f not None, Vector3 relativePosition not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply a force to this RigidBody at a specified offset from its center of
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_14applyForce(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_14applyForce[] = "\n        Apply a force to this RigidBody at a specified offset from its center of\n        mass.  The resulting acceleration is computed in the usual way, dividing\n        the force by the mass of the RigidBody.  A force applied off-center may\n        also result in rotation.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_14applyForce(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_f = 0;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_relativePosition = 0;
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_force;
  btVector3 __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__f,&__pyx_n_s__relativePosition,0};
  __Pyx_RefNannySetupContext("applyForce");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__f);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__relativePosition);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("applyForce", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "applyForce") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_f = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_relativePosition = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[1]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_f = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_relativePosition = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 1));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("applyForce", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.applyForce");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_f), __pyx_ptype_6bullet_6bullet_Vector3, 0, "f", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_relativePosition), __pyx_ptype_6bullet_6bullet_Vector3, 0, "relativePosition", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1428
 *         also result in rotation.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)
 *         cdef btVector3 pos = btVector3(
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1429
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 pos = btVector3(
 *             relativePosition.x, relativePosition.y, relativePosition.z)
 */
  __pyx_v_force = btVector3(__pyx_v_f->x, __pyx_v_f->y, __pyx_v_f->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1431
 *         cdef btVector3 force = btVector3(f.x, f.y, f.z)
 *         cdef btVector3 pos = btVector3(
 *             relativePosition.x, relativePosition.y, relativePosition.z)             # <<<<<<<<<<<<<<
 *         body.applyForce(force, pos)
 * 
 */
  __pyx_v_pos = btVector3(__pyx_v_relativePosition->x, __pyx_v_relativePosition->y, __pyx_v_relativePosition->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1432
 *         cdef btVector3 pos = btVector3(
 *             relativePosition.x, relativePosition.y, relativePosition.z)
 *         body.applyForce(force, pos)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->applyForce(__pyx_v_force, __pyx_v_pos);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.applyForce");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1435
 * 
 * 
 *     def applyCentralImpulse(self, Vector3 i not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply an impulse to this RigidBody.  The resulting acceleration will be
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_15applyCentralImpulse(PyObject *__pyx_v_self, PyObject *__pyx_v_i); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_15applyCentralImpulse[] = "\n        Apply an impulse to this RigidBody.  The resulting acceleration will be\n        equal to the impulse.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_15applyCentralImpulse(PyObject *__pyx_v_self, PyObject *__pyx_v_i) {
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_impulse;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("applyCentralImpulse");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_i), __pyx_ptype_6bullet_6bullet_Vector3, 0, "i", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1440
 *         equal to the impulse.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)
 *         body.applyCentralImpulse(impulse)
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1441
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)             # <<<<<<<<<<<<<<
 *         body.applyCentralImpulse(impulse)
 * 
 */
  __pyx_v_impulse = btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_i)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_i)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_i)->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1442
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)
 *         body.applyCentralImpulse(impulse)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->applyCentralImpulse(__pyx_v_impulse);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.applyCentralImpulse");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1445
 * 
 * 
 *     def applyImpulse(self, Vector3 i not None, Vector3 relativePosition not None):             # <<<<<<<<<<<<<<
 *         """
 *         Apply an impulse to this RigidBody at a specified offset from its center
 */

static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_16applyImpulse(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_9RigidBody_16applyImpulse[] = "\n        Apply an impulse to this RigidBody at a specified offset from its center\n        of mass.  The resulting accleration will be equal to the impulse.  An\n        impulse applied off-center may also result in rotation.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_9RigidBody_16applyImpulse(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_i = 0;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_relativePosition = 0;
  btRigidBody *__pyx_v_body;
  btVector3 __pyx_v_impulse;
  btVector3 __pyx_v_pos;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__i,&__pyx_n_s__relativePosition,0};
  __Pyx_RefNannySetupContext("applyImpulse");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__i);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__relativePosition);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("applyImpulse", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "applyImpulse") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_i = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_relativePosition = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[1]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_i = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_relativePosition = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 1));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("applyImpulse", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.applyImpulse");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_i), __pyx_ptype_6bullet_6bullet_Vector3, 0, "i", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_relativePosition), __pyx_ptype_6bullet_6bullet_Vector3, 0, "relativePosition", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1451
 *         impulse applied off-center may also result in rotation.
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)
 *         cdef btVector3 pos = btVector3(
 */
  __pyx_v_body = ((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1452
 *         """
 *         cdef btRigidBody* body = <btRigidBody*>self.thisptr
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)             # <<<<<<<<<<<<<<
 *         cdef btVector3 pos = btVector3(
 *             relativePosition.x, relativePosition.y, relativePosition.z)
 */
  __pyx_v_impulse = btVector3(__pyx_v_i->x, __pyx_v_i->y, __pyx_v_i->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1454
 *         cdef btVector3 impulse = btVector3(i.x, i.y, i.z)
 *         cdef btVector3 pos = btVector3(
 *             relativePosition.x, relativePosition.y, relativePosition.z)             # <<<<<<<<<<<<<<
 *         body.applyImpulse(impulse, pos)
 * 
 */
  __pyx_v_pos = btVector3(__pyx_v_relativePosition->x, __pyx_v_relativePosition->y, __pyx_v_relativePosition->z);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1455
 *         cdef btVector3 pos = btVector3(
 *             relativePosition.x, relativePosition.y, relativePosition.z)
 *         body.applyImpulse(impulse, pos)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_body->applyImpulse(__pyx_v_impulse, __pyx_v_pos);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.RigidBody.applyImpulse");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1470
 *     cdef btActionInterface *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_6bullet_6bullet_15ActionInterface_0__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_15ActionInterface_0__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1471
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_ActionInterface *)__pyx_v_self)->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1485
 *     XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use a subclass instead.
 *     """
 *     def setWalkDirection(self, Vector3 walkDirection):             # <<<<<<<<<<<<<<
 *         """
 *         Set the movement direction for this CharacterControllerInterface.  The
 */

static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_0setWalkDirection(PyObject *__pyx_v_self, PyObject *__pyx_v_walkDirection); /*proto*/
static char __pyx_doc_6bullet_6bullet_28CharacterControllerInterface_0setWalkDirection[] = "\n        Set the movement direction for this CharacterControllerInterface.  The\n        magnitude and the direction of the given walkDirection will determine\n        how this object moves in the world.\n\n        Calling setWalkDirection will cause a previous call to\n        setVelocityForTimeInterval to be disregarded.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_0setWalkDirection(PyObject *__pyx_v_self, PyObject *__pyx_v_walkDirection) {
  btCharacterControllerInterface *__pyx_v_controller;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setWalkDirection");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_walkDirection), __pyx_ptype_6bullet_6bullet_Vector3, 1, "walkDirection", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1485; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1495
 *         """
 *         cdef btCharacterControllerInterface *controller
 *         controller = <btCharacterControllerInterface*>self.thisptr             # <<<<<<<<<<<<<<
 *         controller.setWalkDirection(
 *             btVector3(walkDirection.x, walkDirection.y, walkDirection.z))
 */
  __pyx_v_controller = ((btCharacterControllerInterface *)((struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1497
 *         controller = <btCharacterControllerInterface*>self.thisptr
 *         controller.setWalkDirection(
 *             btVector3(walkDirection.x, walkDirection.y, walkDirection.z))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_controller->setWalkDirection(btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_walkDirection)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_walkDirection)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_walkDirection)->z));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.CharacterControllerInterface.setWalkDirection");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1500
 * 
 * 
 *     def setVelocityForTimeInterval(self,             # <<<<<<<<<<<<<<
 *                                    Vector3 velocity not None,
 *                                    btScalar timeInterval):
 */

static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_1setVelocityForTimeInterval(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_28CharacterControllerInterface_1setVelocityForTimeInterval[] = "\n        Set the movement direction for this CharacterControllerInterface.  The\n        direction of the given velocity will determine the direction of this\n        object's movement in the world, while the timeInterval will determine\n        the rate of movement.\n\n        Calling setVelocityForTimeInterval will cause a previous call to\n        setWalkDirection to be disregarded.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_1setVelocityForTimeInterval(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_velocity = 0;
  btScalar __pyx_v_timeInterval;
  btCharacterControllerInterface *__pyx_v_controller;
  PyObject *__pyx_r = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__velocity,&__pyx_n_s__timeInterval,0};
  __Pyx_RefNannySetupContext("setVelocityForTimeInterval");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__velocity);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__timeInterval);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("setVelocityForTimeInterval", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1500; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "setVelocityForTimeInterval") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1500; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_velocity = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_timeInterval = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_timeInterval == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1502; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_velocity = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_timeInterval = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_timeInterval == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1502; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setVelocityForTimeInterval", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1500; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CharacterControllerInterface.setVelocityForTimeInterval");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_velocity), __pyx_ptype_6bullet_6bullet_Vector3, 0, "velocity", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1513
 *         """
 *         cdef btCharacterControllerInterface *controller
 *         controller = <btCharacterControllerInterface*>self.thisptr             # <<<<<<<<<<<<<<
 *         controller.setVelocityForTimeInterval(
 *             btVector3(velocity.x, velocity.y, velocity.z), timeInterval)
 */
  __pyx_v_controller = ((btCharacterControllerInterface *)((struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1515
 *         controller = <btCharacterControllerInterface*>self.thisptr
 *         controller.setVelocityForTimeInterval(
 *             btVector3(velocity.x, velocity.y, velocity.z), timeInterval)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_controller->setVelocityForTimeInterval(btVector3(__pyx_v_velocity->x, __pyx_v_velocity->y, __pyx_v_velocity->z), __pyx_v_timeInterval);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.CharacterControllerInterface.setVelocityForTimeInterval");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1526
 *      This class is a wrapper around btPairCachingGhostObject.
 *      """
 *      def __init__(self):             # <<<<<<<<<<<<<<
 *          self.thisptr = new btPairCachingGhostObject()
 * 
 */

static int __pyx_pf_6bullet_6bullet_22PairCachingGhostObject_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_22PairCachingGhostObject_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1527
 *      """
 *      def __init__(self):
 *          self.thisptr = new btPairCachingGhostObject()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *)__pyx_v_self)->__pyx_base.thisptr = new btPairCachingGhostObject();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1543
 *     cdef ConvexShape shape
 * 
 *     def __init__(self, ConvexShape shape not None, float stepHeight, int upAxis):             # <<<<<<<<<<<<<<
 *         self.shape = shape
 *         self.ghost = PairCachingGhostObject()
 */

static int __pyx_pf_6bullet_6bullet_28KinematicCharacterController_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_28KinematicCharacterController_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_ConvexShape *__pyx_v_shape = 0;
  float __pyx_v_stepHeight;
  int __pyx_v_upAxis;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__shape,&__pyx_n_s__stepHeight,&__pyx_n_s__upAxis,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__shape);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__stepHeight);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__upAxis);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_ConvexShape *)values[0]);
    __pyx_v_stepHeight = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_stepHeight == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_upAxis = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_upAxis == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_ConvexShape *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_stepHeight = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_stepHeight == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_upAxis = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_upAxis == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.KinematicCharacterController.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), __pyx_ptype_6bullet_6bullet_ConvexShape, 0, "shape", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1544
 * 
 *     def __init__(self, ConvexShape shape not None, float stepHeight, int upAxis):
 *         self.shape = shape             # <<<<<<<<<<<<<<
 *         self.ghost = PairCachingGhostObject()
 *         self.thisptr = new btKinematicCharacterController(
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_shape));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_shape));
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->shape);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->shape));
  ((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->shape = __pyx_v_shape;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1545
 *     def __init__(self, ConvexShape shape not None, float stepHeight, int upAxis):
 *         self.shape = shape
 *         self.ghost = PairCachingGhostObject()             # <<<<<<<<<<<<<<
 *         self.thisptr = new btKinematicCharacterController(
 *             <btPairCachingGhostObject*>self.ghost.thisptr,
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_PairCachingGhostObject)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->ghost);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->ghost));
  ((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->ghost = ((struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1546
 *         self.shape = shape
 *         self.ghost = PairCachingGhostObject()
 *         self.thisptr = new btKinematicCharacterController(             # <<<<<<<<<<<<<<
 *             <btPairCachingGhostObject*>self.ghost.thisptr,
 *             <btConvexShape*>self.shape.thisptr, stepHeight, upAxis)
 */
  ((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr = new btKinematicCharacterController(((btPairCachingGhostObject *)((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->ghost->__pyx_base.thisptr), ((btConvexShape *)((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->shape->__pyx_base.thisptr), __pyx_v_stepHeight, __pyx_v_upAxis);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.KinematicCharacterController.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1551
 * 
 * 
 *     def warp(self, Vector3 origin not None):             # <<<<<<<<<<<<<<
 *         """
 *         Change the location of this object to the given point without traversing
 */

static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_1warp(PyObject *__pyx_v_self, PyObject *__pyx_v_origin); /*proto*/
static char __pyx_doc_6bullet_6bullet_28KinematicCharacterController_1warp[] = "\n        Change the location of this object to the given point without traversing\n        the intermediate distance.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_1warp(PyObject *__pyx_v_self, PyObject *__pyx_v_origin) {
  btKinematicCharacterController *__pyx_v_controller;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("warp");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_origin), __pyx_ptype_6bullet_6bullet_Vector3, 0, "origin", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1557
 *         """
 *         cdef btKinematicCharacterController *controller
 *         controller = <btKinematicCharacterController*>self.thisptr             # <<<<<<<<<<<<<<
 *         controller.warp(btVector3(origin.x, origin.y, origin.z))
 * 
 */
  __pyx_v_controller = ((btKinematicCharacterController *)((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1558
 *         cdef btKinematicCharacterController *controller
 *         controller = <btKinematicCharacterController*>self.thisptr
 *         controller.warp(btVector3(origin.x, origin.y, origin.z))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_controller->warp(btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_origin)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_origin)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_origin)->z));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.KinematicCharacterController.warp");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1540
 *     This class is a wrapper around btKinematicCharacterController.
 *     """
 *     cdef readonly PairCachingGhostObject ghost             # <<<<<<<<<<<<<<
 *     cdef ConvexShape shape
 * 
 */

static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_5ghost_0__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_28KinematicCharacterController_5ghost_0__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->ghost));
  __pyx_r = ((PyObject *)((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)__pyx_v_self)->ghost);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1578
 *     cdef btDispatcher *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         # XXX btDefaultCollisionConfiguration leaks I suppose.
 *         self.config = new btDefaultCollisionConfiguration()
 */

static int __pyx_pf_6bullet_6bullet_19CollisionDispatcher_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_19CollisionDispatcher_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1580
 *     def __cinit__(self):
 *         # XXX btDefaultCollisionConfiguration leaks I suppose.
 *         self.config = new btDefaultCollisionConfiguration()             # <<<<<<<<<<<<<<
 *         self.thisptr = new btCollisionDispatcher(self.config)
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_v_self)->config = new btDefaultCollisionConfiguration();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1581
 *         # XXX btDefaultCollisionConfiguration leaks I suppose.
 *         self.config = new btDefaultCollisionConfiguration()
 *         self.thisptr = new btCollisionDispatcher(self.config)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_v_self)->thisptr = new btCollisionDispatcher(((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_v_self)->config);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1584
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         del self.config
 */

static void __pyx_pf_6bullet_6bullet_19CollisionDispatcher_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_19CollisionDispatcher_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1585
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         del self.config
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_v_self)->thisptr;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1586
 *     def __dealloc__(self):
 *         del self.thisptr
 *         del self.config             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_v_self)->config;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1601
 *     cdef btOverlappingPairCache *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_6bullet_6bullet_20OverlappingPairCache_0__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_20OverlappingPairCache_0__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1602
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)__pyx_v_self)->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1605
 * 
 * 
 *     def setInternalGhostPairCallback(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the internal ghost pair callback to a new btGhostPairCallback.
 */

static PyObject *__pyx_pf_6bullet_6bullet_20OverlappingPairCache_1setInternalGhostPairCallback(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_20OverlappingPairCache_1setInternalGhostPairCallback[] = "\n        Set the internal ghost pair callback to a new btGhostPairCallback.\n\n        The corresponding C++ API accepts the callback as a parameter.  This API\n        can do that when I learn why you would ever pass something other than a\n        new btGhostPairCallback.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_20OverlappingPairCache_1setInternalGhostPairCallback(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setInternalGhostPairCallback");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1613
 *         new btGhostPairCallback.
 *         """
 *         self.thisptr.setInternalGhostPairCallback(new btGhostPairCallback())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)__pyx_v_self)->thisptr->setInternalGhostPairCallback(new btGhostPairCallback());

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1624
 *     This class is a wrapper around btHashedOverlappingPairCache.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btHashedOverlappingPairCache()
 * 
 */

static int __pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1625
 *     """
 *     def __cinit__(self):
 *         self.thisptr = new btHashedOverlappingPairCache()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache *)__pyx_v_self)->__pyx_base.thisptr = new btHashedOverlappingPairCache();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1643
 *     cdef readonly OverlappingPairCache _paircache
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_6bullet_6bullet_19BroadphaseInterface_0__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_19BroadphaseInterface_0__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1644
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_v_self)->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1647
 * 
 * 
 *     def getOverlappingPairCache(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return the OverlappingPairCache used by this BroadphaseInterface.
 */

static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_1getOverlappingPairCache(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_19BroadphaseInterface_1getOverlappingPairCache[] = "\n        Return the OverlappingPairCache used by this BroadphaseInterface.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_1getOverlappingPairCache(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("getOverlappingPairCache");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1652
 *         """
 *         # Subclasses must take care to set this during their initialization.
 *         return self._paircache             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_v_self)->_paircache));
  __pyx_r = ((PyObject *)((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_v_self)->_paircache);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1641
 *     """
 *     cdef btBroadphaseInterface *thisptr
 *     cdef readonly OverlappingPairCache _paircache             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */

static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_10_paircache_0__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_19BroadphaseInterface_10_paircache_0__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_v_self)->_paircache));
  __pyx_r = ((PyObject *)((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_v_self)->_paircache);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1665
 *     This class is a wrapper around btAxisSweep3.
 *     """
 *     def __cinit__(self, Vector3 lower, Vector3 upper):             # <<<<<<<<<<<<<<
 *         self._paircache = HashedOverlappingPairCache()
 *         self.thisptr = new btAxisSweep3(
 */

static int __pyx_pf_6bullet_6bullet_10AxisSweep3_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_10AxisSweep3_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_lower = 0;
  struct __pyx_obj_6bullet_6bullet_Vector3 *__pyx_v_upper = 0;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__lower,&__pyx_n_s__upper,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__lower);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__upper);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1665; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1665; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_lower = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[0]);
    __pyx_v_upper = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)values[1]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_lower = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_upper = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)PyTuple_GET_ITEM(__pyx_args, 1));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1665; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.AxisSweep3.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_lower), __pyx_ptype_6bullet_6bullet_Vector3, 1, "lower", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_upper), __pyx_ptype_6bullet_6bullet_Vector3, 1, "upper", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1666
 *     """
 *     def __cinit__(self, Vector3 lower, Vector3 upper):
 *         self._paircache = HashedOverlappingPairCache()             # <<<<<<<<<<<<<<
 *         self.thisptr = new btAxisSweep3(
 *             btVector3(lower.x, lower.y, lower.z),
 */
  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_HashedOverlappingPairCache)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_AxisSweep3 *)__pyx_v_self)->__pyx_base._paircache);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_AxisSweep3 *)__pyx_v_self)->__pyx_base._paircache));
  ((struct __pyx_obj_6bullet_6bullet_AxisSweep3 *)__pyx_v_self)->__pyx_base._paircache = ((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1667
 *     def __cinit__(self, Vector3 lower, Vector3 upper):
 *         self._paircache = HashedOverlappingPairCache()
 *         self.thisptr = new btAxisSweep3(             # <<<<<<<<<<<<<<
 *             btVector3(lower.x, lower.y, lower.z),
 *             btVector3(upper.x, upper.y, upper.z),
 */
  ((struct __pyx_obj_6bullet_6bullet_AxisSweep3 *)__pyx_v_self)->__pyx_base.thisptr = new btAxisSweep3(btVector3(__pyx_v_lower->x, __pyx_v_lower->y, __pyx_v_lower->z), btVector3(__pyx_v_upper->x, __pyx_v_upper->y, __pyx_v_upper->z), 16384, ((struct __pyx_obj_6bullet_6bullet_AxisSweep3 *)__pyx_v_self)->__pyx_base._paircache->thisptr, 0);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.AxisSweep3.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1684
 *     cdef btConstraintSolver *thisptr
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

static void __pyx_pf_6bullet_6bullet_16ConstraintSolver_0__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_16ConstraintSolver_0__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1685
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 * 
 */
  delete ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)__pyx_v_self)->thisptr;

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1700
 *     This class is a wrapper around btSequentialImpulseConstraintSolver.
 *     """
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = new btSequentialImpulseConstraintSolver()
 * 
 */

static int __pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver_0__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1701
 *     """
 *     def __cinit__(self):
 *         self.thisptr = new btSequentialImpulseConstraintSolver()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver *)__pyx_v_self)->__pyx_base.thisptr = new btSequentialImpulseConstraintSolver();

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1709
 *     A Collision has information about a single collision detected during a sweep test
 *     """
 *     cdef public float distance             # <<<<<<<<<<<<<<
 *     cdef public Vector3 position
 *     cdef public Vector3 collision_normal
 */

static PyObject *__pyx_pf_6bullet_6bullet_9Collision_8distance_0__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_9Collision_8distance_0__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->distance); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Collision.distance.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9Collision_8distance_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bullet_6bullet_9Collision_8distance_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  float __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (float)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->distance = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.Collision.distance.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1710
 *     """
 *     cdef public float distance
 *     cdef public Vector3 position             # <<<<<<<<<<<<<<
 *     cdef public Vector3 collision_normal
 *     cdef public int triangle_index
 */

static PyObject *__pyx_pf_6bullet_6bullet_9Collision_8position_0__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_9Collision_8position_0__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->position));
  __pyx_r = ((PyObject *)((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->position);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9Collision_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bullet_6bullet_9Collision_8position_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_6bullet_6bullet_Vector3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->position);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->position));
  ((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->position = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.Collision.position.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9Collision_8position_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_6bullet_6bullet_9Collision_8position_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->position);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->position));
  ((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->position = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1711
 *     cdef public float distance
 *     cdef public Vector3 position
 *     cdef public Vector3 collision_normal             # <<<<<<<<<<<<<<
 *     cdef public int triangle_index
 * 
 */

static PyObject *__pyx_pf_6bullet_6bullet_9Collision_16collision_normal_0__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_9Collision_16collision_normal_0__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->collision_normal));
  __pyx_r = ((PyObject *)((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->collision_normal);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9Collision_16collision_normal_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bullet_6bullet_9Collision_16collision_normal_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_6bullet_6bullet_Vector3))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->collision_normal);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->collision_normal));
  ((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->collision_normal = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.Collision.collision_normal.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9Collision_16collision_normal_2__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_6bullet_6bullet_9Collision_16collision_normal_2__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->collision_normal);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->collision_normal));
  ((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->collision_normal = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1712
 *     cdef public Vector3 position
 *     cdef public Vector3 collision_normal
 *     cdef public int triangle_index             # <<<<<<<<<<<<<<
 * 
 * 
 */

static PyObject *__pyx_pf_6bullet_6bullet_9Collision_14triangle_index_0__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_9Collision_14triangle_index_0__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->triangle_index); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.Collision.triangle_index.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bullet_6bullet_9Collision_14triangle_index_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_6bullet_6bullet_9Collision_14triangle_index_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_t_1 = __Pyx_PyInt_AsInt(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_v_self)->triangle_index = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.Collision.triangle_index.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1729
 *     cdef _object *broadphase
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):
 */

static int __pyx_pf_6bullet_6bullet_14CollisionWorld_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_14CollisionWorld_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_dispatcher = 0;
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_broadphase = 0;
  int __pyx_r;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__dispatcher,&__pyx_n_s__broadphase,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1730
 * 
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,             # <<<<<<<<<<<<<<
 *                  BroadphaseInterface broadphase = None):
 *         if dispatcher is None:
 */
    values[0] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1731
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):             # <<<<<<<<<<<<<<
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()
 */
    values[1] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__dispatcher);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__broadphase);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1729; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)values[0]);
    __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)values[1]);
  } else {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1730
 * 
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,             # <<<<<<<<<<<<<<
 *                  BroadphaseInterface broadphase = None):
 *         if dispatcher is None:
 */
    __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1731
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):             # <<<<<<<<<<<<<<
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()
 */
    __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)PyTuple_GET_ITEM(__pyx_args, 0));
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1729; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_dispatcher);
  __Pyx_INCREF((PyObject *)__pyx_v_broadphase);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dispatcher), __pyx_ptype_6bullet_6bullet_CollisionDispatcher, 1, "dispatcher", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_broadphase), __pyx_ptype_6bullet_6bullet_BroadphaseInterface, 1, "broadphase", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1732
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):
 *         if dispatcher is None:             # <<<<<<<<<<<<<<
 *             dispatcher = CollisionDispatcher()
 *         if broadphase is None:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_dispatcher) == Py_None);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1733
 *                  BroadphaseInterface broadphase = None):
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()             # <<<<<<<<<<<<<<
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_CollisionDispatcher)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1733; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_v_dispatcher));
    __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1734
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()
 *         if broadphase is None:             # <<<<<<<<<<<<<<
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_broadphase) == Py_None);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1735
 *             dispatcher = CollisionDispatcher()
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))             # <<<<<<<<<<<<<<
 * 
 *         Py_INCREF(dispatcher)
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_k_tuple_19), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_k_tuple_20), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_AxisSweep3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_v_broadphase));
    __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1737
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))
 * 
 *         Py_INCREF(dispatcher)             # <<<<<<<<<<<<<<
 *         self.dispatcher = <_object*>dispatcher
 * 
 */
  Py_INCREF(((PyObject *)__pyx_v_dispatcher));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1738
 * 
 *         Py_INCREF(dispatcher)
 *         self.dispatcher = <_object*>dispatcher             # <<<<<<<<<<<<<<
 * 
 *         Py_INCREF(broadphase)
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->dispatcher = ((struct _object *)__pyx_v_dispatcher);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1740
 *         self.dispatcher = <_object*>dispatcher
 * 
 *         Py_INCREF(broadphase)             # <<<<<<<<<<<<<<
 *         self.broadphase = <_object*>broadphase
 * 
 */
  Py_INCREF(((PyObject *)__pyx_v_broadphase));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1741
 * 
 *         Py_INCREF(broadphase)
 *         self.broadphase = <_object*>broadphase             # <<<<<<<<<<<<<<
 * 
 *         # Allow subclasses to initialize this differently.
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->broadphase = ((struct _object *)__pyx_v_broadphase);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1744
 * 
 *         # Allow subclasses to initialize this differently.
 *         if self.thisptr == NULL:             # <<<<<<<<<<<<<<
 *             self.thisptr = new btCollisionWorld(
 *                 dispatcher.thisptr, broadphase.thisptr, dispatcher.config)
 */
  __pyx_t_1 = (((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->thisptr == NULL);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1745
 *         # Allow subclasses to initialize this differently.
 *         if self.thisptr == NULL:
 *             self.thisptr = new btCollisionWorld(             # <<<<<<<<<<<<<<
 *                 dispatcher.thisptr, broadphase.thisptr, dispatcher.config)
 * 
 */
    ((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->thisptr = new btCollisionWorld(__pyx_v_dispatcher->thisptr, __pyx_v_broadphase->thisptr, __pyx_v_dispatcher->config);
    goto __pyx_L8;
  }
  __pyx_L8:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_dispatcher);
  __Pyx_DECREF((PyObject *)__pyx_v_broadphase);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1749
 * 
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 *         Py_DECREF(<object>self.dispatcher)
 */

static void __pyx_pf_6bullet_6bullet_14CollisionWorld_1__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_6bullet_6bullet_14CollisionWorld_1__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1750
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 *         Py_DECREF(<object>self.dispatcher)
 *         Py_DECREF(<object>self.broadphase)
 */
  delete ((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->thisptr;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1751
 *     def __dealloc__(self):
 *         del self.thisptr
 *         Py_DECREF(<object>self.dispatcher)             # <<<<<<<<<<<<<<
 *         Py_DECREF(<object>self.broadphase)
 * 
 */
  Py_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->dispatcher));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1752
 *         del self.thisptr
 *         Py_DECREF(<object>self.dispatcher)
 *         Py_DECREF(<object>self.broadphase)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  Py_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->broadphase));

  __Pyx_RefNannyFinishContext();
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1755
 * 
 * 
 *     def setDebugDrawer(self, debugDrawer):             # <<<<<<<<<<<<<<
 *         """
 *         Specify a debug drawer object to use for L{debugDrawWorld} calls.
 */

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_2setDebugDrawer(PyObject *__pyx_v_self, PyObject *__pyx_v_debugDrawer); /*proto*/
static char __pyx_doc_6bullet_6bullet_14CollisionWorld_2setDebugDrawer[] = "\n        Specify a debug drawer object to use for L{debugDrawWorld} calls.\n\n        The debug drawer must have all of the required drawing callback methods.\n        TODO Document them.  See the debugdraw.py demo for now.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_2setDebugDrawer(PyObject *__pyx_v_self, PyObject *__pyx_v_debugDrawer) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setDebugDrawer");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1762
 *         TODO Document them.  See the debugdraw.py demo for now.
 *         """
 *         self.debugDraw = new PythonDebugDraw(<PyObject*>debugDrawer);             # <<<<<<<<<<<<<<
 *         self.thisptr.setDebugDrawer(self.debugDraw)
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->debugDraw = new PythonDebugDraw(((PyObject *)__pyx_v_debugDrawer));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1763
 *         """
 *         self.debugDraw = new PythonDebugDraw(<PyObject*>debugDrawer);
 *         self.thisptr.setDebugDrawer(self.debugDraw)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->thisptr->setDebugDrawer(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->debugDraw);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1766
 * 
 * 
 *     def debugDrawWorld(self):             # <<<<<<<<<<<<<<
 *         """
 *         Draw the current state of the world using the debug drawer provided by a
 */

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_3debugDrawWorld(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_14CollisionWorld_3debugDrawWorld[] = "\n        Draw the current state of the world using the debug drawer provided by a\n        previous call to L{setDebugDrawer}.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_3debugDrawWorld(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("debugDrawWorld");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1771
 *         previous call to L{setDebugDrawer}.
 *         """
 *         self.thisptr.debugDrawWorld()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->thisptr->debugDrawWorld();

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1774
 * 
 * 
 *     def getNumCollisionObjects(self):             # <<<<<<<<<<<<<<
 *         """
 *         Return a count of the number of CollisionObjects which are part of this
 */

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_4getNumCollisionObjects(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_14CollisionWorld_4getNumCollisionObjects[] = "\n        Return a count of the number of CollisionObjects which are part of this\n        CollisionWorld.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_4getNumCollisionObjects(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("getNumCollisionObjects");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1779
 *         CollisionWorld.
 *         """
 *         return self.thisptr.getNumCollisionObjects()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->thisptr->getNumCollisionObjects()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1779; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.getNumCollisionObjects");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1782
 * 
 * 
 *     def addCollisionObject(self, CollisionObject collisionObject):             # <<<<<<<<<<<<<<
 *         """
 *         Add a new CollisionObject to this CollisionWorld.
 */

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_5addCollisionObject(PyObject *__pyx_v_self, PyObject *__pyx_v_collisionObject); /*proto*/
static char __pyx_doc_6bullet_6bullet_14CollisionWorld_5addCollisionObject[] = "\n        Add a new CollisionObject to this CollisionWorld.\n\n        If you have a RigidBody to add, you should add it using\n        DynamicsWorld.addRigidBody instead.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_5addCollisionObject(PyObject *__pyx_v_self, PyObject *__pyx_v_collisionObject) {
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("addCollisionObject");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_collisionObject), __pyx_ptype_6bullet_6bullet_CollisionObject, 1, "collisionObject", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1789
 *         DynamicsWorld.addRigidBody instead.
 *         """
 *         if collisionObject.thisptr.getCollisionShape() == NULL:             # <<<<<<<<<<<<<<
 *             raise ValueError(
 *                 "Cannot add CollisionObject without a CollisionShape")
 */
  __pyx_t_1 = (((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_collisionObject)->thisptr->getCollisionShape() == NULL);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1790
 *         """
 *         if collisionObject.thisptr.getCollisionShape() == NULL:
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "Cannot add CollisionObject without a CollisionShape")
 *         self.thisptr.addCollisionObject(collisionObject.thisptr, 1, -1)
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_23), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1792
 *             raise ValueError(
 *                 "Cannot add CollisionObject without a CollisionShape")
 *         self.thisptr.addCollisionObject(collisionObject.thisptr, 1, -1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->thisptr->addCollisionObject(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_collisionObject)->thisptr, 1, -1);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.addCollisionObject");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1795
 * 
 * 
 *     def removeCollisionObject(self, CollisionObject collisionObject):             # <<<<<<<<<<<<<<
 *         """
 *         Remove a CollisionObject from this CollisionWorld.
 */

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_6removeCollisionObject(PyObject *__pyx_v_self, PyObject *__pyx_v_collisionObject); /*proto*/
static char __pyx_doc_6bullet_6bullet_14CollisionWorld_6removeCollisionObject[] = "\n        Remove a CollisionObject from this CollisionWorld.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_6removeCollisionObject(PyObject *__pyx_v_self, PyObject *__pyx_v_collisionObject) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("removeCollisionObject");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_collisionObject), __pyx_ptype_6bullet_6bullet_CollisionObject, 1, "collisionObject", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1799
 *         Remove a CollisionObject from this CollisionWorld.
 *         """
 *         self.thisptr.removeCollisionObject(collisionObject.thisptr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->thisptr->removeCollisionObject(((struct __pyx_obj_6bullet_6bullet_CollisionObject *)__pyx_v_collisionObject)->thisptr);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.removeCollisionObject");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1802
 * 
 * 
 *     cdef __collisionResultsToList(self, PyBulletCollisionResults *results):             # <<<<<<<<<<<<<<
 *         cdef PyBulletCollision c_collision
 *         cdef Collision py_collision
 */

static  PyObject *__pyx_f_6bullet_6bullet_14CollisionWorld___collisionResultsToList(struct __pyx_obj_6bullet_6bullet_CollisionWorld *__pyx_v_self, PyBulletCollisionResults *__pyx_v_results) {
  PyBulletCollision __pyx_v_c_collision;
  struct __pyx_obj_6bullet_6bullet_Collision *__pyx_v_py_collision;
  PyObject *__pyx_v_collisions;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  __Pyx_RefNannySetupContext("__collisionResultsToList");
  __pyx_v_py_collision = ((struct __pyx_obj_6bullet_6bullet_Collision *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_collisions = ((PyObject*)Py_None); __Pyx_INCREF(Py_None);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1805
 *         cdef PyBulletCollision c_collision
 *         cdef Collision py_collision
 *         collisions = []             # <<<<<<<<<<<<<<
 * 
 *         while results.more():
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1805; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_collisions));
  __pyx_v_collisions = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1807
 *         collisions = []
 * 
 *         while results.more():             # <<<<<<<<<<<<<<
 *             c_collision = results.pop()
 *             py_collision = Collision()
 */
  while (1) {
    __pyx_t_2 = __pyx_v_results->more();
    if (!__pyx_t_2) break;

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1808
 * 
 *         while results.more():
 *             c_collision = results.pop()             # <<<<<<<<<<<<<<
 *             py_collision = Collision()
 *             py_collision.distance = c_collision.m_distance
 */
    __pyx_v_c_collision = __pyx_v_results->pop();

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1809
 *         while results.more():
 *             c_collision = results.pop()
 *             py_collision = Collision()             # <<<<<<<<<<<<<<
 *             py_collision.distance = c_collision.m_distance
 *             py_collision.position = Vector3(c_collision.m_position.getX(), c_collision.m_position.getY(), c_collision.m_position.getY())
 */
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Collision)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_v_py_collision));
    __pyx_v_py_collision = ((struct __pyx_obj_6bullet_6bullet_Collision *)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1810
 *             c_collision = results.pop()
 *             py_collision = Collision()
 *             py_collision.distance = c_collision.m_distance             # <<<<<<<<<<<<<<
 *             py_collision.position = Vector3(c_collision.m_position.getX(), c_collision.m_position.getY(), c_collision.m_position.getY())
 *             py_collision.collision_normal = Vector3(c_collision.m_collision_normal.getX(), c_collision.m_collision_normal.getY(), c_collision.m_collision_normal.getY())
 */
    __pyx_v_py_collision->distance = __pyx_v_c_collision.m_distance;

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1811
 *             py_collision = Collision()
 *             py_collision.distance = c_collision.m_distance
 *             py_collision.position = Vector3(c_collision.m_position.getX(), c_collision.m_position.getY(), c_collision.m_position.getY())             # <<<<<<<<<<<<<<
 *             py_collision.collision_normal = Vector3(c_collision.m_collision_normal.getX(), c_collision.m_collision_normal.getY(), c_collision.m_collision_normal.getY())
 *             py_collision.triangle_index = c_collision.m_triangle_index
 */
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_c_collision.m_position.getX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_c_collision.m_position.getY()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_c_collision.m_position.getY()); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_1 = 0;
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_GOTREF(__pyx_v_py_collision->position);
    __Pyx_DECREF(((PyObject *)__pyx_v_py_collision->position));
    __pyx_v_py_collision->position = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1812
 *             py_collision.distance = c_collision.m_distance
 *             py_collision.position = Vector3(c_collision.m_position.getX(), c_collision.m_position.getY(), c_collision.m_position.getY())
 *             py_collision.collision_normal = Vector3(c_collision.m_collision_normal.getX(), c_collision.m_collision_normal.getY(), c_collision.m_collision_normal.getY())             # <<<<<<<<<<<<<<
 *             py_collision.triangle_index = c_collision.m_triangle_index
 *             collisions.append(py_collision)
 */
    __pyx_t_4 = PyFloat_FromDouble(__pyx_v_c_collision.m_collision_normal.getX()); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyFloat_FromDouble(__pyx_v_c_collision.m_collision_normal.getY()); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = PyFloat_FromDouble(__pyx_v_c_collision.m_collision_normal.getY()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_GOTREF(__pyx_v_py_collision->collision_normal);
    __Pyx_DECREF(((PyObject *)__pyx_v_py_collision->collision_normal));
    __pyx_v_py_collision->collision_normal = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1813
 *             py_collision.position = Vector3(c_collision.m_position.getX(), c_collision.m_position.getY(), c_collision.m_position.getY())
 *             py_collision.collision_normal = Vector3(c_collision.m_collision_normal.getX(), c_collision.m_collision_normal.getY(), c_collision.m_collision_normal.getY())
 *             py_collision.triangle_index = c_collision.m_triangle_index             # <<<<<<<<<<<<<<
 *             collisions.append(py_collision)
 * 
 */
    __pyx_v_py_collision->triangle_index = __pyx_v_c_collision.m_triangle_index;

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1814
 *             py_collision.collision_normal = Vector3(c_collision.m_collision_normal.getX(), c_collision.m_collision_normal.getY(), c_collision.m_collision_normal.getY())
 *             py_collision.triangle_index = c_collision.m_triangle_index
 *             collisions.append(py_collision)             # <<<<<<<<<<<<<<
 * 
 *         return collisions
 */
    if (unlikely(__pyx_v_collisions == Py_None)) {
      PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1814; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
    }
    __pyx_t_6 = PyList_Append(__pyx_v_collisions, ((PyObject *)__pyx_v_py_collision)); if (unlikely(__pyx_t_6 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1816
 *             collisions.append(py_collision)
 * 
 *         return collisions             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_collisions));
  __pyx_r = ((PyObject *)__pyx_v_collisions);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.__collisionResultsToList");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_py_collision);
  __Pyx_DECREF(__pyx_v_collisions);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1819
 * 
 * 
 *     def contactTest(self, ConvexShape shape, Transform trans):             # <<<<<<<<<<<<<<
 *         cdef PyBulletCollisionResults *results = new PyBulletCollisionResults()
 * 
 */

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_7contactTest(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_7contactTest(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_ConvexShape *__pyx_v_shape = 0;
  struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_trans = 0;
  PyBulletCollisionResults *__pyx_v_results;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__shape,&__pyx_n_s__trans,0};
  __Pyx_RefNannySetupContext("contactTest");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__shape);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__trans);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("contactTest", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1819; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "contactTest") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1819; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_ConvexShape *)values[0]);
    __pyx_v_trans = ((struct __pyx_obj_6bullet_6bullet_Transform *)values[1]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_ConvexShape *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_trans = ((struct __pyx_obj_6bullet_6bullet_Transform *)PyTuple_GET_ITEM(__pyx_args, 1));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("contactTest", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1819; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.contactTest");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), __pyx_ptype_6bullet_6bullet_ConvexShape, 1, "shape", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_trans), __pyx_ptype_6bullet_6bullet_Transform, 1, "trans", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1820
 * 
 *     def contactTest(self, ConvexShape shape, Transform trans):
 *         cdef PyBulletCollisionResults *results = new PyBulletCollisionResults()             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
  __pyx_v_results = new PyBulletCollisionResults();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1822
 *         cdef PyBulletCollisionResults *results = new PyBulletCollisionResults()
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             pybullet_contact(self.thisptr,
 *                     <btConvexShape *>shape.thisptr,
 */
  /*try:*/ {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1826
 *                     <btConvexShape *>shape.thisptr,
 *                     trans.thisptr[0],
 *                     results)             # <<<<<<<<<<<<<<
 *             return self.__collisionResultsToList(results)
 *         finally:
 */
    pybullet_contact(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->thisptr, ((btConvexShape *)__pyx_v_shape->__pyx_base.thisptr), (__pyx_v_trans->thisptr[0]), __pyx_v_results);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1827
 *                     trans.thisptr[0],
 *                     results)
 *             return self.__collisionResultsToList(results)             # <<<<<<<<<<<<<<
 *         finally:
 *             del results
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_6bullet_6bullet_CollisionWorld *)((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->__pyx_vtab)->__collisionResultsToList(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self), __pyx_v_results); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1827; __pyx_clineno = __LINE__; goto __pyx_L7;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L6;
  }

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1829
 *             return self.__collisionResultsToList(results)
 *         finally:
 *             del results             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L8;
    __pyx_L6: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L8;
    __pyx_L7: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L8;
    }
    __pyx_L8:;
    delete __pyx_v_results;
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.contactTest");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1832
 * 
 * 
 *     def convexSweepTest(self, ConvexShape shape, Transform trans_from, Transform trans_to):             # <<<<<<<<<<<<<<
 *         cdef PyBulletCollisionResults *results = new PyBulletCollisionResults()
 * 
 */

static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_8convexSweepTest(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_6bullet_6bullet_14CollisionWorld_8convexSweepTest(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_ConvexShape *__pyx_v_shape = 0;
  struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_trans_from = 0;
  struct __pyx_obj_6bullet_6bullet_Transform *__pyx_v_trans_to = 0;
  PyBulletCollisionResults *__pyx_v_results;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__shape,&__pyx_n_s__trans_from,&__pyx_n_s__trans_to,0};
  __Pyx_RefNannySetupContext("convexSweepTest");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__shape);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__trans_from);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("convexSweepTest", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1832; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__trans_to);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("convexSweepTest", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1832; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "convexSweepTest") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1832; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_ConvexShape *)values[0]);
    __pyx_v_trans_from = ((struct __pyx_obj_6bullet_6bullet_Transform *)values[1]);
    __pyx_v_trans_to = ((struct __pyx_obj_6bullet_6bullet_Transform *)values[2]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_shape = ((struct __pyx_obj_6bullet_6bullet_ConvexShape *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_trans_from = ((struct __pyx_obj_6bullet_6bullet_Transform *)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_trans_to = ((struct __pyx_obj_6bullet_6bullet_Transform *)PyTuple_GET_ITEM(__pyx_args, 2));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("convexSweepTest", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1832; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.convexSweepTest");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), __pyx_ptype_6bullet_6bullet_ConvexShape, 1, "shape", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_trans_from), __pyx_ptype_6bullet_6bullet_Transform, 1, "trans_from", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_trans_to), __pyx_ptype_6bullet_6bullet_Transform, 1, "trans_to", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1833
 * 
 *     def convexSweepTest(self, ConvexShape shape, Transform trans_from, Transform trans_to):
 *         cdef PyBulletCollisionResults *results = new PyBulletCollisionResults()             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
  __pyx_v_results = new PyBulletCollisionResults();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1835
 *         cdef PyBulletCollisionResults *results = new PyBulletCollisionResults()
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             pybullet_sweep(self.thisptr,
 *                     <btConvexShape *>shape.thisptr,
 */
  /*try:*/ {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1840
 *                     trans_from.thisptr[0],
 *                     trans_to.thisptr[0],
 *                     results)             # <<<<<<<<<<<<<<
 *             return self.__collisionResultsToList(results)
 *         finally:
 */
    pybullet_sweep(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->thisptr, ((btConvexShape *)__pyx_v_shape->__pyx_base.thisptr), (__pyx_v_trans_from->thisptr[0]), (__pyx_v_trans_to->thisptr[0]), __pyx_v_results);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1841
 *                     trans_to.thisptr[0],
 *                     results)
 *             return self.__collisionResultsToList(results)             # <<<<<<<<<<<<<<
 *         finally:
 *             del results
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = ((struct __pyx_vtabstruct_6bullet_6bullet_CollisionWorld *)((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self)->__pyx_vtab)->__collisionResultsToList(((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)__pyx_v_self), __pyx_v_results); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1841; __pyx_clineno = __LINE__; goto __pyx_L7;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L6;
  }

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1843
 *             return self.__collisionResultsToList(results)
 *         finally:
 *             del results             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*finally:*/ {
    int __pyx_why;
    PyObject *__pyx_exc_type, *__pyx_exc_value, *__pyx_exc_tb;
    int __pyx_exc_lineno;
    __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 0; goto __pyx_L8;
    __pyx_L6: __pyx_exc_type = 0; __pyx_exc_value = 0; __pyx_exc_tb = 0; __pyx_exc_lineno = 0;
    __pyx_why = 3; goto __pyx_L8;
    __pyx_L7: {
      __pyx_why = 4;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_ErrFetch(&__pyx_exc_type, &__pyx_exc_value, &__pyx_exc_tb);
      __pyx_exc_lineno = __pyx_lineno;
      goto __pyx_L8;
    }
    __pyx_L8:;
    delete __pyx_v_results;
    switch (__pyx_why) {
      case 3: goto __pyx_L0;
      case 4: {
        __Pyx_ErrRestore(__pyx_exc_type, __pyx_exc_value, __pyx_exc_tb);
        __pyx_lineno = __pyx_exc_lineno;
        __pyx_exc_type = 0;
        __pyx_exc_value = 0;
        __pyx_exc_tb = 0;
        goto __pyx_L1_error;
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.CollisionWorld.convexSweepTest");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1859
 *     cdef list _rigidBodies
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):
 */

static int __pyx_pf_6bullet_6bullet_13DynamicsWorld_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_13DynamicsWorld_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_dispatcher = 0;
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_broadphase = 0;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__dispatcher,&__pyx_n_s__broadphase,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1860
 * 
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,             # <<<<<<<<<<<<<<
 *                  BroadphaseInterface broadphase = None):
 *         CollisionWorld.__init__(self, dispatcher, broadphase)
 */
    values[0] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1861
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):             # <<<<<<<<<<<<<<
 *         CollisionWorld.__init__(self, dispatcher, broadphase)
 *         self._rigidBodies = []
 */
    values[1] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__dispatcher);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__broadphase);
        if (value) { values[1] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1859; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)values[0]);
    __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)values[1]);
  } else {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1860
 * 
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,             # <<<<<<<<<<<<<<
 *                  BroadphaseInterface broadphase = None):
 *         CollisionWorld.__init__(self, dispatcher, broadphase)
 */
    __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1861
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):             # <<<<<<<<<<<<<<
 *         CollisionWorld.__init__(self, dispatcher, broadphase)
 *         self._rigidBodies = []
 */
    __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)PyTuple_GET_ITEM(__pyx_args, 0));
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1859; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.DynamicsWorld.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dispatcher), __pyx_ptype_6bullet_6bullet_CollisionDispatcher, 1, "dispatcher", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1860; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_broadphase), __pyx_ptype_6bullet_6bullet_BroadphaseInterface, 1, "broadphase", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1862
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None):
 *         CollisionWorld.__init__(self, dispatcher, broadphase)             # <<<<<<<<<<<<<<
 *         self._rigidBodies = []
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_CollisionWorld)), __pyx_n_s____init__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  __Pyx_INCREF(((PyObject *)__pyx_v_dispatcher));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_dispatcher));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_dispatcher));
  __Pyx_INCREF(((PyObject *)__pyx_v_broadphase));
  PyTuple_SET_ITEM(__pyx_t_2, 2, ((PyObject *)__pyx_v_broadphase));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_broadphase));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1863
 *                  BroadphaseInterface broadphase = None):
 *         CollisionWorld.__init__(self, dispatcher, broadphase)
 *         self._rigidBodies = []             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1863; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_3));
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->_rigidBodies);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->_rigidBodies));
  ((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->_rigidBodies = __pyx_t_3;
  __pyx_t_3 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bullet.bullet.DynamicsWorld.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1866
 * 
 * 
 *     def addRigidBody(self, RigidBody body not None):             # <<<<<<<<<<<<<<
 *         """
 *         Add a new RigidBody to this DynamicsWorld.
 */

static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_1addRigidBody(PyObject *__pyx_v_self, PyObject *__pyx_v_body); /*proto*/
static char __pyx_doc_6bullet_6bullet_13DynamicsWorld_1addRigidBody[] = "\n        Add a new RigidBody to this DynamicsWorld.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_1addRigidBody(PyObject *__pyx_v_self, PyObject *__pyx_v_body) {
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("addRigidBody");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body), __pyx_ptype_6bullet_6bullet_RigidBody, 0, "body", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1866; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1870
 *         Add a new RigidBody to this DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         world.addRigidBody(<btRigidBody*>body.thisptr)
 *         self._rigidBodies.append(body)
 */
  __pyx_v_world = ((btDynamicsWorld *)((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1871
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.addRigidBody(<btRigidBody*>body.thisptr)             # <<<<<<<<<<<<<<
 *         self._rigidBodies.append(body)
 * 
 */
  __pyx_v_world->addRigidBody(((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_body)->__pyx_base.thisptr));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1872
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.addRigidBody(<btRigidBody*>body.thisptr)
 *         self._rigidBodies.append(body)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (unlikely(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->_rigidBodies == Py_None)) {
    PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1872; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyList_Append(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->_rigidBodies, __pyx_v_body); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.DynamicsWorld.addRigidBody");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1875
 * 
 * 
 *     def removeRigidBody(self, RigidBody body not None):             # <<<<<<<<<<<<<<
 *         """
 *         Remove a RigidBody from this DynamicsWorld.
 */

static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_2removeRigidBody(PyObject *__pyx_v_self, PyObject *__pyx_v_body); /*proto*/
static char __pyx_doc_6bullet_6bullet_13DynamicsWorld_2removeRigidBody[] = "\n        Remove a RigidBody from this DynamicsWorld.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_2removeRigidBody(PyObject *__pyx_v_self, PyObject *__pyx_v_body) {
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("removeRigidBody");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_body), __pyx_ptype_6bullet_6bullet_RigidBody, 0, "body", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1875; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1879
 *         Remove a RigidBody from this DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         self._rigidBodies.remove(body)
 *         world.removeRigidBody(<btRigidBody*>body.thisptr)
 */
  __pyx_v_world = ((btDynamicsWorld *)((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1880
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         self._rigidBodies.remove(body)             # <<<<<<<<<<<<<<
 *         world.removeRigidBody(<btRigidBody*>body.thisptr)
 * 
 */
  __pyx_t_1 = PyObject_GetAttr(((PyObject *)((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->_rigidBodies), __pyx_n_s__remove); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __Pyx_INCREF(__pyx_v_body);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_body);
  __Pyx_GIVEREF(__pyx_v_body);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1881
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         self._rigidBodies.remove(body)
 *         world.removeRigidBody(<btRigidBody*>body.thisptr)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_world->removeRigidBody(((btRigidBody *)((struct __pyx_obj_6bullet_6bullet_RigidBody *)__pyx_v_body)->__pyx_base.thisptr));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bullet.bullet.DynamicsWorld.removeRigidBody");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1884
 * 
 * 
 *     def addAction(self, ActionInterface action not None):             # <<<<<<<<<<<<<<
 *         """
 *         Add a new ActionInterface to this DynamicsWorld.
 */

static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_3addAction(PyObject *__pyx_v_self, PyObject *__pyx_v_action); /*proto*/
static char __pyx_doc_6bullet_6bullet_13DynamicsWorld_3addAction[] = "\n        Add a new ActionInterface to this DynamicsWorld.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_3addAction(PyObject *__pyx_v_self, PyObject *__pyx_v_action) {
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("addAction");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_action), __pyx_ptype_6bullet_6bullet_ActionInterface, 0, "action", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1888
 *         Add a new ActionInterface to this DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         world.addAction(<btActionInterface*>action.thisptr)
 *         self._rigidBodies.append(action)
 */
  __pyx_v_world = ((btDynamicsWorld *)((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1889
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.addAction(<btActionInterface*>action.thisptr)             # <<<<<<<<<<<<<<
 *         self._rigidBodies.append(action)
 * 
 */
  __pyx_v_world->addAction(((btActionInterface *)((struct __pyx_obj_6bullet_6bullet_ActionInterface *)__pyx_v_action)->thisptr));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1890
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.addAction(<btActionInterface*>action.thisptr)
 *         self._rigidBodies.append(action)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (unlikely(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->_rigidBodies == Py_None)) {
    PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1890; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyList_Append(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->_rigidBodies, __pyx_v_action); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1890; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.DynamicsWorld.addAction");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1893
 * 
 * 
 *     def removeAction(self, ActionInterface action not None):             # <<<<<<<<<<<<<<
 *         """
 *         Remove an ActionInterface which was previously added to this
 */

static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_4removeAction(PyObject *__pyx_v_self, PyObject *__pyx_v_action); /*proto*/
static char __pyx_doc_6bullet_6bullet_13DynamicsWorld_4removeAction[] = "\n        Remove an ActionInterface which was previously added to this\n        DynamicsWorld.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_13DynamicsWorld_4removeAction(PyObject *__pyx_v_self, PyObject *__pyx_v_action) {
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("removeAction");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_action), __pyx_ptype_6bullet_6bullet_ActionInterface, 0, "action", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1893; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1898
 *         DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         world.removeAction(<btActionInterface*>action.thisptr)
 *         self._rigidBodies.append(action)
 */
  __pyx_v_world = ((btDynamicsWorld *)((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1899
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.removeAction(<btActionInterface*>action.thisptr)             # <<<<<<<<<<<<<<
 *         self._rigidBodies.append(action)
 * 
 */
  __pyx_v_world->removeAction(((btActionInterface *)((struct __pyx_obj_6bullet_6bullet_ActionInterface *)__pyx_v_action)->thisptr));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1900
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.removeAction(<btActionInterface*>action.thisptr)
 *         self._rigidBodies.append(action)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (unlikely(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->_rigidBodies == Py_None)) {
    PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1900; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = PyList_Append(((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)__pyx_v_self)->_rigidBodies, __pyx_v_action); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1900; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.DynamicsWorld.removeAction");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1913
 *     cdef ConstraintSolver solver
 * 
 *     def __init__(self,             # <<<<<<<<<<<<<<
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None,
 */

static int __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_0__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *__pyx_v_dispatcher = 0;
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *__pyx_v_broadphase = 0;
  struct __pyx_obj_6bullet_6bullet_ConstraintSolver *__pyx_v_solver = 0;
  int __pyx_r;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__dispatcher,&__pyx_n_s__broadphase,&__pyx_n_s__solver,0};
  __Pyx_RefNannySetupContext("__init__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1914
 * 
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,             # <<<<<<<<<<<<<<
 *                  BroadphaseInterface broadphase = None,
 *                  ConstraintSolver solver = None):
 */
    values[0] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1915
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None,             # <<<<<<<<<<<<<<
 *                  ConstraintSolver solver = None):
 * 
 */
    values[1] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1916
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None,
 *                  ConstraintSolver solver = None):             # <<<<<<<<<<<<<<
 * 
 *         if dispatcher is None:
 */
    values[2] = (PyObject *)((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__dispatcher);
        if (value) { values[0] = value; kw_args--; }
      }
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__broadphase);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__solver);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__init__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1913; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)values[0]);
    __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)values[1]);
    __pyx_v_solver = ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)values[2]);
  } else {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1914
 * 
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,             # <<<<<<<<<<<<<<
 *                  BroadphaseInterface broadphase = None,
 *                  ConstraintSolver solver = None):
 */
    __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1915
 *     def __init__(self,
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None,             # <<<<<<<<<<<<<<
 *                  ConstraintSolver solver = None):
 * 
 */
    __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)Py_None);

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1916
 *                  CollisionDispatcher dispatcher = None,
 *                  BroadphaseInterface broadphase = None,
 *                  ConstraintSolver solver = None):             # <<<<<<<<<<<<<<
 * 
 *         if dispatcher is None:
 */
    __pyx_v_solver = ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)Py_None);
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_solver = ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)PyTuple_GET_ITEM(__pyx_args, 2));
      case  2: __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)PyTuple_GET_ITEM(__pyx_args, 1));
      case  1: __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)PyTuple_GET_ITEM(__pyx_args, 0));
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1913; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.__init__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __Pyx_INCREF((PyObject *)__pyx_v_dispatcher);
  __Pyx_INCREF((PyObject *)__pyx_v_broadphase);
  __Pyx_INCREF((PyObject *)__pyx_v_solver);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dispatcher), __pyx_ptype_6bullet_6bullet_CollisionDispatcher, 1, "dispatcher", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_broadphase), __pyx_ptype_6bullet_6bullet_BroadphaseInterface, 1, "broadphase", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1915; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_solver), __pyx_ptype_6bullet_6bullet_ConstraintSolver, 1, "solver", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1918
 *                  ConstraintSolver solver = None):
 * 
 *         if dispatcher is None:             # <<<<<<<<<<<<<<
 *             dispatcher = CollisionDispatcher()
 *         if solver is None:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_dispatcher) == Py_None);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1919
 * 
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()             # <<<<<<<<<<<<<<
 *         if solver is None:
 *             solver = SequentialImpulseConstraintSolver()
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_CollisionDispatcher)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1919; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_v_dispatcher));
    __pyx_v_dispatcher = ((struct __pyx_obj_6bullet_6bullet_CollisionDispatcher *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1920
 *         if dispatcher is None:
 *             dispatcher = CollisionDispatcher()
 *         if solver is None:             # <<<<<<<<<<<<<<
 *             solver = SequentialImpulseConstraintSolver()
 *         if broadphase is None:
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_solver) == Py_None);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1921
 *             dispatcher = CollisionDispatcher()
 *         if solver is None:
 *             solver = SequentialImpulseConstraintSolver()             # <<<<<<<<<<<<<<
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_SequentialImpulseConstraintSolver)), ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_v_solver));
    __pyx_v_solver = ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)__pyx_t_2);
    __pyx_t_2 = 0;
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1922
 *         if solver is None:
 *             solver = SequentialImpulseConstraintSolver()
 *         if broadphase is None:             # <<<<<<<<<<<<<<
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))
 * 
 */
  __pyx_t_1 = (((PyObject *)__pyx_v_broadphase) == Py_None);
  if (__pyx_t_1) {

    /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1923
 *             solver = SequentialImpulseConstraintSolver()
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))             # <<<<<<<<<<<<<<
 * 
 *         self.solver = solver
 */
    __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_k_tuple_26), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_k_tuple_27), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_AxisSweep3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_v_broadphase));
    __pyx_v_broadphase = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L8;
  }
  __pyx_L8:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1925
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))
 * 
 *         self.solver = solver             # <<<<<<<<<<<<<<
 *         self.thisptr = <btCollisionWorld*>new btDiscreteDynamicsWorld(
 *             dispatcher.thisptr, broadphase.thisptr,
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_solver));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_solver));
  __Pyx_GOTREF(((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self)->solver);
  __Pyx_DECREF(((PyObject *)((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self)->solver));
  ((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self)->solver = __pyx_v_solver;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1926
 * 
 *         self.solver = solver
 *         self.thisptr = <btCollisionWorld*>new btDiscreteDynamicsWorld(             # <<<<<<<<<<<<<<
 *             dispatcher.thisptr, broadphase.thisptr,
 *             solver.thisptr, dispatcher.config)
 */
  ((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr = ((btCollisionWorld *)new btDiscreteDynamicsWorld(__pyx_v_dispatcher->thisptr, __pyx_v_broadphase->thisptr, __pyx_v_solver->thisptr, __pyx_v_dispatcher->config));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1930
 *             solver.thisptr, dispatcher.config)
 * 
 *         DynamicsWorld.__init__(self, dispatcher, broadphase)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = PyObject_GetAttr(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_DynamicsWorld)), __pyx_n_s____init__); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  __Pyx_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_self);
  __Pyx_GIVEREF(__pyx_v_self);
  __Pyx_INCREF(((PyObject *)__pyx_v_dispatcher));
  PyTuple_SET_ITEM(__pyx_t_4, 1, ((PyObject *)__pyx_v_dispatcher));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_dispatcher));
  __Pyx_INCREF(((PyObject *)__pyx_v_broadphase));
  PyTuple_SET_ITEM(__pyx_t_4, 2, ((PyObject *)__pyx_v_broadphase));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_broadphase));
  __pyx_t_2 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.__init__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_dispatcher);
  __Pyx_DECREF((PyObject *)__pyx_v_broadphase);
  __Pyx_DECREF((PyObject *)__pyx_v_solver);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1933
 * 
 * 
 *     def setGravity(self, Vector3 gravity):             # <<<<<<<<<<<<<<
 *         """
 *         Set the gravity in this world.
 */

static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_1setGravity(PyObject *__pyx_v_self, PyObject *__pyx_v_gravity); /*proto*/
static char __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_1setGravity[] = "\n        Set the gravity in this world.\n        XXX This belongs on DynamicsWorld.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_1setGravity(PyObject *__pyx_v_self, PyObject *__pyx_v_gravity) {
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("setGravity");
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_gravity), __pyx_ptype_6bullet_6bullet_Vector3, 1, "gravity", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1938
 *         XXX This belongs on DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         world.setGravity(btVector3(gravity.x, gravity.y, gravity.z))
 * 
 */
  __pyx_v_world = ((btDynamicsWorld *)((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1939
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         world.setGravity(btVector3(gravity.x, gravity.y, gravity.z))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_world->setGravity(btVector3(((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_gravity)->x, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_gravity)->y, ((struct __pyx_obj_6bullet_6bullet_Vector3 *)__pyx_v_gravity)->z));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.setGravity");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1942
 * 
 * 
 *     def getGravity(self):             # <<<<<<<<<<<<<<
 *         """
 *         Get the gravity in this world.
 */

static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_2getGravity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_2getGravity[] = "\n        Get the gravity in this world.\n        XXX This belongs on DynamicsWorld.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_2getGravity(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  btDynamicsWorld *__pyx_v_world;
  btVector3 __pyx_v_gravity;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("getGravity");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1947
 *         XXX This belongs on DynamicsWorld.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         cdef btVector3 gravity = world.getGravity()
 *         return Vector3(gravity.getX(), gravity.getY(), gravity.getZ())
 */
  __pyx_v_world = ((btDynamicsWorld *)((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1948
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         cdef btVector3 gravity = world.getGravity()             # <<<<<<<<<<<<<<
 *         return Vector3(gravity.getX(), gravity.getY(), gravity.getZ())
 * 
 */
  __pyx_v_gravity = __pyx_v_world->getGravity();

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1949
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         cdef btVector3 gravity = world.getGravity()
 *         return Vector3(gravity.getX(), gravity.getY(), gravity.getZ())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_gravity.getX()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_gravity.getY()); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_gravity.getZ()); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_6bullet_6bullet_Vector3)), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1949; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.getGravity");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1952
 * 
 * 
 *     def stepSimulation(self,             # <<<<<<<<<<<<<<
 *                        btScalar timeStep,
 *                        int maxSubSteps = 1,
 */

static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_3stepSimulation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_3stepSimulation[] = "\n        Advance time in the simulation.\n\n        timeStep specifies the amount of simulation time which will pass during\n        this call.\n\n        maxSubSteps specifies the maximum number of simulation steps which will\n        be taken trying to reach the point in the future specified by timeStep.\n\n        fixedTimeStep specifies the size of each simulation step.  Bullet works\n        best if this value is always the same.\n\n        Observe that if fixedTimeStep * maxSubSteps < timeStep, simulation time\n        is lost and the simulation will not advance as far as you intended it\n        to.\n\n        The number of simulation steps taken is returned.\n        ";
static PyObject *__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_3stepSimulation(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  btScalar __pyx_v_timeStep;
  int __pyx_v_maxSubSteps;
  btScalar __pyx_v_fixedTimeStep;
  btDynamicsWorld *__pyx_v_world;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__timeStep,&__pyx_n_s__maxSubSteps,&__pyx_n_s__fixedTimeStep,0};
  __Pyx_RefNannySetupContext("stepSimulation");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[3] = {0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__timeStep);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__maxSubSteps);
        if (value) { values[1] = value; kw_args--; }
      }
      case  2:
      if (kw_args > 0) {
        PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fixedTimeStep);
        if (value) { values[2] = value; kw_args--; }
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "stepSimulation") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1952; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_timeStep = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_timeStep == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1953; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_maxSubSteps = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_maxSubSteps == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_maxSubSteps = ((int)1);
    }
    if (values[2]) {
      __pyx_v_fixedTimeStep = __pyx_PyFloat_AsDouble(values[2]); if (unlikely((__pyx_v_fixedTimeStep == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1955; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_fixedTimeStep = __pyx_k_28;
    }
  } else {
    __pyx_v_maxSubSteps = ((int)1);
    __pyx_v_fixedTimeStep = __pyx_k_28;
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  3: __pyx_v_fixedTimeStep = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_fixedTimeStep == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1955; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  2: __pyx_v_maxSubSteps = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_maxSubSteps == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1954; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      case  1: __pyx_v_timeStep = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_timeStep == (btScalar)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1953; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      break;
      default: goto __pyx_L5_argtuple_error;
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("stepSimulation", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1952; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.stepSimulation");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1974
 *         The number of simulation steps taken is returned.
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr             # <<<<<<<<<<<<<<
 *         return world.stepSimulation(timeStep, maxSubSteps, fixedTimeStep)
 */
  __pyx_v_world = ((btDynamicsWorld *)((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)__pyx_v_self)->__pyx_base.__pyx_base.thisptr);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1975
 *         """
 *         cdef btDynamicsWorld *world = <btDynamicsWorld*>self.thisptr
 *         return world.stepSimulation(timeStep, maxSubSteps, fixedTimeStep)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_world->stepSimulation(__pyx_v_timeStep, __pyx_v_maxSubSteps, __pyx_v_fixedTimeStep)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1975; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bullet.bullet.DiscreteDynamicsWorld.stepSimulation");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":188
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

static CYTHON_UNUSED int __pyx_pf_5numpy_7ndarray_0__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pf_5numpy_7ndarray_0__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  char *__pyx_t_9;
  __Pyx_RefNannySetupContext("__getbuffer__");
  if (__pyx_v_info == NULL) return 0;
  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(__pyx_v_info->obj);

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":194
 *             # of flags
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":195
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":197
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(((PyArrayObject *)__pyx_v_self));

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":199
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
  if (__pyx_t_1) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":200
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":202
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
    __pyx_v_copy_shape = 0;
  }
  __pyx_L5:;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":204
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS);
  if (__pyx_t_1) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":205
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
    __pyx_t_2 = (!PyArray_CHKFLAGS(((PyArrayObject *)__pyx_v_self), NPY_C_CONTIGUOUS));
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":206
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_30), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":208
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_3 = ((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS);
  if (__pyx_t_3) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":209
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
    __pyx_t_1 = (!PyArray_CHKFLAGS(((PyArrayObject *)__pyx_v_self), NPY_F_CONTIGUOUS));
    __pyx_t_2 = __pyx_t_1;
  } else {
    __pyx_t_2 = __pyx_t_3;
  }
  if (__pyx_t_2) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":210
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_32), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":212
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(((PyArrayObject *)__pyx_v_self));

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":213
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info. This is allocated
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":214
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info. This is allocated
 *                 # as one block, strides first.
 */
  if (__pyx_v_copy_shape) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":217
 *                 # Allocate new buffer for strides and shape info. This is allocated
 *                 # as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * __pyx_v_ndim) * 2)));

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":218
 *                 # as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":219
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_5 = __pyx_v_ndim;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":220
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(((PyArrayObject *)__pyx_v_self))[__pyx_v_i]);

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":221
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(((PyArrayObject *)__pyx_v_self))[__pyx_v_i]);
    }
    goto __pyx_L8;
  }
  /*else*/ {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":223
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(((PyArrayObject *)__pyx_v_self)));

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":224
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(((PyArrayObject *)__pyx_v_self)));
  }
  __pyx_L8:;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":225
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":226
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(((PyArrayObject *)__pyx_v_self));

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":227
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!PyArray_ISWRITEABLE(((PyArrayObject *)__pyx_v_self)));

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":230
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef list stack
 */
  __pyx_v_f = NULL;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":231
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef list stack
 *             cdef int offset
 */
  __Pyx_INCREF(((PyObject *)((PyArrayObject *)__pyx_v_self)->descr));
  __pyx_v_descr = ((PyArrayObject *)__pyx_v_self)->descr;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":235
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":237
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = (!__pyx_v_hasfields);
  if (__pyx_t_2) {
    __pyx_t_3 = (!__pyx_v_copy_shape);
    __pyx_t_1 = __pyx_t_3;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":239
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;
    goto __pyx_L11;
  }
  /*else*/ {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":242
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
    __Pyx_INCREF(__pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = __pyx_v_self;
  }
  __pyx_L11:;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":244
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or
 */
  __pyx_t_1 = (!__pyx_v_hasfields);
  if (__pyx_t_1) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":245
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):
 */
    __pyx_v_t = __pyx_v_descr->type_num;

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":246
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_1 = (__pyx_v_descr->byteorder == '>');
    if (__pyx_t_1) {
      __pyx_t_2 = __pyx_v_little_endian;
    } else {
      __pyx_t_2 = __pyx_t_1;
    }
    if (!__pyx_t_2) {

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":247
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
      __pyx_t_1 = (__pyx_v_descr->byteorder == '<');
      if (__pyx_t_1) {
        __pyx_t_3 = (!__pyx_v_little_endian);
        __pyx_t_7 = __pyx_t_3;
      } else {
        __pyx_t_7 = __pyx_t_1;
      }
      __pyx_t_1 = __pyx_t_7;
    } else {
      __pyx_t_1 = __pyx_t_2;
    }
    if (__pyx_t_1) {

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":248
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_34), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_Raise(__pyx_t_4, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L13;
    }
    __pyx_L13:;

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":249
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_BYTE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__b;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":250
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_UBYTE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__B;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":251
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_SHORT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__h;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":252
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_USHORT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__H;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":253
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_INT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__i;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":254
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_UINT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__I;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":255
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__l;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":256
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_ULONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__L;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":257
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONGLONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__q;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":258
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_ULONGLONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Q;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":259
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_FLOAT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__f;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":260
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_DOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__d;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":261
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONGDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__g;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":262
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CFLOAT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zf;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":263
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zd;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":264
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CLONGDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zg;
      goto __pyx_L14;
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":265
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
    __pyx_t_1 = (__pyx_v_t == NPY_OBJECT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__O;
      goto __pyx_L14;
    }
    /*else*/ {

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":267
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_4 = PyInt_FromLong(__pyx_v_t); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = PyNumber_Remainder(((PyObject *)__pyx_kp_u_35), __pyx_t_4); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_8));
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_4));
      PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_8));
      __Pyx_GIVEREF(((PyObject *)__pyx_t_8));
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_8, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L14:;

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":268
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":269
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L12;
  }
  /*else*/ {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":271
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = '^' # Native data types, manual alignment
 *                 offset = 0
 */
    __pyx_v_info->format = ((char *)malloc(255));

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":272
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = '^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":273
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = '^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":276
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)             # <<<<<<<<<<<<<<
 *                 f[0] = 0 # Terminate format string
 * 
 */
    __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 255), (&__pyx_v_offset)); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_9;

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":277
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = 0 # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = 0;
  }
  __pyx_L12:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__");
  __pyx_r = -1;
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":279
 *                 f[0] = 0 # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

static CYTHON_UNUSED void __pyx_pf_5numpy_7ndarray_1__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pf_5numpy_7ndarray_1__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__");

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":280
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = PyArray_HASFIELDS(((PyArrayObject *)__pyx_v_self));
  if (__pyx_t_1) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":281
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":282
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
  if (__pyx_t_1) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":283
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);
    goto __pyx_L6;
  }
  __pyx_L6:;

  __Pyx_RefNannyFinishContext();
}

/* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":756
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1");

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":757
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":759
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2");

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":760
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":762
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3");

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":763
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":765
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4");

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":766
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":768
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5");

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":769
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":771
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields;
  PyObject *__pyx_v_childname;
  PyObject *__pyx_v_new_offset;
  PyObject *__pyx_v_t;
  char *__pyx_r;
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  long __pyx_t_10;
  char *__pyx_t_11;
  __Pyx_RefNannySetupContext("_util_dtypestring");
  __pyx_v_child = ((PyArray_Descr *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_fields = ((PyObject*)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_childname = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_new_offset = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_t = Py_None; __Pyx_INCREF(Py_None);

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":778
 *     cdef int delta_offset
 *     cdef tuple i
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":779
 *     cdef tuple i
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":782
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable"); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 782; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
  }
  __pyx_t_1 = 0; __pyx_t_2 = ((PyObject *)__pyx_v_descr->names); __Pyx_INCREF(__pyx_t_2);
  for (;;) {
    if (__pyx_t_1 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_1); __Pyx_INCREF(__pyx_t_3); __pyx_t_1++;
    __Pyx_DECREF(__pyx_v_childname);
    __pyx_v_childname = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":783
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (!__pyx_t_3) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected tuple, got %.200s", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_fields));
    __pyx_v_fields = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":784
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 */
    if (likely(((PyObject *)__pyx_v_fields) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_fields)) == 2)) {
      PyObject* tuple = ((PyObject *)__pyx_v_fields);
      __pyx_t_3 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_v_child));
      __pyx_v_child = ((PyArray_Descr *)__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_v_new_offset);
      __pyx_v_new_offset = __pyx_t_4;
      __pyx_t_4 = 0;
    } else {
      __Pyx_UnpackTupleError(((PyObject *)__pyx_v_fields), 2);
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":786
 *         child, new_offset = fields
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = PyInt_FromLong((__pyx_v_end - __pyx_v_f)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyInt_FromLong((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_3, __pyx_int_15, Py_LT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":787
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == '>' and little_endian) or
 */
      __pyx_t_5 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_37), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L5;
    }
    __pyx_L5:;

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":789
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == '>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == '<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_6 = (__pyx_v_child->byteorder == '>');
    if (__pyx_t_6) {
      __pyx_t_7 = __pyx_v_little_endian;
    } else {
      __pyx_t_7 = __pyx_t_6;
    }
    if (!__pyx_t_7) {

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":790
 * 
 *         if ((child.byteorder == '>' and little_endian) or
 *             (child.byteorder == '<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
      __pyx_t_6 = (__pyx_v_child->byteorder == '<');
      if (__pyx_t_6) {
        __pyx_t_8 = (!__pyx_v_little_endian);
        __pyx_t_9 = __pyx_t_8;
      } else {
        __pyx_t_9 = __pyx_t_6;
      }
      __pyx_t_6 = __pyx_t_9;
    } else {
      __pyx_t_6 = __pyx_t_7;
    }
    if (__pyx_t_6) {

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":791
 *         if ((child.byteorder == '>' and little_endian) or
 *             (child.byteorder == '<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_38), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":801
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_5 = PyInt_FromLong((__pyx_v_offset[0])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_t_5, __pyx_v_new_offset, Py_LT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!__pyx_t_6) break;

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":802
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 120;

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":803
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":804
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_10 = 0;
      (__pyx_v_offset[__pyx_t_10]) = ((__pyx_v_offset[__pyx_t_10]) + 1);
    }

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":806
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_10 = 0;
    (__pyx_v_offset[__pyx_t_10]) = ((__pyx_v_offset[__pyx_t_10]) + __pyx_v_child->elsize);

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":808
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = (!PyDataType_HASFIELDS(__pyx_v_child));
    if (__pyx_t_6) {

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":809
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_3 = PyInt_FromLong(__pyx_v_child->type_num); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_v_t);
      __pyx_v_t = __pyx_t_3;
      __pyx_t_3 = 0;

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":810
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = ((__pyx_v_end - __pyx_v_f) < 5);
      if (__pyx_t_6) {

        /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":811
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_3 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_40), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_Raise(__pyx_t_3, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        goto __pyx_L10;
      }
      __pyx_L10:;

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":814
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_BYTE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":815
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_UBYTE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":816
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_SHORT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 104;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":817
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_USHORT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":818
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_INT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 105;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":819
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_UINT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":820
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_LONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 108;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":821
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_ULONG); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":822
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_LONGLONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 113;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":823
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_ULONGLONG); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":824
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_FLOAT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 102;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":825
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_5 = PyInt_FromLong(NPY_DOUBLE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 100;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":826
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_3 = PyInt_FromLong(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 103;
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":827
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_5 = PyInt_FromLong(NPY_CFLOAT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 102;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":828
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 100;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":829
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_5 = PyInt_FromLong(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 103;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L11;
      }

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":830
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_3 = PyInt_FromLong(NPY_OBJECT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L11;
      }
      /*else*/ {

        /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":832
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
        __pyx_t_5 = PyNumber_Remainder(((PyObject *)__pyx_kp_u_35), __pyx_v_t); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_5));
        __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_3));
        PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
        __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
        __pyx_t_5 = 0;
        __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
        __Pyx_Raise(__pyx_t_5, 0, 0);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L11:;

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":833
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);
      goto __pyx_L9;
    }
    /*else*/ {

      /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":837
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
      __pyx_t_11 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_11 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_11;
    }
    __pyx_L9:;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":838
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("numpy._util_dtypestring");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_child);
  __Pyx_DECREF(__pyx_v_fields);
  __Pyx_DECREF(__pyx_v_childname);
  __Pyx_DECREF(__pyx_v_new_offset);
  __Pyx_DECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":953
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("set_array_base");

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":955
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  if (__pyx_t_1) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":956
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":958
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
    Py_INCREF(__pyx_v_base);

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":959
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":960
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":961
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  __Pyx_RefNannyFinishContext();
}

/* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":963
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base");

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":964
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = (__pyx_v_arr->base == NULL);
  if (__pyx_t_1) {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":965
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":967
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionObject(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_CollisionObject *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_CollisionObject *)o);
  p->_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_CollisionObject(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_CollisionObject *p = (struct __pyx_obj_6bullet_6bullet_CollisionObject *)o;
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_15CollisionObject_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_XDECREF(((PyObject *)p->_shape));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_CollisionObject(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_CollisionObject *p = (struct __pyx_obj_6bullet_6bullet_CollisionObject *)o;
  if (p->_shape) {
    e = (*v)(((PyObject*)p->_shape), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_CollisionObject(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_CollisionObject *p = (struct __pyx_obj_6bullet_6bullet_CollisionObject *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->_shape);
  p->_shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CollisionObject[] = {
  {__Pyx_NAMESTR("getFriction"), (PyCFunction)__pyx_pf_6bullet_6bullet_15CollisionObject_2getFriction, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_15CollisionObject_2getFriction)},
  {__Pyx_NAMESTR("setFriction"), (PyCFunction)__pyx_pf_6bullet_6bullet_15CollisionObject_3setFriction, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_15CollisionObject_3setFriction)},
  {__Pyx_NAMESTR("setRestitution"), (PyCFunction)__pyx_pf_6bullet_6bullet_15CollisionObject_4setRestitution, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_15CollisionObject_4setRestitution)},
  {__Pyx_NAMESTR("getRestitution"), (PyCFunction)__pyx_pf_6bullet_6bullet_15CollisionObject_5getRestitution, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_15CollisionObject_5getRestitution)},
  {__Pyx_NAMESTR("getCollisionShape"), (PyCFunction)__pyx_pf_6bullet_6bullet_15CollisionObject_6getCollisionShape, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_15CollisionObject_6getCollisionShape)},
  {__Pyx_NAMESTR("setCollisionShape"), (PyCFunction)__pyx_pf_6bullet_6bullet_15CollisionObject_7setCollisionShape, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_15CollisionObject_7setCollisionShape)},
  {__Pyx_NAMESTR("getWorldTransform"), (PyCFunction)__pyx_pf_6bullet_6bullet_15CollisionObject_8getWorldTransform, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_15CollisionObject_8getWorldTransform)},
  {__Pyx_NAMESTR("setWorldTransform"), (PyCFunction)__pyx_pf_6bullet_6bullet_15CollisionObject_9setWorldTransform, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_15CollisionObject_9setWorldTransform)},
  {__Pyx_NAMESTR("getActivationState"), (PyCFunction)__pyx_pf_6bullet_6bullet_15CollisionObject_10getActivationState, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_15CollisionObject_10getActivationState)},
  {__Pyx_NAMESTR("setActivationState"), (PyCFunction)__pyx_pf_6bullet_6bullet_15CollisionObject_11setActivationState, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_15CollisionObject_11setActivationState)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CollisionObject = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CollisionObject = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CollisionObject = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CollisionObject = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_CollisionObject = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.CollisionObject"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CollisionObject), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CollisionObject, /*tp_as_number*/
  &__pyx_tp_as_sequence_CollisionObject, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CollisionObject, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CollisionObject, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    A CollisionObject is something which can be collided with when added to a\n    CollisionWorld.  It has a position and orientation as well as a\n    CollisionShape.\n\n    This class is a wrapper around btCollisionObject.\n    "), /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_CollisionObject, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_CollisionObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CollisionObject, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_15CollisionObject_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CollisionObject, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_Vector3(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_7Vector3_0__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_Vector3(PyObject *o) {
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_7Vector3_x(PyObject *o, void *x) {
  return __pyx_pf_6bullet_6bullet_7Vector3_1x_0__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_7Vector3_y(PyObject *o, void *x) {
  return __pyx_pf_6bullet_6bullet_7Vector3_1y_0__get__(o);
}

static PyObject *__pyx_getprop_6bullet_6bullet_7Vector3_z(PyObject *o, void *x) {
  return __pyx_pf_6bullet_6bullet_7Vector3_1z_0__get__(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_Vector3[] = {
  {__Pyx_NAMESTR("normalized"), (PyCFunction)__pyx_pf_6bullet_6bullet_7Vector3_5normalized, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_7Vector3_5normalized)},
  {__Pyx_NAMESTR("cross"), (PyCFunction)__pyx_pf_6bullet_6bullet_7Vector3_6cross, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_7Vector3_6cross)},
  {__Pyx_NAMESTR("dot"), (PyCFunction)__pyx_pf_6bullet_6bullet_7Vector3_7dot, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_7Vector3_7dot)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_Vector3[] = {
  {(char *)"x", __pyx_getprop_6bullet_6bullet_7Vector3_x, 0, 0, 0},
  {(char *)"y", __pyx_getprop_6bullet_6bullet_7Vector3_y, 0, 0, 0},
  {(char *)"z", __pyx_getprop_6bullet_6bullet_7Vector3_z, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Vector3 = {
  __pyx_pf_6bullet_6bullet_7Vector3_3__add__, /*nb_add*/
  __pyx_pf_6bullet_6bullet_7Vector3_4__sub__, /*nb_subtract*/
  __pyx_pf_6bullet_6bullet_7Vector3_2__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Vector3 = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Vector3 = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Vector3 = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_Vector3 = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.Vector3"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_Vector3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_Vector3, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  __pyx_pf_6bullet_6bullet_7Vector3_1__repr__, /*tp_repr*/
  &__pyx_tp_as_number_Vector3, /*tp_as_number*/
  &__pyx_tp_as_sequence_Vector3, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Vector3, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Vector3, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A Vector3 represents a point or vector in three-dimensional space.\n\n    When dealing with most vector quantities such as velocity, position, and\n    force, bullet will use a Vector3.\n\n    This class is loosely a wrapper around btVector3.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_Vector3, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_Vector3, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_Vector3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_Quaternion(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_Quaternion(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_10Quaternion_0__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_Quaternion[] = {
  {__Pyx_NAMESTR("fromScalars"), (PyCFunction)__pyx_pf_6bullet_6bullet_10Quaternion_1fromScalars, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_10Quaternion_1fromScalars)},
  {__Pyx_NAMESTR("fromAxisAngle"), (PyCFunction)__pyx_pf_6bullet_6bullet_10Quaternion_2fromAxisAngle, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_10Quaternion_2fromAxisAngle)},
  {__Pyx_NAMESTR("getX"), (PyCFunction)__pyx_pf_6bullet_6bullet_10Quaternion_4getX, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_10Quaternion_4getX)},
  {__Pyx_NAMESTR("getY"), (PyCFunction)__pyx_pf_6bullet_6bullet_10Quaternion_5getY, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_10Quaternion_5getY)},
  {__Pyx_NAMESTR("getZ"), (PyCFunction)__pyx_pf_6bullet_6bullet_10Quaternion_6getZ, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_10Quaternion_6getZ)},
  {__Pyx_NAMESTR("getW"), (PyCFunction)__pyx_pf_6bullet_6bullet_10Quaternion_7getW, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_10Quaternion_7getW)},
  {__Pyx_NAMESTR("getAxis"), (PyCFunction)__pyx_pf_6bullet_6bullet_10Quaternion_8getAxis, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_10Quaternion_8getAxis)},
  {__Pyx_NAMESTR("getAngle"), (PyCFunction)__pyx_pf_6bullet_6bullet_10Quaternion_9getAngle, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_10Quaternion_9getAngle)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Quaternion = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  __pyx_pf_6bullet_6bullet_10Quaternion_3__mul__, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Quaternion = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Quaternion = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Quaternion = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_Quaternion = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.Quaternion"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_Quaternion), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_Quaternion, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Quaternion, /*tp_as_number*/
  &__pyx_tp_as_sequence_Quaternion, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Quaternion, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Quaternion, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A Quaternion represents a point or vector in four-dimensional space.  It is\n    frequently also used to represent rotation and orientation in\n    three-dimensional space.\n\n    This class is a wrapper around btQuaternion.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_Quaternion, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_Quaternion, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_CollisionShape(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_14CollisionShape_0__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CollisionShape[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CollisionShape = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CollisionShape = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CollisionShape = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CollisionShape = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_CollisionShape = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.CollisionShape"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CollisionShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CollisionShape, /*tp_as_number*/
  &__pyx_tp_as_sequence_CollisionShape, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CollisionShape, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CollisionShape, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A CollisionShape defines the shape of an object in a CollisionWorld.  Shapes\n    are used for collision detection.\n\n    This class is a wrapper around btCollisionShape.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CollisionShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CollisionShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_ConvexShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_ConvexShape[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ConvexShape = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ConvexShape = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ConvexShape = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ConvexShape = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_ConvexShape = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.ConvexShape"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_ConvexShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_ConvexShape, /*tp_as_number*/
  &__pyx_tp_as_sequence_ConvexShape, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ConvexShape, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ConvexShape, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A ConvexShape is a shape that curves outwards only.  This is a base class\n    for many other types of shapes which are convex.\n\n    This class is loosely a wrapper around btConvexShape.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_ConvexShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_ConvexShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_Box2dShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_10Box2dShape_0__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_Box2dShape[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Box2dShape = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Box2dShape = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Box2dShape = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Box2dShape = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_Box2dShape = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.Box2dShape"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_Box2dShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Box2dShape, /*tp_as_number*/
  &__pyx_tp_as_sequence_Box2dShape, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Box2dShape, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Box2dShape, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A Box2dShape is a box primitive around the origin, its sides axis aligned\n    with length specified by half extents, in local shape coordinates.  It has\n    size only in the X and Y dimensions.\n\n    This class is a wrapper around btBox2dShape.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_Box2dShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_Box2dShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_BoxShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_8BoxShape_0__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_BoxShape[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_BoxShape = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_BoxShape = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_BoxShape = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_BoxShape = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_BoxShape = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.BoxShape"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_BoxShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_BoxShape, /*tp_as_number*/
  &__pyx_tp_as_sequence_BoxShape, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_BoxShape, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_BoxShape, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A Box2dShape is a box primitive around the origin, its sides axis aligned\n    with length specified by half extents, in local shape coordinates.  It has\n    size only in the X and Y dimensions.\n\n    This class is a wrapper around btBox2dShape.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_BoxShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_BoxShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_SphereShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_11SphereShape_0__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_SphereShape[] = {
  {__Pyx_NAMESTR("getRadius"), (PyCFunction)__pyx_pf_6bullet_6bullet_11SphereShape_1getRadius, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_11SphereShape_1getRadius)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_SphereShape = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_SphereShape = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SphereShape = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_SphereShape = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_SphereShape = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.SphereShape"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_SphereShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_SphereShape, /*tp_as_number*/
  &__pyx_tp_as_sequence_SphereShape, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SphereShape, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_SphereShape, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A SphereShape is a sphere around the origin, with a specified radius.\n\n    This class is a wrapper around btSphereShape.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_SphereShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_SphereShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CapsuleShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_12CapsuleShape_0__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CapsuleShape[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CapsuleShape = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CapsuleShape = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CapsuleShape = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CapsuleShape = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_CapsuleShape = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.CapsuleShape"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CapsuleShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CapsuleShape, /*tp_as_number*/
  &__pyx_tp_as_sequence_CapsuleShape, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CapsuleShape, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CapsuleShape, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A CapsuleShape is a capsule around the Y axis.  A capsule is a cylinder with\n    a sphere on each end.\n\n    This class is a wrapper around btCapsuleShape.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CapsuleShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CapsuleShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CapsuleShapeZ(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CapsuleShape(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_13CapsuleShapeZ_0__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CapsuleShapeZ[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CapsuleShapeZ = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CapsuleShapeZ = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CapsuleShapeZ = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CapsuleShapeZ = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_CapsuleShapeZ = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.CapsuleShapeZ"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CapsuleShapeZ), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CapsuleShapeZ, /*tp_as_number*/
  &__pyx_tp_as_sequence_CapsuleShapeZ, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CapsuleShapeZ, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CapsuleShapeZ, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A CapsuleShapeZ is a capsule around the Z axis.  A capsule is a cylinder with\n    a sphere on each end.\n\n    This class is a wrapper around btCapsuleShape.Z\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CapsuleShapeZ, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CapsuleShapeZ, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CylinderShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CylinderShape[] = {
  {__Pyx_NAMESTR("getRadius"), (PyCFunction)__pyx_pf_6bullet_6bullet_13CylinderShape_1getRadius, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("getHalfExtentsWithoutMargin"), (PyCFunction)__pyx_pf_6bullet_6bullet_13CylinderShape_2getHalfExtentsWithoutMargin, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CylinderShape = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CylinderShape = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CylinderShape = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CylinderShape = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_CylinderShape = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.CylinderShape"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CylinderShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CylinderShape, /*tp_as_number*/
  &__pyx_tp_as_sequence_CylinderShape, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CylinderShape, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CylinderShape, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A CylinderShape is a cylinder with its central axis aligned with the Y axis.\n\n    This class is a wrapper around btCylinderShape.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CylinderShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_13CylinderShape_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CylinderShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CylinderShapeX(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CylinderShapeX[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CylinderShapeX = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CylinderShapeX = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CylinderShapeX = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CylinderShapeX = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_CylinderShapeX = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.CylinderShapeX"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CylinderShapeX), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CylinderShapeX, /*tp_as_number*/
  &__pyx_tp_as_sequence_CylinderShapeX, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CylinderShapeX, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CylinderShapeX, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A CylinderShapeX is a cylinder with its central axis aligned with the X\n    axis.\n\n    This class is a wrapper around btCylinderShapeX.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CylinderShapeX, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_14CylinderShapeX_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CylinderShapeX, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CylinderShapeZ(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CylinderShapeZ[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CylinderShapeZ = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CylinderShapeZ = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CylinderShapeZ = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CylinderShapeZ = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_CylinderShapeZ = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.CylinderShapeZ"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CylinderShapeZ), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CylinderShapeZ, /*tp_as_number*/
  &__pyx_tp_as_sequence_CylinderShapeZ, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CylinderShapeZ, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CylinderShapeZ, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A CylinderShapeZ is a cylinder with its central axis aligned with the Z\n    axis.\n\n    This class is a wrapper around btCylinderShapeZ.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CylinderShapeZ, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_14CylinderShapeZ_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CylinderShapeZ, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_StaticPlaneShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_16StaticPlaneShape_0__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_StaticPlaneShape[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_StaticPlaneShape = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_StaticPlaneShape = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_StaticPlaneShape = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_StaticPlaneShape = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_StaticPlaneShape = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.StaticPlaneShape"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_StaticPlaneShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_StaticPlaneShape, /*tp_as_number*/
  &__pyx_tp_as_sequence_StaticPlaneShape, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_StaticPlaneShape, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_StaticPlaneShape, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A StaticPlaneShape is an immobile plane.\n\n    This class is a wrapper around btStaticPlaneShape.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_StaticPlaneShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_StaticPlaneShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_6bullet_6bullet_IndexedMesh __pyx_vtable_6bullet_6bullet_IndexedMesh;

static PyObject *__pyx_tp_new_6bullet_6bullet_IndexedMesh(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_IndexedMesh *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_IndexedMesh *)o);
  p->__pyx_vtab = __pyx_vtabptr_6bullet_6bullet_IndexedMesh;
  if (__pyx_pf_6bullet_6bullet_11IndexedMesh_0__cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_IndexedMesh(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_11IndexedMesh_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_IndexedMesh[] = {
  {__Pyx_NAMESTR("setIndices"), (PyCFunction)__pyx_pf_6bullet_6bullet_11IndexedMesh_1setIndices, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_11IndexedMesh_1setIndices)},
  {__Pyx_NAMESTR("setVertices"), (PyCFunction)__pyx_pf_6bullet_6bullet_11IndexedMesh_2setVertices, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_11IndexedMesh_2setVertices)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_IndexedMesh = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_IndexedMesh = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_IndexedMesh = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_IndexedMesh = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_IndexedMesh = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.IndexedMesh"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_IndexedMesh), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_IndexedMesh, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_IndexedMesh, /*tp_as_number*/
  &__pyx_tp_as_sequence_IndexedMesh, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_IndexedMesh, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_IndexedMesh, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    An IndexedMesh is a vertex array and an array of index data into that\n    vertex array.  It defines a mesh of triangles composed of triples of vertex\n    data given by sequential triples of indices from the index array.  For\n    example, an IndexedMesh defining two triangles would use an vertex array\n    like::\n\n        numpy.array([0, 0, 0,\n                     1, 0, 0,\n                     1, 0, 1,\n                     0, 0, 1], 'f')\n\n    and an index array like this::\n\n        numpy.array([0, 1, 2,\n                     2, 3, 0], 'i')\n\n    This class is a wrapper around btIndexedMesh.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_IndexedMesh, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_IndexedMesh, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_StridingMeshInterface(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_StridingMeshInterface(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_21StridingMeshInterface_0__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_StridingMeshInterface[] = {
  {__Pyx_NAMESTR("getNumSubParts"), (PyCFunction)__pyx_pf_6bullet_6bullet_21StridingMeshInterface_1getNumSubParts, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_21StridingMeshInterface_1getNumSubParts)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_StridingMeshInterface = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_StridingMeshInterface = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_StridingMeshInterface = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_StridingMeshInterface = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_StridingMeshInterface = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.StridingMeshInterface"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_StridingMeshInterface), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_StridingMeshInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_StridingMeshInterface, /*tp_as_number*/
  &__pyx_tp_as_sequence_StridingMeshInterface, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_StridingMeshInterface, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_StridingMeshInterface, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A StridingMeshInterface is an object suitable for use in defining a triangle\n    mesh for BvhTriangleMeshShape.\n\n    This class is loosely a wrapper around btStridingMeshInterface.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use TriangleIndexVertexArray instead.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_StridingMeshInterface, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_StridingMeshInterface, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_TriangleIndexVertexArray(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_StridingMeshInterface(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_0__cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_TriangleIndexVertexArray[] = {
  {__Pyx_NAMESTR("addIndexedMesh"), (PyCFunction)__pyx_pf_6bullet_6bullet_24TriangleIndexVertexArray_1addIndexedMesh, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_24TriangleIndexVertexArray_1addIndexedMesh)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_TriangleIndexVertexArray = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_TriangleIndexVertexArray = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_TriangleIndexVertexArray = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_TriangleIndexVertexArray = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_TriangleIndexVertexArray = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.TriangleIndexVertexArray"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_TriangleIndexVertexArray), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_StridingMeshInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_TriangleIndexVertexArray, /*tp_as_number*/
  &__pyx_tp_as_sequence_TriangleIndexVertexArray, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_TriangleIndexVertexArray, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_TriangleIndexVertexArray, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A TriangleIndexVertexArray is a striding mesh defined in terms of an array\n    of IndexedMesh instances.\n\n    Construct a TriangleIndexVertexArray and add one or more IndexedMesh\n    instances to it to define a triangle mesh for a BvhTriangleMeshShape.\n\n    This class is a wrapper around btTriangleIndexVertexArray.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_TriangleIndexVertexArray, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_TriangleIndexVertexArray, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_BvhTriangleMeshShape(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *p;
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionShape(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)o);
  p->stride = ((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_BvhTriangleMeshShape(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *p = (struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)o;
  Py_XDECREF(((PyObject *)p->stride));
  __pyx_tp_dealloc_6bullet_6bullet_CollisionShape(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_BvhTriangleMeshShape(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *p = (struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)o;
  if (__pyx_ptype_6bullet_6bullet_ConvexShape->tp_traverse) {
    e = __pyx_ptype_6bullet_6bullet_ConvexShape->tp_traverse(o, v, a); if (e) return e;
  }
  if (p->stride) {
    e = (*v)(((PyObject*)p->stride), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_BvhTriangleMeshShape(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *p = (struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape *)o;
  PyObject* tmp;
  if (__pyx_ptype_6bullet_6bullet_ConvexShape->tp_clear) {
    __pyx_ptype_6bullet_6bullet_ConvexShape->tp_clear(o);
  }
  tmp = ((PyObject*)p->stride);
  p->stride = ((struct __pyx_obj_6bullet_6bullet_StridingMeshInterface *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_BvhTriangleMeshShape[] = {
  {__Pyx_NAMESTR("buildOptimizedBvh"), (PyCFunction)__pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_1buildOptimizedBvh, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_20BvhTriangleMeshShape_1buildOptimizedBvh)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_BvhTriangleMeshShape = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_BvhTriangleMeshShape = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_BvhTriangleMeshShape = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_BvhTriangleMeshShape = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_BvhTriangleMeshShape = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.BvhTriangleMeshShape"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_BvhTriangleMeshShape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_BvhTriangleMeshShape, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_BvhTriangleMeshShape, /*tp_as_number*/
  &__pyx_tp_as_sequence_BvhTriangleMeshShape, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_BvhTriangleMeshShape, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_BvhTriangleMeshShape, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    A BvhTriangleMeshShape is a shape defined by an array of triangle vertex\n    data and an array of indices against those triangles.\n\n    This class is a wrapper around btBvhTriangleMeshShape.\n    "), /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_BvhTriangleMeshShape, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_BvhTriangleMeshShape, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_BvhTriangleMeshShape, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_20BvhTriangleMeshShape_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_BvhTriangleMeshShape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_Transform(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_9Transform_0__cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_Transform(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_9Transform_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_Transform[] = {
  {__Pyx_NAMESTR("getOrigin"), (PyCFunction)__pyx_pf_6bullet_6bullet_9Transform_2getOrigin, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9Transform_2getOrigin)},
  {__Pyx_NAMESTR("setOrigin"), (PyCFunction)__pyx_pf_6bullet_6bullet_9Transform_3setOrigin, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9Transform_3setOrigin)},
  {__Pyx_NAMESTR("setRotation"), (PyCFunction)__pyx_pf_6bullet_6bullet_9Transform_4setRotation, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9Transform_4setRotation)},
  {__Pyx_NAMESTR("getRotation"), (PyCFunction)__pyx_pf_6bullet_6bullet_9Transform_5getRotation, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9Transform_5getRotation)},
  {__Pyx_NAMESTR("setIdentity"), (PyCFunction)__pyx_pf_6bullet_6bullet_9Transform_6setIdentity, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9Transform_6setIdentity)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Transform = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Transform = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Transform = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Transform = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_Transform = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.Transform"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_Transform), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_Transform, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Transform, /*tp_as_number*/
  &__pyx_tp_as_sequence_Transform, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Transform, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Transform, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A Transform represents an a translation and rotation.\n\n    When dealing with the location and orientation of an object in a\n    CollisionWorld, Bullet will use a Transform instance.\n\n    This class is a wrapper around btTransform.  Unlike btTransform, a Transform\n    always starts off set to the identity.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_Transform, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_Transform, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_MotionState(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_MotionState(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_11MotionState_0__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_MotionState[] = {
  {__Pyx_NAMESTR("getWorldTransform"), (PyCFunction)__pyx_pf_6bullet_6bullet_11MotionState_1getWorldTransform, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_11MotionState_1getWorldTransform)},
  {__Pyx_NAMESTR("setWorldTransform"), (PyCFunction)__pyx_pf_6bullet_6bullet_11MotionState_2setWorldTransform, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_11MotionState_2setWorldTransform)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_MotionState = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_MotionState = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_MotionState = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_MotionState = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_MotionState = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.MotionState"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_MotionState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_MotionState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_MotionState, /*tp_as_number*/
  &__pyx_tp_as_sequence_MotionState, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_MotionState, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_MotionState, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A MotionState is a primarily an object to provide callback methods to the\n    dynamics implementation.\n\n    A MotionState instance can be set on a RigidBody to receive world transform\n    updates for that object.  Bullet may call the setWorldTransform callback\n    only for objects which move to avoid the cost of doing so where no new\n    information will be provided.\n\n    This class is a wrapper around btMotionState.  This wrapping isn't entirely\n    sensible, so it may change in a future release.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use DefaultMotionState instead.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_MotionState, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_MotionState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_DefaultMotionState(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_MotionState(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_18DefaultMotionState_0__cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_DefaultMotionState[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_DefaultMotionState = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_DefaultMotionState = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_DefaultMotionState = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_DefaultMotionState = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_DefaultMotionState = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.DefaultMotionState"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_DefaultMotionState), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_MotionState, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_DefaultMotionState, /*tp_as_number*/
  &__pyx_tp_as_sequence_DefaultMotionState, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_DefaultMotionState, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_DefaultMotionState, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A DefaultMotionState is a MotionState which keeps track of the last\n    transformation provided to it.\n\n    A DefaultMotionState can be used with each RigidBody so that the position\n    can be queried after a simulation step.\n\n    This class is a wrapper around btDefaultMotionState.  Like MotionState, this\n    wrapping doesn't really make sense and will probably be changed.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_DefaultMotionState, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_DefaultMotionState, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_RigidBody(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_RigidBody *p;
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionObject(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_RigidBody *)o);
  p->motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)Py_None); Py_INCREF(Py_None);
  p->shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_RigidBody(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_RigidBody *p = (struct __pyx_obj_6bullet_6bullet_RigidBody *)o;
  Py_XDECREF(((PyObject *)p->motion));
  Py_XDECREF(((PyObject *)p->shape));
  __pyx_tp_dealloc_6bullet_6bullet_CollisionObject(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_RigidBody(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_RigidBody *p = (struct __pyx_obj_6bullet_6bullet_RigidBody *)o;
  e = __pyx_tp_traverse_6bullet_6bullet_CollisionObject(o, v, a); if (e) return e;
  if (p->motion) {
    e = (*v)(((PyObject*)p->motion), a); if (e) return e;
  }
  if (p->shape) {
    e = (*v)(((PyObject*)p->shape), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_RigidBody(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_RigidBody *p = (struct __pyx_obj_6bullet_6bullet_RigidBody *)o;
  PyObject* tmp;
  __pyx_tp_clear_6bullet_6bullet_CollisionObject(o);
  tmp = ((PyObject*)p->motion);
  p->motion = ((struct __pyx_obj_6bullet_6bullet_MotionState *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->shape);
  p->shape = ((struct __pyx_obj_6bullet_6bullet_CollisionShape *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_RigidBody[] = {
  {__Pyx_NAMESTR("fromConstructionInfo"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_1fromConstructionInfo, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_1fromConstructionInfo)},
  {__Pyx_NAMESTR("isInWorld"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_2isInWorld, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_2isInWorld)},
  {__Pyx_NAMESTR("getInvMass"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_3getInvMass, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_3getInvMass)},
  {__Pyx_NAMESTR("getInvInertiaDiagLocal"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_4getInvInertiaDiagLocal, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_4getInvInertiaDiagLocal)},
  {__Pyx_NAMESTR("getMotionState"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_5getMotionState, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_5getMotionState)},
  {__Pyx_NAMESTR("setAngularFactor"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_6setAngularFactor, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_6setAngularFactor)},
  {__Pyx_NAMESTR("setLinearVelocity"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_7setLinearVelocity, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_7setLinearVelocity)},
  {__Pyx_NAMESTR("getLinearVelocity"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_8getLinearVelocity, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_8getLinearVelocity)},
  {__Pyx_NAMESTR("getLinearDamping"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_9getLinearDamping, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_9getLinearDamping)},
  {__Pyx_NAMESTR("getLinearSleepingThreshold"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_10getLinearSleepingThreshold, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_10getLinearSleepingThreshold)},
  {__Pyx_NAMESTR("getAngularSleepingThreshold"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_11getAngularSleepingThreshold, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_11getAngularSleepingThreshold)},
  {__Pyx_NAMESTR("getAngularDamping"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_12getAngularDamping, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_12getAngularDamping)},
  {__Pyx_NAMESTR("applyCentralForce"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_13applyCentralForce, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_13applyCentralForce)},
  {__Pyx_NAMESTR("applyForce"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_14applyForce, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_14applyForce)},
  {__Pyx_NAMESTR("applyCentralImpulse"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_15applyCentralImpulse, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_15applyCentralImpulse)},
  {__Pyx_NAMESTR("applyImpulse"), (PyCFunction)__pyx_pf_6bullet_6bullet_9RigidBody_16applyImpulse, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_9RigidBody_16applyImpulse)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_RigidBody = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_RigidBody = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_RigidBody = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_RigidBody = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_RigidBody = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.RigidBody"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_RigidBody), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_RigidBody, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_RigidBody, /*tp_as_number*/
  &__pyx_tp_as_sequence_RigidBody, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_RigidBody, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_RigidBody, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    A RigidBody is an object which can be added to a DynamicsWorld and involved\n    in dynamics (ie, it can move because of physics).\n\n    Like a CollisionObject, a RigidBody has a CollisionShape.  Additionally, it\n    may also have a MotionState to keep track of its movements.  It also has a\n    mass which will influence in the usual way how much acceleration it\n    experiences due to forces acting on it.\n\n    This class is a wrapper around btRigidBody.\n    "), /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_RigidBody, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_RigidBody, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_RigidBody, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_9RigidBody_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_RigidBody, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_ActionInterface(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_ActionInterface(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_15ActionInterface_0__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_ActionInterface[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ActionInterface = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ActionInterface = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ActionInterface = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ActionInterface = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_ActionInterface = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.ActionInterface"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_ActionInterface), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_ActionInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_ActionInterface, /*tp_as_number*/
  &__pyx_tp_as_sequence_ActionInterface, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ActionInterface, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ActionInterface, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    ActionInterface is a base class for objects in a DynamicsWorld which are not\n    purely dynamic.\n\n    This class is a wrapper around btActionInterface.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use a subclass instead.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_ActionInterface, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_ActionInterface, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CharacterControllerInterface(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ActionInterface(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CharacterControllerInterface[] = {
  {__Pyx_NAMESTR("setWalkDirection"), (PyCFunction)__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_0setWalkDirection, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_28CharacterControllerInterface_0setWalkDirection)},
  {__Pyx_NAMESTR("setVelocityForTimeInterval"), (PyCFunction)__pyx_pf_6bullet_6bullet_28CharacterControllerInterface_1setVelocityForTimeInterval, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_28CharacterControllerInterface_1setVelocityForTimeInterval)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CharacterControllerInterface = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CharacterControllerInterface = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CharacterControllerInterface = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CharacterControllerInterface = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_CharacterControllerInterface = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.CharacterControllerInterface"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CharacterControllerInterface), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_ActionInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CharacterControllerInterface, /*tp_as_number*/
  &__pyx_tp_as_sequence_CharacterControllerInterface, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CharacterControllerInterface, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CharacterControllerInterface, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A CharacterControllerInterface is an ActionInterface which allows walking\n    motion to be applied to an object in a DynamicsWorld without physically\n    simulating that walking.\n\n    This class is a wrapper around btCharacterControllerInterface.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use a subclass instead.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CharacterControllerInterface, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CharacterControllerInterface, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_PairCachingGhostObject(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionObject(t, a, k);
  if (!o) return 0;
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_PairCachingGhostObject[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_PairCachingGhostObject = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_PairCachingGhostObject = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_PairCachingGhostObject = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_PairCachingGhostObject = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_PairCachingGhostObject = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.PairCachingGhostObject"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionObject, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_PairCachingGhostObject, /*tp_as_number*/
  &__pyx_tp_as_sequence_PairCachingGhostObject, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_PairCachingGhostObject, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_PairCachingGhostObject, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n     A PairCachingGhostObject is a CollisionObject which keeps track of all the\n     objects it is overlapping.\n\n     This class is a wrapper around btPairCachingGhostObject.\n     "), /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_CollisionObject, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_CollisionObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_PairCachingGhostObject, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_22PairCachingGhostObject_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_PairCachingGhostObject, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_KinematicCharacterController(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *p;
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ActionInterface(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)o);
  p->ghost = ((struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *)Py_None); Py_INCREF(Py_None);
  p->shape = ((struct __pyx_obj_6bullet_6bullet_ConvexShape *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_KinematicCharacterController(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *p = (struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)o;
  Py_XDECREF(((PyObject *)p->ghost));
  Py_XDECREF(((PyObject *)p->shape));
  __pyx_tp_dealloc_6bullet_6bullet_ActionInterface(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_KinematicCharacterController(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *p = (struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)o;
  if (__pyx_ptype_6bullet_6bullet_CharacterControllerInterface->tp_traverse) {
    e = __pyx_ptype_6bullet_6bullet_CharacterControllerInterface->tp_traverse(o, v, a); if (e) return e;
  }
  if (p->ghost) {
    e = (*v)(((PyObject*)p->ghost), a); if (e) return e;
  }
  if (p->shape) {
    e = (*v)(((PyObject*)p->shape), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_KinematicCharacterController(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *p = (struct __pyx_obj_6bullet_6bullet_KinematicCharacterController *)o;
  PyObject* tmp;
  if (__pyx_ptype_6bullet_6bullet_CharacterControllerInterface->tp_clear) {
    __pyx_ptype_6bullet_6bullet_CharacterControllerInterface->tp_clear(o);
  }
  tmp = ((PyObject*)p->ghost);
  p->ghost = ((struct __pyx_obj_6bullet_6bullet_PairCachingGhostObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->shape);
  p->shape = ((struct __pyx_obj_6bullet_6bullet_ConvexShape *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_6bullet_6bullet_28KinematicCharacterController_ghost(PyObject *o, void *x) {
  return __pyx_pf_6bullet_6bullet_28KinematicCharacterController_5ghost_0__get__(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_KinematicCharacterController[] = {
  {__Pyx_NAMESTR("warp"), (PyCFunction)__pyx_pf_6bullet_6bullet_28KinematicCharacterController_1warp, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_28KinematicCharacterController_1warp)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_KinematicCharacterController[] = {
  {(char *)"ghost", __pyx_getprop_6bullet_6bullet_28KinematicCharacterController_ghost, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_KinematicCharacterController = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_KinematicCharacterController = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_KinematicCharacterController = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_KinematicCharacterController = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_KinematicCharacterController = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.KinematicCharacterController"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_KinematicCharacterController), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_KinematicCharacterController, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_KinematicCharacterController, /*tp_as_number*/
  &__pyx_tp_as_sequence_KinematicCharacterController, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_KinematicCharacterController, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_KinematicCharacterController, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    A KinematicCharacterController is a CharacterControllerInterface which\n    implements movement according to the standard rules of kinematics.  That is,\n    it will move based on a velocity and direction in the usual way, but without\n    regard for interactions with other objects in the world.\n\n    This class is a wrapper around btKinematicCharacterController.\n    "), /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_KinematicCharacterController, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_KinematicCharacterController, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_KinematicCharacterController, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_KinematicCharacterController, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_28KinematicCharacterController_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_KinematicCharacterController, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionDispatcher(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_19CollisionDispatcher_0__cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_CollisionDispatcher(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_19CollisionDispatcher_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CollisionDispatcher[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CollisionDispatcher = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CollisionDispatcher = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CollisionDispatcher = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CollisionDispatcher = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_CollisionDispatcher = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.CollisionDispatcher"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CollisionDispatcher), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionDispatcher, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CollisionDispatcher, /*tp_as_number*/
  &__pyx_tp_as_sequence_CollisionDispatcher, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CollisionDispatcher, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CollisionDispatcher, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A CollisionDispatcher implements pairwise collision detection.  It supports\n    convex-convex collision detection and convex-concave collision detection.\n\n    Roughly speaking, this is the only CollisionDispatcher available, so you\n    don't have to understand it, just use it.  Or better yet, ignore it and let\n    CollisionWorld (or a subclass) create it for you.\n\n    This class is a wrapper around btCollisionDispatcher.\n\n    XXX Try not to instantiate too many of these, each one leaks some memory.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CollisionDispatcher, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CollisionDispatcher, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_OverlappingPairCache(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_OverlappingPairCache(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_20OverlappingPairCache_0__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_OverlappingPairCache[] = {
  {__Pyx_NAMESTR("setInternalGhostPairCallback"), (PyCFunction)__pyx_pf_6bullet_6bullet_20OverlappingPairCache_1setInternalGhostPairCallback, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_20OverlappingPairCache_1setInternalGhostPairCallback)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_OverlappingPairCache = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_OverlappingPairCache = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_OverlappingPairCache = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_OverlappingPairCache = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_OverlappingPairCache = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.OverlappingPairCache"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_OverlappingPairCache), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_OverlappingPairCache, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_OverlappingPairCache, /*tp_as_number*/
  &__pyx_tp_as_sequence_OverlappingPairCache, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_OverlappingPairCache, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_OverlappingPairCache, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    An OverlappingPairCache manages the addition, removal, and storage of\n    overlapping pairs.\n\n    This class is a wrapper around btOverlappingPairCache.\n\n    XXX This wrapper will cause segfaults.  Use one of the subclasses instead.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_OverlappingPairCache, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_OverlappingPairCache, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_HashedOverlappingPairCache(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_OverlappingPairCache(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_26HashedOverlappingPairCache_0__cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_HashedOverlappingPairCache[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_HashedOverlappingPairCache = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_HashedOverlappingPairCache = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_HashedOverlappingPairCache = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_HashedOverlappingPairCache = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_HashedOverlappingPairCache = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.HashedOverlappingPairCache"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_HashedOverlappingPairCache), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_OverlappingPairCache, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_HashedOverlappingPairCache, /*tp_as_number*/
  &__pyx_tp_as_sequence_HashedOverlappingPairCache, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_HashedOverlappingPairCache, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_HashedOverlappingPairCache, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A HashedOverlappingPairCache manages the addition, removal, and storage of\n    overlapping pairs using a hash table.\n\n    This class is a wrapper around btHashedOverlappingPairCache.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_HashedOverlappingPairCache, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_HashedOverlappingPairCache, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_BroadphaseInterface(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)o);
  p->_paircache = ((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_BroadphaseInterface(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *p = (struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)o;
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_19BroadphaseInterface_0__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_XDECREF(((PyObject *)p->_paircache));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_BroadphaseInterface(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *p = (struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)o;
  if (p->_paircache) {
    e = (*v)(((PyObject*)p->_paircache), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_BroadphaseInterface(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *p = (struct __pyx_obj_6bullet_6bullet_BroadphaseInterface *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->_paircache);
  p->_paircache = ((struct __pyx_obj_6bullet_6bullet_OverlappingPairCache *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_6bullet_6bullet_19BroadphaseInterface__paircache(PyObject *o, void *x) {
  return __pyx_pf_6bullet_6bullet_19BroadphaseInterface_10_paircache_0__get__(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_BroadphaseInterface[] = {
  {__Pyx_NAMESTR("getOverlappingPairCache"), (PyCFunction)__pyx_pf_6bullet_6bullet_19BroadphaseInterface_1getOverlappingPairCache, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_19BroadphaseInterface_1getOverlappingPairCache)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_BroadphaseInterface[] = {
  {(char *)"_paircache", __pyx_getprop_6bullet_6bullet_19BroadphaseInterface__paircache, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_BroadphaseInterface = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_BroadphaseInterface = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_BroadphaseInterface = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_BroadphaseInterface = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_BroadphaseInterface = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.BroadphaseInterface"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_BroadphaseInterface), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_BroadphaseInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_BroadphaseInterface, /*tp_as_number*/
  &__pyx_tp_as_sequence_BroadphaseInterface, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_BroadphaseInterface, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_BroadphaseInterface, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    A BroadphaseInterface generates lists of potentially colliding pairs.  It is\n    intended to be faster than CollisionDispatcher, but it may include pairs of\n    objects which do not actually collide.  It is applied first to narrow the\n    list of pairs the CollisionDispatcher will need to examine.\n\n    This class is loosely a wrapper around btBroadphaseInterface.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use one of the subclasses instead.\n    "), /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_BroadphaseInterface, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_BroadphaseInterface, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_BroadphaseInterface, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_BroadphaseInterface, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_BroadphaseInterface, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_AxisSweep3(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_BroadphaseInterface(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_10AxisSweep3_0__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_AxisSweep3[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_AxisSweep3 = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_AxisSweep3 = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_AxisSweep3 = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_AxisSweep3 = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_AxisSweep3 = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.AxisSweep3"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_AxisSweep3), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_BroadphaseInterface, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_AxisSweep3, /*tp_as_number*/
  &__pyx_tp_as_sequence_AxisSweep3, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_AxisSweep3, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_AxisSweep3, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    An AxisSweep3 is a BroadphaseInterface implemented using the sweep and prune\n    algorithm.  AxisSweep3 is a good general purpose BroadphaseInterface,\n    particularly for worlds where most objects have little or no motion.\n    However, it can only detect collisions within specified fixed bounds.\n\n    This class is a wrapper around btAxisSweep3.\n    "), /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_BroadphaseInterface, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_BroadphaseInterface, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_AxisSweep3, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_AxisSweep3, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_ConstraintSolver(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_ConstraintSolver(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_16ConstraintSolver_0__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_ConstraintSolver[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ConstraintSolver = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ConstraintSolver = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ConstraintSolver = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ConstraintSolver = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_ConstraintSolver = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.ConstraintSolver"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_ConstraintSolver), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_ConstraintSolver, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_ConstraintSolver, /*tp_as_number*/
  &__pyx_tp_as_sequence_ConstraintSolver, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ConstraintSolver, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ConstraintSolver, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A ConstraintSolver determines what contact forces to apply.\n\n    This class is loosely a wrapper around btConstraintSolver.\n\n    XXX THIS WRAPPER MAY CAUSE SEGFAULTS.  Use one of the subclasses instead.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_ConstraintSolver, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_ConstraintSolver, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_SequentialImpulseConstraintSolver(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bullet_6bullet_ConstraintSolver(t, a, k);
  if (!o) return 0;
  if (__pyx_pf_6bullet_6bullet_33SequentialImpulseConstraintSolver_0__cinit__(o, __pyx_empty_tuple, NULL) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_SequentialImpulseConstraintSolver[] = {
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_SequentialImpulseConstraintSolver = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_SequentialImpulseConstraintSolver = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SequentialImpulseConstraintSolver = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_SequentialImpulseConstraintSolver = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.SequentialImpulseConstraintSolver"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_SequentialImpulseConstraintSolver), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_ConstraintSolver, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_SequentialImpulseConstraintSolver, /*tp_as_number*/
  &__pyx_tp_as_sequence_SequentialImpulseConstraintSolver, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SequentialImpulseConstraintSolver, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_SequentialImpulseConstraintSolver, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A SequentialImpulseConstraintSolver is a ConstraintSolver based on a fast\n    SIMD implementation of the Projected Gauss Seidel method.\n\n    This is basically the only ConstraintSolver available, so whether you\n    understood that sentence or not, use this class with your DynamicsWorld.  Or\n    just ignore ConstraintSolvers entirely and let the DynamicsWorld create one.\n\n    This class is a wrapper around btSequentialImpulseConstraintSolver.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_SequentialImpulseConstraintSolver, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_SequentialImpulseConstraintSolver, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_6bullet_6bullet_Collision(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_Collision *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_Collision *)o);
  p->position = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  p->collision_normal = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_Collision(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_Collision *p = (struct __pyx_obj_6bullet_6bullet_Collision *)o;
  Py_XDECREF(((PyObject *)p->position));
  Py_XDECREF(((PyObject *)p->collision_normal));
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_Collision(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_Collision *p = (struct __pyx_obj_6bullet_6bullet_Collision *)o;
  if (p->position) {
    e = (*v)(((PyObject*)p->position), a); if (e) return e;
  }
  if (p->collision_normal) {
    e = (*v)(((PyObject*)p->collision_normal), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_Collision(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_Collision *p = (struct __pyx_obj_6bullet_6bullet_Collision *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->position);
  p->position = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->collision_normal);
  p->collision_normal = ((struct __pyx_obj_6bullet_6bullet_Vector3 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_6bullet_6bullet_9Collision_distance(PyObject *o, void *x) {
  return __pyx_pf_6bullet_6bullet_9Collision_8distance_0__get__(o);
}

static int __pyx_setprop_6bullet_6bullet_9Collision_distance(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bullet_6bullet_9Collision_8distance_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_6bullet_6bullet_9Collision_position(PyObject *o, void *x) {
  return __pyx_pf_6bullet_6bullet_9Collision_8position_0__get__(o);
}

static int __pyx_setprop_6bullet_6bullet_9Collision_position(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bullet_6bullet_9Collision_8position_1__set__(o, v);
  }
  else {
    return __pyx_pf_6bullet_6bullet_9Collision_8position_2__del__(o);
  }
}

static PyObject *__pyx_getprop_6bullet_6bullet_9Collision_collision_normal(PyObject *o, void *x) {
  return __pyx_pf_6bullet_6bullet_9Collision_16collision_normal_0__get__(o);
}

static int __pyx_setprop_6bullet_6bullet_9Collision_collision_normal(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bullet_6bullet_9Collision_16collision_normal_1__set__(o, v);
  }
  else {
    return __pyx_pf_6bullet_6bullet_9Collision_16collision_normal_2__del__(o);
  }
}

static PyObject *__pyx_getprop_6bullet_6bullet_9Collision_triangle_index(PyObject *o, void *x) {
  return __pyx_pf_6bullet_6bullet_9Collision_14triangle_index_0__get__(o);
}

static int __pyx_setprop_6bullet_6bullet_9Collision_triangle_index(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_6bullet_6bullet_9Collision_14triangle_index_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_6bullet_6bullet_Collision[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_6bullet_6bullet_Collision[] = {
  {(char *)"distance", __pyx_getprop_6bullet_6bullet_9Collision_distance, __pyx_setprop_6bullet_6bullet_9Collision_distance, 0, 0},
  {(char *)"position", __pyx_getprop_6bullet_6bullet_9Collision_position, __pyx_setprop_6bullet_6bullet_9Collision_position, 0, 0},
  {(char *)"collision_normal", __pyx_getprop_6bullet_6bullet_9Collision_collision_normal, __pyx_setprop_6bullet_6bullet_9Collision_collision_normal, 0, 0},
  {(char *)"triangle_index", __pyx_getprop_6bullet_6bullet_9Collision_triangle_index, __pyx_setprop_6bullet_6bullet_9Collision_triangle_index, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Collision = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Collision = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Collision = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Collision = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_Collision = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.Collision"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_Collision), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_Collision, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_Collision, /*tp_as_number*/
  &__pyx_tp_as_sequence_Collision, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Collision, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Collision, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    A Collision has information about a single collision detected during a sweep test\n    "), /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_Collision, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_Collision, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_Collision, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_6bullet_6bullet_Collision, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_Collision, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_6bullet_6bullet_CollisionWorld __pyx_vtable_6bullet_6bullet_CollisionWorld;

static PyObject *__pyx_tp_new_6bullet_6bullet_CollisionWorld(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_CollisionWorld *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_CollisionWorld *)o);
  p->__pyx_vtab = __pyx_vtabptr_6bullet_6bullet_CollisionWorld;
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_CollisionWorld(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_6bullet_6bullet_14CollisionWorld_1__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bullet_6bullet_CollisionWorld[] = {
  {__Pyx_NAMESTR("setDebugDrawer"), (PyCFunction)__pyx_pf_6bullet_6bullet_14CollisionWorld_2setDebugDrawer, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_14CollisionWorld_2setDebugDrawer)},
  {__Pyx_NAMESTR("debugDrawWorld"), (PyCFunction)__pyx_pf_6bullet_6bullet_14CollisionWorld_3debugDrawWorld, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_14CollisionWorld_3debugDrawWorld)},
  {__Pyx_NAMESTR("getNumCollisionObjects"), (PyCFunction)__pyx_pf_6bullet_6bullet_14CollisionWorld_4getNumCollisionObjects, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_14CollisionWorld_4getNumCollisionObjects)},
  {__Pyx_NAMESTR("addCollisionObject"), (PyCFunction)__pyx_pf_6bullet_6bullet_14CollisionWorld_5addCollisionObject, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_14CollisionWorld_5addCollisionObject)},
  {__Pyx_NAMESTR("removeCollisionObject"), (PyCFunction)__pyx_pf_6bullet_6bullet_14CollisionWorld_6removeCollisionObject, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_14CollisionWorld_6removeCollisionObject)},
  {__Pyx_NAMESTR("contactTest"), (PyCFunction)__pyx_pf_6bullet_6bullet_14CollisionWorld_7contactTest, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("convexSweepTest"), (PyCFunction)__pyx_pf_6bullet_6bullet_14CollisionWorld_8convexSweepTest, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_CollisionWorld = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_CollisionWorld = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_CollisionWorld = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_CollisionWorld = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_CollisionWorld = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.CollisionWorld"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_CollisionWorld), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_CollisionWorld, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_CollisionWorld, /*tp_as_number*/
  &__pyx_tp_as_sequence_CollisionWorld, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_CollisionWorld, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_CollisionWorld, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  __Pyx_DOCSTR("\n    A CollisionWorld is a container for CollisionObjects which can detect\n    collisions between those objects.\n\n    This class is a wrapper around btCollisionWorld.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_CollisionWorld, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_14CollisionWorld_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_CollisionWorld, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_6bullet_6bullet_DynamicsWorld __pyx_vtable_6bullet_6bullet_DynamicsWorld;

static PyObject *__pyx_tp_new_6bullet_6bullet_DynamicsWorld(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_DynamicsWorld *p;
  PyObject *o = __pyx_tp_new_6bullet_6bullet_CollisionWorld(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_6bullet_6bullet_CollisionWorld*)__pyx_vtabptr_6bullet_6bullet_DynamicsWorld;
  p->_rigidBodies = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_DynamicsWorld(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_DynamicsWorld *p = (struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)o;
  Py_XDECREF(((PyObject *)p->_rigidBodies));
  __pyx_tp_dealloc_6bullet_6bullet_CollisionWorld(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_DynamicsWorld(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_DynamicsWorld *p = (struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)o;
  if (__pyx_ptype_6bullet_6bullet_CollisionWorld->tp_traverse) {
    e = __pyx_ptype_6bullet_6bullet_CollisionWorld->tp_traverse(o, v, a); if (e) return e;
  }
  if (p->_rigidBodies) {
    e = (*v)(p->_rigidBodies, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_DynamicsWorld(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_DynamicsWorld *p = (struct __pyx_obj_6bullet_6bullet_DynamicsWorld *)o;
  PyObject* tmp;
  if (__pyx_ptype_6bullet_6bullet_CollisionWorld->tp_clear) {
    __pyx_ptype_6bullet_6bullet_CollisionWorld->tp_clear(o);
  }
  tmp = ((PyObject*)p->_rigidBodies);
  p->_rigidBodies = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_DynamicsWorld[] = {
  {__Pyx_NAMESTR("addRigidBody"), (PyCFunction)__pyx_pf_6bullet_6bullet_13DynamicsWorld_1addRigidBody, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_13DynamicsWorld_1addRigidBody)},
  {__Pyx_NAMESTR("removeRigidBody"), (PyCFunction)__pyx_pf_6bullet_6bullet_13DynamicsWorld_2removeRigidBody, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_13DynamicsWorld_2removeRigidBody)},
  {__Pyx_NAMESTR("addAction"), (PyCFunction)__pyx_pf_6bullet_6bullet_13DynamicsWorld_3addAction, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_13DynamicsWorld_3addAction)},
  {__Pyx_NAMESTR("removeAction"), (PyCFunction)__pyx_pf_6bullet_6bullet_13DynamicsWorld_4removeAction, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_13DynamicsWorld_4removeAction)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_DynamicsWorld = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_DynamicsWorld = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_DynamicsWorld = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_DynamicsWorld = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_DynamicsWorld = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.DynamicsWorld"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_DynamicsWorld), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_DynamicsWorld, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_DynamicsWorld, /*tp_as_number*/
  &__pyx_tp_as_sequence_DynamicsWorld, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_DynamicsWorld, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_DynamicsWorld, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    A DynamicsWorld is a container for RigidBodies which implements dynamics (ie\n    physics) for those bodies.\n\n    For a dynamics world in which simulation time can actually pass, see one of\n    the subclasses of this class.\n\n    This class is a wrapper around btDynamicsWorld.\n    "), /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_DynamicsWorld, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_DynamicsWorld, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_DynamicsWorld, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_13DynamicsWorld_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_DynamicsWorld, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_6bullet_6bullet_DiscreteDynamicsWorld __pyx_vtable_6bullet_6bullet_DiscreteDynamicsWorld;

static PyObject *__pyx_tp_new_6bullet_6bullet_DiscreteDynamicsWorld(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *p;
  PyObject *o = __pyx_tp_new_6bullet_6bullet_DynamicsWorld(t, a, k);
  if (!o) return 0;
  p = ((struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_6bullet_6bullet_CollisionWorld*)__pyx_vtabptr_6bullet_6bullet_DiscreteDynamicsWorld;
  p->solver = ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_6bullet_6bullet_DiscreteDynamicsWorld(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *p = (struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)o;
  Py_XDECREF(((PyObject *)p->solver));
  __pyx_tp_dealloc_6bullet_6bullet_DynamicsWorld(o);
}

static int __pyx_tp_traverse_6bullet_6bullet_DiscreteDynamicsWorld(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *p = (struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)o;
  e = __pyx_tp_traverse_6bullet_6bullet_DynamicsWorld(o, v, a); if (e) return e;
  if (p->solver) {
    e = (*v)(((PyObject*)p->solver), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_6bullet_6bullet_DiscreteDynamicsWorld(PyObject *o) {
  struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *p = (struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld *)o;
  PyObject* tmp;
  __pyx_tp_clear_6bullet_6bullet_DynamicsWorld(o);
  tmp = ((PyObject*)p->solver);
  p->solver = ((struct __pyx_obj_6bullet_6bullet_ConstraintSolver *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_6bullet_6bullet_DiscreteDynamicsWorld[] = {
  {__Pyx_NAMESTR("setGravity"), (PyCFunction)__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_1setGravity, METH_O, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_1setGravity)},
  {__Pyx_NAMESTR("getGravity"), (PyCFunction)__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_2getGravity, METH_NOARGS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_2getGravity)},
  {__Pyx_NAMESTR("stepSimulation"), (PyCFunction)__pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_3stepSimulation, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_6bullet_6bullet_21DiscreteDynamicsWorld_3stepSimulation)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_DiscreteDynamicsWorld = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_DiscreteDynamicsWorld = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_DiscreteDynamicsWorld = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_DiscreteDynamicsWorld = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_6bullet_6bullet_DiscreteDynamicsWorld = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("bullet.bullet.DiscreteDynamicsWorld"), /*tp_name*/
  sizeof(struct __pyx_obj_6bullet_6bullet_DiscreteDynamicsWorld), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bullet_6bullet_DiscreteDynamicsWorld, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_DiscreteDynamicsWorld, /*tp_as_number*/
  &__pyx_tp_as_sequence_DiscreteDynamicsWorld, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_DiscreteDynamicsWorld, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_DiscreteDynamicsWorld, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    A DiscreteDynamicsWorld is a DynamicsWorld in which time passes in fixed\n    increments.\n\n    This class is a wrapper around btDiscreteDynamicsWorld.\n    "), /*tp_doc*/
  __pyx_tp_traverse_6bullet_6bullet_DiscreteDynamicsWorld, /*tp_traverse*/
  __pyx_tp_clear_6bullet_6bullet_DiscreteDynamicsWorld, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bullet_6bullet_DiscreteDynamicsWorld, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pf_6bullet_6bullet_21DiscreteDynamicsWorld_0__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bullet_6bullet_DiscreteDynamicsWorld, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    __Pyx_NAMESTR("bullet"),
    __Pyx_DOCSTR(__pyx_k_41), /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_n_s_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 0, 1, 1},
  {&__pyx_n_s_11, __pyx_k_11, sizeof(__pyx_k_11), 0, 0, 1, 1},
  {&__pyx_n_s_12, __pyx_k_12, sizeof(__pyx_k_12), 0, 0, 1, 1},
  {&__pyx_n_s_13, __pyx_k_13, sizeof(__pyx_k_13), 0, 0, 1, 1},
  {&__pyx_n_s_14, __pyx_k_14, sizeof(__pyx_k_14), 0, 0, 1, 1},
  {&__pyx_n_s_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 0, 1, 1},
  {&__pyx_n_s_16, __pyx_k_16, sizeof(__pyx_k_16), 0, 0, 1, 1},
  {&__pyx_n_s_17, __pyx_k_17, sizeof(__pyx_k_17), 0, 0, 1, 1},
  {&__pyx_n_s_18, __pyx_k_18, sizeof(__pyx_k_18), 0, 0, 1, 1},
  {&__pyx_n_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 1},
  {&__pyx_n_s_21, __pyx_k_21, sizeof(__pyx_k_21), 0, 0, 1, 1},
  {&__pyx_kp_s_22, __pyx_k_22, sizeof(__pyx_k_22), 0, 0, 1, 0},
  {&__pyx_n_s_24, __pyx_k_24, sizeof(__pyx_k_24), 0, 0, 1, 1},
  {&__pyx_n_s_25, __pyx_k_25, sizeof(__pyx_k_25), 0, 0, 1, 1},
  {&__pyx_kp_u_29, __pyx_k_29, sizeof(__pyx_k_29), 0, 1, 0, 0},
  {&__pyx_n_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 1},
  {&__pyx_kp_u_31, __pyx_k_31, sizeof(__pyx_k_31), 0, 1, 0, 0},
  {&__pyx_kp_u_33, __pyx_k_33, sizeof(__pyx_k_33), 0, 1, 0, 0},
  {&__pyx_kp_u_35, __pyx_k_35, sizeof(__pyx_k_35), 0, 1, 0, 0},
  {&__pyx_kp_u_36, __pyx_k_36, sizeof(__pyx_k_36), 0, 1, 0, 0},
  {&__pyx_kp_u_39, __pyx_k_39, sizeof(__pyx_k_39), 0, 1, 0, 0},
  {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
  {&__pyx_n_s_42, __pyx_k_42, sizeof(__pyx_k_42), 0, 0, 1, 1},
  {&__pyx_n_s_43, __pyx_k_43, sizeof(__pyx_k_43), 0, 0, 1, 1},
  {&__pyx_n_s_44, __pyx_k_44, sizeof(__pyx_k_44), 0, 0, 1, 1},
  {&__pyx_n_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 1},
  {&__pyx_n_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 1},
  {&__pyx_n_s__ACTIVE_TAG, __pyx_k__ACTIVE_TAG, sizeof(__pyx_k__ACTIVE_TAG), 0, 0, 1, 1},
  {&__pyx_n_s__DISABLE_SIMULATION, __pyx_k__DISABLE_SIMULATION, sizeof(__pyx_k__DISABLE_SIMULATION), 0, 0, 1, 1},
  {&__pyx_n_s__DRAW_AABB, __pyx_k__DRAW_AABB, sizeof(__pyx_k__DRAW_AABB), 0, 0, 1, 1},
  {&__pyx_n_s__DRAW_CONSTRAINTS, __pyx_k__DRAW_CONSTRAINTS, sizeof(__pyx_k__DRAW_CONSTRAINTS), 0, 0, 1, 1},
  {&__pyx_n_s__DRAW_CONTACT_POINTS, __pyx_k__DRAW_CONTACT_POINTS, sizeof(__pyx_k__DRAW_CONTACT_POINTS), 0, 0, 1, 1},
  {&__pyx_n_s__DRAW_FEATURES_TEXT, __pyx_k__DRAW_FEATURES_TEXT, sizeof(__pyx_k__DRAW_FEATURES_TEXT), 0, 0, 1, 1},
  {&__pyx_n_s__DRAW_TEXT, __pyx_k__DRAW_TEXT, sizeof(__pyx_k__DRAW_TEXT), 0, 0, 1, 1},
  {&__pyx_n_s__DRAW_WIREFRAME, __pyx_k__DRAW_WIREFRAME, sizeof(__pyx_k__DRAW_WIREFRAME), 0, 0, 1, 1},
  {&__pyx_n_s__ISLAND_SLEEPING, __pyx_k__ISLAND_SLEEPING, sizeof(__pyx_k__ISLAND_SLEEPING), 0, 0, 1, 1},
  {&__pyx_n_s__NO_DEBUG, __pyx_k__NO_DEBUG, sizeof(__pyx_k__NO_DEBUG), 0, 0, 1, 1},
  {&__pyx_n_s__RuntimeError, __pyx_k__RuntimeError, sizeof(__pyx_k__RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s__ValueError, __pyx_k__ValueError, sizeof(__pyx_k__ValueError), 0, 0, 1, 1},
  {&__pyx_n_s__WANTS_DEACTIVATION, __pyx_k__WANTS_DEACTIVATION, sizeof(__pyx_k__WANTS_DEACTIVATION), 0, 0, 1, 1},
  {&__pyx_n_s__XXX, __pyx_k__XXX, sizeof(__pyx_k__XXX), 0, 0, 1, 1},
  {&__pyx_n_s____init__, __pyx_k____init__, sizeof(__pyx_k____init__), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s___dtypeToScalarType, __pyx_k___dtypeToScalarType, sizeof(__pyx_k___dtypeToScalarType), 0, 0, 1, 1},
  {&__pyx_n_s___paircache, __pyx_k___paircache, sizeof(__pyx_k___paircache), 0, 0, 1, 1},
  {&__pyx_n_s___rigidBodies, __pyx_k___rigidBodies, sizeof(__pyx_k___rigidBodies), 0, 0, 1, 1},
  {&__pyx_n_s___shape, __pyx_k___shape, sizeof(__pyx_k___shape), 0, 0, 1, 1},
  {&__pyx_n_s__addAction, __pyx_k__addAction, sizeof(__pyx_k__addAction), 0, 0, 1, 1},
  {&__pyx_n_s__addCollisionObject, __pyx_k__addCollisionObject, sizeof(__pyx_k__addCollisionObject), 0, 0, 1, 1},
  {&__pyx_n_s__addIndexedMesh, __pyx_k__addIndexedMesh, sizeof(__pyx_k__addIndexedMesh), 0, 0, 1, 1},
  {&__pyx_n_s__addRigidBody, __pyx_k__addRigidBody, sizeof(__pyx_k__addRigidBody), 0, 0, 1, 1},
  {&__pyx_n_s__angle, __pyx_k__angle, sizeof(__pyx_k__angle), 0, 0, 1, 1},
  {&__pyx_n_s__angularDamping, __pyx_k__angularDamping, sizeof(__pyx_k__angularDamping), 0, 0, 1, 1},
  {&__pyx_n_s__append, __pyx_k__append, sizeof(__pyx_k__append), 0, 0, 1, 1},
  {&__pyx_n_s__applyCentralForce, __pyx_k__applyCentralForce, sizeof(__pyx_k__applyCentralForce), 0, 0, 1, 1},
  {&__pyx_n_s__applyCentralImpulse, __pyx_k__applyCentralImpulse, sizeof(__pyx_k__applyCentralImpulse), 0, 0, 1, 1},
  {&__pyx_n_s__applyForce, __pyx_k__applyForce, sizeof(__pyx_k__applyForce), 0, 0, 1, 1},
  {&__pyx_n_s__applyImpulse, __pyx_k__applyImpulse, sizeof(__pyx_k__applyImpulse), 0, 0, 1, 1},
  {&__pyx_n_s__axis, __pyx_k__axis, sizeof(__pyx_k__axis), 0, 0, 1, 1},
  {&__pyx_n_s__base, __pyx_k__base, sizeof(__pyx_k__base), 0, 0, 1, 1},
  {&__pyx_n_s__boxHalfExtents, __pyx_k__boxHalfExtents, sizeof(__pyx_k__boxHalfExtents), 0, 0, 1, 1},
  {&__pyx_n_s__broadphase, __pyx_k__broadphase, sizeof(__pyx_k__broadphase), 0, 0, 1, 1},
  {&__pyx_n_s__buf, __pyx_k__buf, sizeof(__pyx_k__buf), 0, 0, 1, 1},
  {&__pyx_n_s__buildOptimizedBvh, __pyx_k__buildOptimizedBvh, sizeof(__pyx_k__buildOptimizedBvh), 0, 0, 1, 1},
  {&__pyx_n_s__byteorder, __pyx_k__byteorder, sizeof(__pyx_k__byteorder), 0, 0, 1, 1},
  {&__pyx_n_s__char, __pyx_k__char, sizeof(__pyx_k__char), 0, 0, 1, 1},
  {&__pyx_n_s__collision_normal, __pyx_k__collision_normal, sizeof(__pyx_k__collision_normal), 0, 0, 1, 1},
  {&__pyx_n_s__config, __pyx_k__config, sizeof(__pyx_k__config), 0, 0, 1, 1},
  {&__pyx_n_s__constant, __pyx_k__constant, sizeof(__pyx_k__constant), 0, 0, 1, 1},
  {&__pyx_n_s__cross, __pyx_k__cross, sizeof(__pyx_k__cross), 0, 0, 1, 1},
  {&__pyx_n_s__data, __pyx_k__data, sizeof(__pyx_k__data), 0, 0, 1, 1},
  {&__pyx_n_s__debugDraw, __pyx_k__debugDraw, sizeof(__pyx_k__debugDraw), 0, 0, 1, 1},
  {&__pyx_n_s__debugDrawWorld, __pyx_k__debugDrawWorld, sizeof(__pyx_k__debugDrawWorld), 0, 0, 1, 1},
  {&__pyx_n_s__descr, __pyx_k__descr, sizeof(__pyx_k__descr), 0, 0, 1, 1},
  {&__pyx_n_s__dispatcher, __pyx_k__dispatcher, sizeof(__pyx_k__dispatcher), 0, 0, 1, 1},
  {&__pyx_n_s__distance, __pyx_k__distance, sizeof(__pyx_k__distance), 0, 0, 1, 1},
  {&__pyx_n_s__dot, __pyx_k__dot, sizeof(__pyx_k__dot), 0, 0, 1, 1},
  {&__pyx_n_s__dtype, __pyx_k__dtype, sizeof(__pyx_k__dtype), 0, 0, 1, 1},
  {&__pyx_n_s__f, __pyx_k__f, sizeof(__pyx_k__f), 0, 0, 1, 1},
  {&__pyx_n_s__fields, __pyx_k__fields, sizeof(__pyx_k__fields), 0, 0, 1, 1},
  {&__pyx_n_s__fixedTimeStep, __pyx_k__fixedTimeStep, sizeof(__pyx_k__fixedTimeStep), 0, 0, 1, 1},
  {&__pyx_n_s__format, __pyx_k__format, sizeof(__pyx_k__format), 0, 0, 1, 1},
  {&__pyx_n_s__friction, __pyx_k__friction, sizeof(__pyx_k__friction), 0, 0, 1, 1},
  {&__pyx_n_s__fromAxisAngle, __pyx_k__fromAxisAngle, sizeof(__pyx_k__fromAxisAngle), 0, 0, 1, 1},
  {&__pyx_n_s__fromScalars, __pyx_k__fromScalars, sizeof(__pyx_k__fromScalars), 0, 0, 1, 1},
  {&__pyx_n_s__getActivationState, __pyx_k__getActivationState, sizeof(__pyx_k__getActivationState), 0, 0, 1, 1},
  {&__pyx_n_s__getAngle, __pyx_k__getAngle, sizeof(__pyx_k__getAngle), 0, 0, 1, 1},
  {&__pyx_n_s__getAngularDamping, __pyx_k__getAngularDamping, sizeof(__pyx_k__getAngularDamping), 0, 0, 1, 1},
  {&__pyx_n_s__getAxis, __pyx_k__getAxis, sizeof(__pyx_k__getAxis), 0, 0, 1, 1},
  {&__pyx_n_s__getCollisionShape, __pyx_k__getCollisionShape, sizeof(__pyx_k__getCollisionShape), 0, 0, 1, 1},
  {&__pyx_n_s__getFriction, __pyx_k__getFriction, sizeof(__pyx_k__getFriction), 0, 0, 1, 1},
  {&__pyx_n_s__getGravity, __pyx_k__getGravity, sizeof(__pyx_k__getGravity), 0, 0, 1, 1},
  {&__pyx_n_s__getInvMass, __pyx_k__getInvMass, sizeof(__pyx_k__getInvMass), 0, 0, 1, 1},
  {&__pyx_n_s__getLinearDamping, __pyx_k__getLinearDamping, sizeof(__pyx_k__getLinearDamping), 0, 0, 1, 1},
  {&__pyx_n_s__getLinearVelocity, __pyx_k__getLinearVelocity, sizeof(__pyx_k__getLinearVelocity), 0, 0, 1, 1},
  {&__pyx_n_s__getNumSubParts, __pyx_k__getNumSubParts, sizeof(__pyx_k__getNumSubParts), 0, 0, 1, 1},
  {&__pyx_n_s__getOrigin, __pyx_k__getOrigin, sizeof(__pyx_k__getOrigin), 0, 0, 1, 1},
  {&__pyx_n_s__getRadius, __pyx_k__getRadius, sizeof(__pyx_k__getRadius), 0, 0, 1, 1},
  {&__pyx_n_s__getRestitution, __pyx_k__getRestitution, sizeof(__pyx_k__getRestitution), 0, 0, 1, 1},
  {&__pyx_n_s__getRotation, __pyx_k__getRotation, sizeof(__pyx_k__getRotation), 0, 0, 1, 1},
  {&__pyx_n_s__getW, __pyx_k__getW, sizeof(__pyx_k__getW), 0, 0, 1, 1},
  {&__pyx_n_s__getWorldTransform, __pyx_k__getWorldTransform, sizeof(__pyx_k__getWorldTransform), 0, 0, 1, 1},
  {&__pyx_n_s__getX, __pyx_k__getX, sizeof(__pyx_k__getX), 0, 0, 1, 1},
  {&__pyx_n_s__getY, __pyx_k__getY, sizeof(__pyx_k__getY), 0, 0, 1, 1},
  {&__pyx_n_s__getZ, __pyx_k__getZ, sizeof(__pyx_k__getZ), 0, 0, 1, 1},
  {&__pyx_n_s__ghost, __pyx_k__ghost, sizeof(__pyx_k__ghost), 0, 0, 1, 1},
  {&__pyx_n_s__halfExtents, __pyx_k__halfExtents, sizeof(__pyx_k__halfExtents), 0, 0, 1, 1},
  {&__pyx_n_s__height, __pyx_k__height, sizeof(__pyx_k__height), 0, 0, 1, 1},
  {&__pyx_n_s__i, __pyx_k__i, sizeof(__pyx_k__i), 0, 0, 1, 1},
  {&__pyx_n_s__indexBase, __pyx_k__indexBase, sizeof(__pyx_k__indexBase), 0, 0, 1, 1},
  {&__pyx_n_s__indexStride, __pyx_k__indexStride, sizeof(__pyx_k__indexStride), 0, 0, 1, 1},
  {&__pyx_n_s__inertia, __pyx_k__inertia, sizeof(__pyx_k__inertia), 0, 0, 1, 1},
  {&__pyx_n_s__isInWorld, __pyx_k__isInWorld, sizeof(__pyx_k__isInWorld), 0, 0, 1, 1},
  {&__pyx_n_s__itemsize, __pyx_k__itemsize, sizeof(__pyx_k__itemsize), 0, 0, 1, 1},
  {&__pyx_n_s__linearDamping, __pyx_k__linearDamping, sizeof(__pyx_k__linearDamping), 0, 0, 1, 1},
  {&__pyx_n_s__lower, __pyx_k__lower, sizeof(__pyx_k__lower), 0, 0, 1, 1},
  {&__pyx_n_s__m_angularDamping, __pyx_k__m_angularDamping, sizeof(__pyx_k__m_angularDamping), 0, 0, 1, 1},
  {&__pyx_n_s__m_collision_normal, __pyx_k__m_collision_normal, sizeof(__pyx_k__m_collision_normal), 0, 0, 1, 1},
  {&__pyx_n_s__m_distance, __pyx_k__m_distance, sizeof(__pyx_k__m_distance), 0, 0, 1, 1},
  {&__pyx_n_s__m_friction, __pyx_k__m_friction, sizeof(__pyx_k__m_friction), 0, 0, 1, 1},
  {&__pyx_n_s__m_indexType, __pyx_k__m_indexType, sizeof(__pyx_k__m_indexType), 0, 0, 1, 1},
  {&__pyx_n_s__m_linearDamping, __pyx_k__m_linearDamping, sizeof(__pyx_k__m_linearDamping), 0, 0, 1, 1},
  {&__pyx_n_s__m_mass, __pyx_k__m_mass, sizeof(__pyx_k__m_mass), 0, 0, 1, 1},
  {&__pyx_n_s__m_numTriangles, __pyx_k__m_numTriangles, sizeof(__pyx_k__m_numTriangles), 0, 0, 1, 1},
  {&__pyx_n_s__m_numVertices, __pyx_k__m_numVertices, sizeof(__pyx_k__m_numVertices), 0, 0, 1, 1},
  {&__pyx_n_s__m_position, __pyx_k__m_position, sizeof(__pyx_k__m_position), 0, 0, 1, 1},
  {&__pyx_n_s__m_restitution, __pyx_k__m_restitution, sizeof(__pyx_k__m_restitution), 0, 0, 1, 1},
  {&__pyx_n_s__m_triangleIndexBase, __pyx_k__m_triangleIndexBase, sizeof(__pyx_k__m_triangleIndexBase), 0, 0, 1, 1},
  {&__pyx_n_s__m_triangle_index, __pyx_k__m_triangle_index, sizeof(__pyx_k__m_triangle_index), 0, 0, 1, 1},
  {&__pyx_n_s__m_vertexBase, __pyx_k__m_vertexBase, sizeof(__pyx_k__m_vertexBase), 0, 0, 1, 1},
  {&__pyx_n_s__m_vertexStride, __pyx_k__m_vertexStride, sizeof(__pyx_k__m_vertexStride), 0, 0, 1, 1},
  {&__pyx_n_s__m_vertexType, __pyx_k__m_vertexType, sizeof(__pyx_k__m_vertexType), 0, 0, 1, 1},
  {&__pyx_n_s__mass, __pyx_k__mass, sizeof(__pyx_k__mass), 0, 0, 1, 1},
  {&__pyx_n_s__maxSubSteps, __pyx_k__maxSubSteps, sizeof(__pyx_k__maxSubSteps), 0, 0, 1, 1},
  {&__pyx_n_s__mesh, __pyx_k__mesh, sizeof(__pyx_k__mesh), 0, 0, 1, 1},
  {&__pyx_n_s__more, __pyx_k__more, sizeof(__pyx_k__more), 0, 0, 1, 1},
  {&__pyx_n_s__motion, __pyx_k__motion, sizeof(__pyx_k__motion), 0, 0, 1, 1},
  {&__pyx_n_s__names, __pyx_k__names, sizeof(__pyx_k__names), 0, 0, 1, 1},
  {&__pyx_n_s__ndim, __pyx_k__ndim, sizeof(__pyx_k__ndim), 0, 0, 1, 1},
  {&__pyx_n_s__normal, __pyx_k__normal, sizeof(__pyx_k__normal), 0, 0, 1, 1},
  {&__pyx_n_s__normalize, __pyx_k__normalize, sizeof(__pyx_k__normalize), 0, 0, 1, 1},
  {&__pyx_n_s__numTriangles, __pyx_k__numTriangles, sizeof(__pyx_k__numTriangles), 0, 0, 1, 1},
  {&__pyx_n_s__numVertices, __pyx_k__numVertices, sizeof(__pyx_k__numVertices), 0, 0, 1, 1},
  {&__pyx_n_s__obj, __pyx_k__obj, sizeof(__pyx_k__obj), 0, 0, 1, 1},
  {&__pyx_n_s__pop, __pyx_k__pop, sizeof(__pyx_k__pop), 0, 0, 1, 1},
  {&__pyx_n_s__position, __pyx_k__position, sizeof(__pyx_k__position), 0, 0, 1, 1},
  {&__pyx_n_s__quaternion, __pyx_k__quaternion, sizeof(__pyx_k__quaternion), 0, 0, 1, 1},
  {&__pyx_n_s__radius, __pyx_k__radius, sizeof(__pyx_k__radius), 0, 0, 1, 1},
  {&__pyx_n_s__range, __pyx_k__range, sizeof(__pyx_k__range), 0, 0, 1, 1},
  {&__pyx_n_s__readonly, __pyx_k__readonly, sizeof(__pyx_k__readonly), 0, 0, 1, 1},
  {&__pyx_n_s__relativePosition, __pyx_k__relativePosition, sizeof(__pyx_k__relativePosition), 0, 0, 1, 1},
  {&__pyx_n_s__remove, __pyx_k__remove, sizeof(__pyx_k__remove), 0, 0, 1, 1},
  {&__pyx_n_s__removeAction, __pyx_k__removeAction, sizeof(__pyx_k__removeAction), 0, 0, 1, 1},
  {&__pyx_n_s__removeRigidBody, __pyx_k__removeRigidBody, sizeof(__pyx_k__removeRigidBody), 0, 0, 1, 1},
  {&__pyx_n_s__restitution, __pyx_k__restitution, sizeof(__pyx_k__restitution), 0, 0, 1, 1},
  {&__pyx_n_s__setActivationState, __pyx_k__setActivationState, sizeof(__pyx_k__setActivationState), 0, 0, 1, 1},
  {&__pyx_n_s__setAngularFactor, __pyx_k__setAngularFactor, sizeof(__pyx_k__setAngularFactor), 0, 0, 1, 1},
  {&__pyx_n_s__setCollisionShape, __pyx_k__setCollisionShape, sizeof(__pyx_k__setCollisionShape), 0, 0, 1, 1},
  {&__pyx_n_s__setDebugDrawer, __pyx_k__setDebugDrawer, sizeof(__pyx_k__setDebugDrawer), 0, 0, 1, 1},
  {&__pyx_n_s__setFriction, __pyx_k__setFriction, sizeof(__pyx_k__setFriction), 0, 0, 1, 1},
  {&__pyx_n_s__setGravity, __pyx_k__setGravity, sizeof(__pyx_k__setGravity), 0, 0, 1, 1},
  {&__pyx_n_s__setIdentity, __pyx_k__setIdentity, sizeof(__pyx_k__setIdentity), 0, 0, 1, 1},
  {&__pyx_n_s__setLinearVelocity, __pyx_k__setLinearVelocity, sizeof(__pyx_k__setLinearVelocity), 0, 0, 1, 1},
  {&__pyx_n_s__setOrigin, __pyx_k__setOrigin, sizeof(__pyx_k__setOrigin), 0, 0, 1, 1},
  {&__pyx_n_s__setRestitution, __pyx_k__setRestitution, sizeof(__pyx_k__setRestitution), 0, 0, 1, 1},
  {&__pyx_n_s__setRotation, __pyx_k__setRotation, sizeof(__pyx_k__setRotation), 0, 0, 1, 1},
  {&__pyx_n_s__setWalkDirection, __pyx_k__setWalkDirection, sizeof(__pyx_k__setWalkDirection), 0, 0, 1, 1},
  {&__pyx_n_s__setWorldTransform, __pyx_k__setWorldTransform, sizeof(__pyx_k__setWorldTransform), 0, 0, 1, 1},
  {&__pyx_n_s__shape, __pyx_k__shape, sizeof(__pyx_k__shape), 0, 0, 1, 1},
  {&__pyx_n_s__solver, __pyx_k__solver, sizeof(__pyx_k__solver), 0, 0, 1, 1},
  {&__pyx_n_s__stepHeight, __pyx_k__stepHeight, sizeof(__pyx_k__stepHeight), 0, 0, 1, 1},
  {&__pyx_n_s__stepSimulation, __pyx_k__stepSimulation, sizeof(__pyx_k__stepSimulation), 0, 0, 1, 1},
  {&__pyx_n_s__stride, __pyx_k__stride, sizeof(__pyx_k__stride), 0, 0, 1, 1},
  {&__pyx_n_s__strides, __pyx_k__strides, sizeof(__pyx_k__strides), 0, 0, 1, 1},
  {&__pyx_n_s__suboffsets, __pyx_k__suboffsets, sizeof(__pyx_k__suboffsets), 0, 0, 1, 1},
  {&__pyx_n_s__thisptr, __pyx_k__thisptr, sizeof(__pyx_k__thisptr), 0, 0, 1, 1},
  {&__pyx_n_s__timeInterval, __pyx_k__timeInterval, sizeof(__pyx_k__timeInterval), 0, 0, 1, 1},
  {&__pyx_n_s__timeStep, __pyx_k__timeStep, sizeof(__pyx_k__timeStep), 0, 0, 1, 1},
  {&__pyx_n_s__trans, __pyx_k__trans, sizeof(__pyx_k__trans), 0, 0, 1, 1},
  {&__pyx_n_s__trans_from, __pyx_k__trans_from, sizeof(__pyx_k__trans_from), 0, 0, 1, 1},
  {&__pyx_n_s__trans_to, __pyx_k__trans_to, sizeof(__pyx_k__trans_to), 0, 0, 1, 1},
  {&__pyx_n_s__triangle_index, __pyx_k__triangle_index, sizeof(__pyx_k__triangle_index), 0, 0, 1, 1},
  {&__pyx_n_s__type_num, __pyx_k__type_num, sizeof(__pyx_k__type_num), 0, 0, 1, 1},
  {&__pyx_n_s__upAxis, __pyx_k__upAxis, sizeof(__pyx_k__upAxis), 0, 0, 1, 1},
  {&__pyx_n_s__upper, __pyx_k__upper, sizeof(__pyx_k__upper), 0, 0, 1, 1},
  {&__pyx_n_s__velocity, __pyx_k__velocity, sizeof(__pyx_k__velocity), 0, 0, 1, 1},
  {&__pyx_n_s__vertexBase, __pyx_k__vertexBase, sizeof(__pyx_k__vertexBase), 0, 0, 1, 1},
  {&__pyx_n_s__vertexStride, __pyx_k__vertexStride, sizeof(__pyx_k__vertexStride), 0, 0, 1, 1},
  {&__pyx_n_s__w, __pyx_k__w, sizeof(__pyx_k__w), 0, 0, 1, 1},
  {&__pyx_n_s__warp, __pyx_k__warp, sizeof(__pyx_k__warp), 0, 0, 1, 1},
  {&__pyx_n_s__worldTransform, __pyx_k__worldTransform, sizeof(__pyx_k__worldTransform), 0, 0, 1, 1},
  {&__pyx_n_s__x, __pyx_k__x, sizeof(__pyx_k__x), 0, 0, 1, 1},
  {&__pyx_n_s__y, __pyx_k__y, sizeof(__pyx_k__y), 0, 0, 1, 1},
  {&__pyx_n_s__z, __pyx_k__z, sizeof(__pyx_k__z), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ValueError = __Pyx_GetName(__pyx_b, __pyx_n_s__ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_range = __Pyx_GetName(__pyx_b, __pyx_n_s__range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetName(__pyx_b, __pyx_n_s__RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants");

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":842
 *         cdef PHY_ScalarType indexType = self._dtypeToScalarType(indexBase)
 *         if indexType == -1:
 *             raise ValueError("Unsupported index array type")             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr.m_numTriangles = numTriangles
 */
  __pyx_k_tuple_5 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_5));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_5, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_5));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":865
 *         cdef PHY_ScalarType vertexType = self._dtypeToScalarType(vertexBase)
 *         if vertexType == -1:
 *             raise ValueError("Unsupported index array type")             # <<<<<<<<<<<<<<
 * 
 *         self.thisptr.m_numVertices = numVertices
 */
  __pyx_k_tuple_6 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 865; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_6));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
  PyTuple_SET_ITEM(__pyx_k_tuple_6, 0, ((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_6));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":925
 *         """
 *         if mesh.thisptr.m_vertexType == PHY_INTEGER:
 *             raise ValueError("XXX")             # <<<<<<<<<<<<<<
 *         cdef btTriangleIndexVertexArray *array
 *         array = <btTriangleIndexVertexArray*>self.thisptr
 */
  __pyx_k_tuple_7 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_7));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__XXX));
  PyTuple_SET_ITEM(__pyx_k_tuple_7, 0, ((PyObject *)__pyx_n_s__XXX));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__XXX));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_7));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1735
 *             dispatcher = CollisionDispatcher()
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(0, 0, 0), Vector3(10, 10, 10))             # <<<<<<<<<<<<<<
 * 
 *         Py_INCREF(dispatcher)
 */
  __pyx_k_tuple_19 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_19));
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_19, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_19, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_k_tuple_19, 2, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_19));
  __pyx_k_tuple_20 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_20));
  __Pyx_INCREF(__pyx_int_10);
  PyTuple_SET_ITEM(__pyx_k_tuple_20, 0, __pyx_int_10);
  __Pyx_GIVEREF(__pyx_int_10);
  __Pyx_INCREF(__pyx_int_10);
  PyTuple_SET_ITEM(__pyx_k_tuple_20, 1, __pyx_int_10);
  __Pyx_GIVEREF(__pyx_int_10);
  __Pyx_INCREF(__pyx_int_10);
  PyTuple_SET_ITEM(__pyx_k_tuple_20, 2, __pyx_int_10);
  __Pyx_GIVEREF(__pyx_int_10);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_20));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1790
 *         """
 *         if collisionObject.thisptr.getCollisionShape() == NULL:
 *             raise ValueError(             # <<<<<<<<<<<<<<
 *                 "Cannot add CollisionObject without a CollisionShape")
 *         self.thisptr.addCollisionObject(collisionObject.thisptr, 1, -1)
 */
  __pyx_k_tuple_23 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_23));
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_22));
  PyTuple_SET_ITEM(__pyx_k_tuple_23, 0, ((PyObject *)__pyx_kp_s_22));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_22));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_23));

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1923
 *             solver = SequentialImpulseConstraintSolver()
 *         if broadphase is None:
 *             broadphase = AxisSweep3(Vector3(-100, -100, -100), Vector3(100, 100, 100))             # <<<<<<<<<<<<<<
 * 
 *         self.solver = solver
 */
  __pyx_k_tuple_26 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_26));
  __Pyx_INCREF(__pyx_int_neg_100);
  PyTuple_SET_ITEM(__pyx_k_tuple_26, 0, __pyx_int_neg_100);
  __Pyx_GIVEREF(__pyx_int_neg_100);
  __Pyx_INCREF(__pyx_int_neg_100);
  PyTuple_SET_ITEM(__pyx_k_tuple_26, 1, __pyx_int_neg_100);
  __Pyx_GIVEREF(__pyx_int_neg_100);
  __Pyx_INCREF(__pyx_int_neg_100);
  PyTuple_SET_ITEM(__pyx_k_tuple_26, 2, __pyx_int_neg_100);
  __Pyx_GIVEREF(__pyx_int_neg_100);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_26));
  __pyx_k_tuple_27 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_27)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_27));
  __Pyx_INCREF(__pyx_int_100);
  PyTuple_SET_ITEM(__pyx_k_tuple_27, 0, __pyx_int_100);
  __Pyx_GIVEREF(__pyx_int_100);
  __Pyx_INCREF(__pyx_int_100);
  PyTuple_SET_ITEM(__pyx_k_tuple_27, 1, __pyx_int_100);
  __Pyx_GIVEREF(__pyx_int_100);
  __Pyx_INCREF(__pyx_int_100);
  PyTuple_SET_ITEM(__pyx_k_tuple_27, 2, __pyx_int_100);
  __Pyx_GIVEREF(__pyx_int_100);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_27));

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":206
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_k_tuple_30 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_30)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_30));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_29));
  PyTuple_SET_ITEM(__pyx_k_tuple_30, 0, ((PyObject *)__pyx_kp_u_29));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_29));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_30));

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":210
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_k_tuple_32 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_32)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_32));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_31));
  PyTuple_SET_ITEM(__pyx_k_tuple_32, 0, ((PyObject *)__pyx_kp_u_31));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_31));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_32));

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":248
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_k_tuple_34 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_34)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_34));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_33));
  PyTuple_SET_ITEM(__pyx_k_tuple_34, 0, ((PyObject *)__pyx_kp_u_33));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_33));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_34));

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":787
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == '>' and little_endian) or
 */
  __pyx_k_tuple_37 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_37)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_37));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_36));
  PyTuple_SET_ITEM(__pyx_k_tuple_37, 0, ((PyObject *)__pyx_kp_u_36));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_36));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_37));

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":791
 *         if ((child.byteorder == '>' and little_endian) or
 *             (child.byteorder == '<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_k_tuple_38 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_38)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_38));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_33));
  PyTuple_SET_ITEM(__pyx_k_tuple_38, 0, ((PyObject *)__pyx_kp_u_33));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_33));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_38));

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":811
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_k_tuple_40 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_40)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_k_tuple_40));
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_39));
  PyTuple_SET_ITEM(__pyx_k_tuple_40, 0, ((PyObject *)__pyx_kp_u_39));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_39));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_40));
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_15 = PyInt_FromLong(15); if (unlikely(!__pyx_int_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_100 = PyInt_FromLong(100); if (unlikely(!__pyx_int_100)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_neg_100 = PyInt_FromLong(-100); if (unlikely(!__pyx_int_neg_100)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initbullet(void); /*proto*/
PyMODINIT_FUNC initbullet(void)
#else
PyMODINIT_FUNC PyInit_bullet(void); /*proto*/
PyMODINIT_FUNC PyInit_bullet(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  #if CYTHON_REFNANNY
  void* __pyx_refnanny = NULL;
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  __pyx_refnanny = __Pyx_RefNanny->SetupContext("PyMODINIT_FUNC PyInit_bullet(void)", __LINE__, __FILE__);
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __pyx_binding_PyCFunctionType_USED
  if (__pyx_binding_PyCFunctionType_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("bullet"), __pyx_methods, __Pyx_DOCSTR(__pyx_k_41), 0, PYTHON_API_VERSION);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (!__pyx_m) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  #if PY_MAJOR_VERSION < 3
  Py_INCREF(__pyx_m);
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));
  if (!__pyx_b) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_module_is_main_bullet__bullet) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CollisionObject) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CollisionObject", (PyObject *)&__pyx_type_6bullet_6bullet_CollisionObject) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_CollisionObject = &__pyx_type_6bullet_6bullet_CollisionObject;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_Vector3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    PyObject *wrapper = __Pyx_GetAttrString((PyObject *)&__pyx_type_6bullet_6bullet_Vector3, "__mul__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_2__mul__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_2__mul__.doc = __pyx_doc_6bullet_6bullet_7Vector3_2__mul__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_6bullet_6bullet_7Vector3_2__mul__;
    }
  }
  {
    PyObject *wrapper = __Pyx_GetAttrString((PyObject *)&__pyx_type_6bullet_6bullet_Vector3, "__add__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_3__add__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_3__add__.doc = __pyx_doc_6bullet_6bullet_7Vector3_3__add__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_6bullet_6bullet_7Vector3_3__add__;
    }
  }
  {
    PyObject *wrapper = __Pyx_GetAttrString((PyObject *)&__pyx_type_6bullet_6bullet_Vector3, "__sub__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_4__sub__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_6bullet_6bullet_7Vector3_4__sub__.doc = __pyx_doc_6bullet_6bullet_7Vector3_4__sub__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_6bullet_6bullet_7Vector3_4__sub__;
    }
  }
  if (__Pyx_SetAttrString(__pyx_m, "Vector3", (PyObject *)&__pyx_type_6bullet_6bullet_Vector3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_Vector3 = &__pyx_type_6bullet_6bullet_Vector3;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_Quaternion) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    PyObject *wrapper = __Pyx_GetAttrString((PyObject *)&__pyx_type_6bullet_6bullet_Quaternion, "__mul__"); if (unlikely(!wrapper)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (Py_TYPE(wrapper) == &PyWrapperDescr_Type) {
      __pyx_wrapperbase_6bullet_6bullet_10Quaternion_3__mul__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_6bullet_6bullet_10Quaternion_3__mul__.doc = __pyx_doc_6bullet_6bullet_10Quaternion_3__mul__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_6bullet_6bullet_10Quaternion_3__mul__;
    }
  }
  if (__Pyx_SetAttrString(__pyx_m, "Quaternion", (PyObject *)&__pyx_type_6bullet_6bullet_Quaternion) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_Quaternion = &__pyx_type_6bullet_6bullet_Quaternion;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CollisionShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CollisionShape", (PyObject *)&__pyx_type_6bullet_6bullet_CollisionShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_CollisionShape = &__pyx_type_6bullet_6bullet_CollisionShape;
  __pyx_type_6bullet_6bullet_ConvexShape.tp_base = __pyx_ptype_6bullet_6bullet_CollisionShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_ConvexShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ConvexShape", (PyObject *)&__pyx_type_6bullet_6bullet_ConvexShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_ConvexShape = &__pyx_type_6bullet_6bullet_ConvexShape;
  __pyx_type_6bullet_6bullet_Box2dShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_Box2dShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Box2dShape", (PyObject *)&__pyx_type_6bullet_6bullet_Box2dShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_Box2dShape = &__pyx_type_6bullet_6bullet_Box2dShape;
  __pyx_type_6bullet_6bullet_BoxShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_BoxShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "BoxShape", (PyObject *)&__pyx_type_6bullet_6bullet_BoxShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_BoxShape = &__pyx_type_6bullet_6bullet_BoxShape;
  __pyx_type_6bullet_6bullet_SphereShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_SphereShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SphereShape", (PyObject *)&__pyx_type_6bullet_6bullet_SphereShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_SphereShape = &__pyx_type_6bullet_6bullet_SphereShape;
  __pyx_type_6bullet_6bullet_CapsuleShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CapsuleShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CapsuleShape", (PyObject *)&__pyx_type_6bullet_6bullet_CapsuleShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 695; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_CapsuleShape = &__pyx_type_6bullet_6bullet_CapsuleShape;
  __pyx_type_6bullet_6bullet_CapsuleShapeZ.tp_base = __pyx_ptype_6bullet_6bullet_CapsuleShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CapsuleShapeZ) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CapsuleShapeZ", (PyObject *)&__pyx_type_6bullet_6bullet_CapsuleShapeZ) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_CapsuleShapeZ = &__pyx_type_6bullet_6bullet_CapsuleShapeZ;
  __pyx_type_6bullet_6bullet_CylinderShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CylinderShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CylinderShape", (PyObject *)&__pyx_type_6bullet_6bullet_CylinderShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_CylinderShape = &__pyx_type_6bullet_6bullet_CylinderShape;
  __pyx_type_6bullet_6bullet_CylinderShapeX.tp_base = __pyx_ptype_6bullet_6bullet_CylinderShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CylinderShapeX) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CylinderShapeX", (PyObject *)&__pyx_type_6bullet_6bullet_CylinderShapeX) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_CylinderShapeX = &__pyx_type_6bullet_6bullet_CylinderShapeX;
  __pyx_type_6bullet_6bullet_CylinderShapeZ.tp_base = __pyx_ptype_6bullet_6bullet_CylinderShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CylinderShapeZ) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CylinderShapeZ", (PyObject *)&__pyx_type_6bullet_6bullet_CylinderShapeZ) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_CylinderShapeZ = &__pyx_type_6bullet_6bullet_CylinderShapeZ;
  __pyx_type_6bullet_6bullet_StaticPlaneShape.tp_base = __pyx_ptype_6bullet_6bullet_CollisionShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_StaticPlaneShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "StaticPlaneShape", (PyObject *)&__pyx_type_6bullet_6bullet_StaticPlaneShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_StaticPlaneShape = &__pyx_type_6bullet_6bullet_StaticPlaneShape;
  __pyx_vtabptr_6bullet_6bullet_IndexedMesh = &__pyx_vtable_6bullet_6bullet_IndexedMesh;
  __pyx_vtable_6bullet_6bullet_IndexedMesh._dtypeToScalarType = (enum PHY_ScalarType (*)(struct __pyx_obj_6bullet_6bullet_IndexedMesh *, PyArrayObject *))__pyx_f_6bullet_6bullet_11IndexedMesh__dtypeToScalarType;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_IndexedMesh) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_6bullet_6bullet_IndexedMesh.tp_dict, __pyx_vtabptr_6bullet_6bullet_IndexedMesh) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "IndexedMesh", (PyObject *)&__pyx_type_6bullet_6bullet_IndexedMesh) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_IndexedMesh = &__pyx_type_6bullet_6bullet_IndexedMesh;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_StridingMeshInterface) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 878; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "StridingMeshInterface", (PyObject *)&__pyx_type_6bullet_6bullet_StridingMeshInterface) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 878; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_StridingMeshInterface = &__pyx_type_6bullet_6bullet_StridingMeshInterface;
  __pyx_type_6bullet_6bullet_TriangleIndexVertexArray.tp_base = __pyx_ptype_6bullet_6bullet_StridingMeshInterface;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_TriangleIndexVertexArray) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "TriangleIndexVertexArray", (PyObject *)&__pyx_type_6bullet_6bullet_TriangleIndexVertexArray) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_TriangleIndexVertexArray = &__pyx_type_6bullet_6bullet_TriangleIndexVertexArray;
  __pyx_type_6bullet_6bullet_BvhTriangleMeshShape.tp_base = __pyx_ptype_6bullet_6bullet_ConvexShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_BvhTriangleMeshShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 932; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "BvhTriangleMeshShape", (PyObject *)&__pyx_type_6bullet_6bullet_BvhTriangleMeshShape) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 932; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_BvhTriangleMeshShape = &__pyx_type_6bullet_6bullet_BvhTriangleMeshShape;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_Transform) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Transform", (PyObject *)&__pyx_type_6bullet_6bullet_Transform) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_Transform = &__pyx_type_6bullet_6bullet_Transform;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_MotionState) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "MotionState", (PyObject *)&__pyx_type_6bullet_6bullet_MotionState) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_MotionState = &__pyx_type_6bullet_6bullet_MotionState;
  __pyx_type_6bullet_6bullet_DefaultMotionState.tp_base = __pyx_ptype_6bullet_6bullet_MotionState;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_DefaultMotionState) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "DefaultMotionState", (PyObject *)&__pyx_type_6bullet_6bullet_DefaultMotionState) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_DefaultMotionState = &__pyx_type_6bullet_6bullet_DefaultMotionState;
  __pyx_type_6bullet_6bullet_RigidBody.tp_base = __pyx_ptype_6bullet_6bullet_CollisionObject;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_RigidBody) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "RigidBody", (PyObject *)&__pyx_type_6bullet_6bullet_RigidBody) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_RigidBody = &__pyx_type_6bullet_6bullet_RigidBody;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_ActionInterface) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ActionInterface", (PyObject *)&__pyx_type_6bullet_6bullet_ActionInterface) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_ActionInterface = &__pyx_type_6bullet_6bullet_ActionInterface;
  __pyx_type_6bullet_6bullet_CharacterControllerInterface.tp_base = __pyx_ptype_6bullet_6bullet_ActionInterface;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CharacterControllerInterface) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CharacterControllerInterface", (PyObject *)&__pyx_type_6bullet_6bullet_CharacterControllerInterface) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_CharacterControllerInterface = &__pyx_type_6bullet_6bullet_CharacterControllerInterface;
  __pyx_type_6bullet_6bullet_PairCachingGhostObject.tp_base = __pyx_ptype_6bullet_6bullet_CollisionObject;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_PairCachingGhostObject) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "PairCachingGhostObject", (PyObject *)&__pyx_type_6bullet_6bullet_PairCachingGhostObject) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_PairCachingGhostObject = &__pyx_type_6bullet_6bullet_PairCachingGhostObject;
  __pyx_type_6bullet_6bullet_KinematicCharacterController.tp_base = __pyx_ptype_6bullet_6bullet_CharacterControllerInterface;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_KinematicCharacterController) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "KinematicCharacterController", (PyObject *)&__pyx_type_6bullet_6bullet_KinematicCharacterController) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_KinematicCharacterController = &__pyx_type_6bullet_6bullet_KinematicCharacterController;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CollisionDispatcher) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CollisionDispatcher", (PyObject *)&__pyx_type_6bullet_6bullet_CollisionDispatcher) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_CollisionDispatcher = &__pyx_type_6bullet_6bullet_CollisionDispatcher;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_OverlappingPairCache) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "OverlappingPairCache", (PyObject *)&__pyx_type_6bullet_6bullet_OverlappingPairCache) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_OverlappingPairCache = &__pyx_type_6bullet_6bullet_OverlappingPairCache;
  __pyx_type_6bullet_6bullet_HashedOverlappingPairCache.tp_base = __pyx_ptype_6bullet_6bullet_OverlappingPairCache;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_HashedOverlappingPairCache) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "HashedOverlappingPairCache", (PyObject *)&__pyx_type_6bullet_6bullet_HashedOverlappingPairCache) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_HashedOverlappingPairCache = &__pyx_type_6bullet_6bullet_HashedOverlappingPairCache;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_BroadphaseInterface) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "BroadphaseInterface", (PyObject *)&__pyx_type_6bullet_6bullet_BroadphaseInterface) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_BroadphaseInterface = &__pyx_type_6bullet_6bullet_BroadphaseInterface;
  __pyx_type_6bullet_6bullet_AxisSweep3.tp_base = __pyx_ptype_6bullet_6bullet_BroadphaseInterface;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_AxisSweep3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "AxisSweep3", (PyObject *)&__pyx_type_6bullet_6bullet_AxisSweep3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_AxisSweep3 = &__pyx_type_6bullet_6bullet_AxisSweep3;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_ConstraintSolver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ConstraintSolver", (PyObject *)&__pyx_type_6bullet_6bullet_ConstraintSolver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_ConstraintSolver = &__pyx_type_6bullet_6bullet_ConstraintSolver;
  __pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver.tp_base = __pyx_ptype_6bullet_6bullet_ConstraintSolver;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "SequentialImpulseConstraintSolver", (PyObject *)&__pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_SequentialImpulseConstraintSolver = &__pyx_type_6bullet_6bullet_SequentialImpulseConstraintSolver;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_Collision) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "Collision", (PyObject *)&__pyx_type_6bullet_6bullet_Collision) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_Collision = &__pyx_type_6bullet_6bullet_Collision;
  __pyx_vtabptr_6bullet_6bullet_CollisionWorld = &__pyx_vtable_6bullet_6bullet_CollisionWorld;
  __pyx_vtable_6bullet_6bullet_CollisionWorld.__collisionResultsToList = (PyObject *(*)(struct __pyx_obj_6bullet_6bullet_CollisionWorld *, PyBulletCollisionResults *))__pyx_f_6bullet_6bullet_14CollisionWorld___collisionResultsToList;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_CollisionWorld) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_6bullet_6bullet_CollisionWorld.tp_dict, __pyx_vtabptr_6bullet_6bullet_CollisionWorld) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "CollisionWorld", (PyObject *)&__pyx_type_6bullet_6bullet_CollisionWorld) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_CollisionWorld = &__pyx_type_6bullet_6bullet_CollisionWorld;
  __pyx_vtabptr_6bullet_6bullet_DynamicsWorld = &__pyx_vtable_6bullet_6bullet_DynamicsWorld;
  __pyx_vtable_6bullet_6bullet_DynamicsWorld.__pyx_base = *__pyx_vtabptr_6bullet_6bullet_CollisionWorld;
  __pyx_type_6bullet_6bullet_DynamicsWorld.tp_base = __pyx_ptype_6bullet_6bullet_CollisionWorld;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_DynamicsWorld) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_6bullet_6bullet_DynamicsWorld.tp_dict, __pyx_vtabptr_6bullet_6bullet_DynamicsWorld) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "DynamicsWorld", (PyObject *)&__pyx_type_6bullet_6bullet_DynamicsWorld) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_DynamicsWorld = &__pyx_type_6bullet_6bullet_DynamicsWorld;
  __pyx_vtabptr_6bullet_6bullet_DiscreteDynamicsWorld = &__pyx_vtable_6bullet_6bullet_DiscreteDynamicsWorld;
  __pyx_vtable_6bullet_6bullet_DiscreteDynamicsWorld.__pyx_base = *__pyx_vtabptr_6bullet_6bullet_DynamicsWorld;
  __pyx_type_6bullet_6bullet_DiscreteDynamicsWorld.tp_base = __pyx_ptype_6bullet_6bullet_DynamicsWorld;
  if (PyType_Ready(&__pyx_type_6bullet_6bullet_DiscreteDynamicsWorld) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_6bullet_6bullet_DiscreteDynamicsWorld.tp_dict, __pyx_vtabptr_6bullet_6bullet_DiscreteDynamicsWorld) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "DiscreteDynamicsWorld", (PyObject *)&__pyx_type_6bullet_6bullet_DiscreteDynamicsWorld) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1904; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_6bullet_6bullet_DiscreteDynamicsWorld = &__pyx_type_6bullet_6bullet_DiscreteDynamicsWorld;
  /*--- Type import code ---*/
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":286
 * 
 * 
 * NO_DEBUG = DBG_NoDebug             # <<<<<<<<<<<<<<
 * DRAW_WIREFRAME = DBG_DrawWireframe
 * DRAW_AABB = DBG_DrawAabb
 */
  __pyx_t_1 = PyInt_FromLong(btIDebugDraw::DBG_NoDebug); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__NO_DEBUG, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":287
 * 
 * NO_DEBUG = DBG_NoDebug
 * DRAW_WIREFRAME = DBG_DrawWireframe             # <<<<<<<<<<<<<<
 * DRAW_AABB = DBG_DrawAabb
 * DRAW_FEATURES_TEXT = DBG_DrawFeaturesText
 */
  __pyx_t_1 = PyInt_FromLong(btIDebugDraw::DBG_DrawWireframe); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__DRAW_WIREFRAME, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":288
 * NO_DEBUG = DBG_NoDebug
 * DRAW_WIREFRAME = DBG_DrawWireframe
 * DRAW_AABB = DBG_DrawAabb             # <<<<<<<<<<<<<<
 * DRAW_FEATURES_TEXT = DBG_DrawFeaturesText
 * DRAW_CONTACT_POINTS = DBG_DrawContactPoints
 */
  __pyx_t_1 = PyInt_FromLong(btIDebugDraw::DBG_DrawAabb); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__DRAW_AABB, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":289
 * DRAW_WIREFRAME = DBG_DrawWireframe
 * DRAW_AABB = DBG_DrawAabb
 * DRAW_FEATURES_TEXT = DBG_DrawFeaturesText             # <<<<<<<<<<<<<<
 * DRAW_CONTACT_POINTS = DBG_DrawContactPoints
 * DRAW_TEXT = DBG_DrawText
 */
  __pyx_t_1 = PyInt_FromLong(btIDebugDraw::DBG_DrawFeaturesText); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__DRAW_FEATURES_TEXT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":290
 * DRAW_AABB = DBG_DrawAabb
 * DRAW_FEATURES_TEXT = DBG_DrawFeaturesText
 * DRAW_CONTACT_POINTS = DBG_DrawContactPoints             # <<<<<<<<<<<<<<
 * DRAW_TEXT = DBG_DrawText
 * DRAW_CONSTRAINTS = DBG_DrawConstraints
 */
  __pyx_t_1 = PyInt_FromLong(btIDebugDraw::DBG_DrawContactPoints); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__DRAW_CONTACT_POINTS, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 290; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":291
 * DRAW_FEATURES_TEXT = DBG_DrawFeaturesText
 * DRAW_CONTACT_POINTS = DBG_DrawContactPoints
 * DRAW_TEXT = DBG_DrawText             # <<<<<<<<<<<<<<
 * DRAW_CONSTRAINTS = DBG_DrawConstraints
 * DRAW_CONSTRAINT_LIMITS = DBG_DrawConstraintLimits
 */
  __pyx_t_1 = PyInt_FromLong(btIDebugDraw::DBG_DrawText); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__DRAW_TEXT, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":292
 * DRAW_CONTACT_POINTS = DBG_DrawContactPoints
 * DRAW_TEXT = DBG_DrawText
 * DRAW_CONSTRAINTS = DBG_DrawConstraints             # <<<<<<<<<<<<<<
 * DRAW_CONSTRAINT_LIMITS = DBG_DrawConstraintLimits
 * 
 */
  __pyx_t_1 = PyInt_FromLong(btIDebugDraw::DBG_DrawConstraints); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__DRAW_CONSTRAINTS, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":293
 * DRAW_TEXT = DBG_DrawText
 * DRAW_CONSTRAINTS = DBG_DrawConstraints
 * DRAW_CONSTRAINT_LIMITS = DBG_DrawConstraintLimits             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "btBulletCollisionCommon.h":
 */
  __pyx_t_1 = PyInt_FromLong(btIDebugDraw::DBG_DrawConstraintLimits); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_42, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":549
 * 
 *     @classmethod
 *     def fromScalars(cls, btScalar x, btScalar y, btScalar z, btScalar w):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Quaternion from four scalar components.
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion, __pyx_n_s__fromScalars); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion->tp_dict, __pyx_n_s__fromScalars, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_6bullet_6bullet_Quaternion);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":559
 * 
 *     @classmethod
 *     def fromAxisAngle(cls, Vector3 axis not None, btScalar angle):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Quaternion from an axis and a rotation around that axis.
 */
  __pyx_t_2 = __Pyx_GetName((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion, __pyx_n_s__fromAxisAngle); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6bullet_6bullet_Quaternion->tp_dict, __pyx_n_s__fromAxisAngle, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_6bullet_6bullet_Quaternion);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1025
 * 
 * 
 * ACTIVE_TAG = _ACTIVE_TAG             # <<<<<<<<<<<<<<
 * ISLAND_SLEEPING = _ISLAND_SLEEPING
 * WANTS_DEACTIVATION = _WANTS_DEACTIVATION
 */
  __pyx_t_1 = PyInt_FromLong(ACTIVE_TAG); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__ACTIVE_TAG, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1026
 * 
 * ACTIVE_TAG = _ACTIVE_TAG
 * ISLAND_SLEEPING = _ISLAND_SLEEPING             # <<<<<<<<<<<<<<
 * WANTS_DEACTIVATION = _WANTS_DEACTIVATION
 * DISABLE_DEACTIVATION = _DISABLE_DEACTIVATION
 */
  __pyx_t_1 = PyInt_FromLong(ISLAND_SLEEPING); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__ISLAND_SLEEPING, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1026; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1027
 * ACTIVE_TAG = _ACTIVE_TAG
 * ISLAND_SLEEPING = _ISLAND_SLEEPING
 * WANTS_DEACTIVATION = _WANTS_DEACTIVATION             # <<<<<<<<<<<<<<
 * DISABLE_DEACTIVATION = _DISABLE_DEACTIVATION
 * DISABLE_SIMULATION = _DISABLE_SIMULATION
 */
  __pyx_t_1 = PyInt_FromLong(WANTS_DEACTIVATION); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__WANTS_DEACTIVATION, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1028
 * ISLAND_SLEEPING = _ISLAND_SLEEPING
 * WANTS_DEACTIVATION = _WANTS_DEACTIVATION
 * DISABLE_DEACTIVATION = _DISABLE_DEACTIVATION             # <<<<<<<<<<<<<<
 * DISABLE_SIMULATION = _DISABLE_SIMULATION
 * 
 */
  __pyx_t_1 = PyInt_FromLong(DISABLE_DEACTIVATION); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1028; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_43, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1028; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1029
 * WANTS_DEACTIVATION = _WANTS_DEACTIVATION
 * DISABLE_DEACTIVATION = _DISABLE_DEACTIVATION
 * DISABLE_SIMULATION = _DISABLE_SIMULATION             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyInt_FromLong(DISABLE_SIMULATION); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1029; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__DISABLE_SIMULATION, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1029; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1237
 * 
 *     @classmethod
 *     def fromConstructionInfo(cls, MotionState motion,             # <<<<<<<<<<<<<<
 *                              CollisionShape shape, btScalar mass,
 *                              Vector3 inertia, Transform worldTransform,
 */
  __pyx_t_1 = __Pyx_GetName((PyObject *)__pyx_ptype_6bullet_6bullet_RigidBody, __pyx_n_s_44); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1236; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_6bullet_6bullet_RigidBody->tp_dict, __pyx_n_s_44, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_6bullet_6bullet_RigidBody);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1955
 *                        btScalar timeStep,
 *                        int maxSubSteps = 1,
 *                        btScalar fixedTimeStep = 1. / 60.):             # <<<<<<<<<<<<<<
 *         """
 *         Advance time in the simulation.
 */
  __pyx_k_28 = (1. / 60.);

  /* "/mnt/storage/home/dgym/tmp/setup/pybullet/bullet/bullet.pyx":1
 * # Copyright (c) Jean-Paul Calderone             # <<<<<<<<<<<<<<
 * # See LICENSE for details.
 * 
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s____test__, ((PyObject *)__pyx_t_2)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;

  /* "/usr/local/lib/python2.6/dist-packages/Cython-0.14-py2.6-linux-x86_64.egg/Cython/Includes/numpy.pxd":963
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    __Pyx_AddTraceback("init bullet.bullet");
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init bullet.bullet");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result)
        PyErr_SetObject(PyExc_NameError, name);
    return result;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AS_STRING(kw_name));
        #endif
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *number, *more_or_less;

    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    number = (num_expected == 1) ? "" : "s";
    PyErr_Format(PyExc_TypeError,
        #if PY_VERSION_HEX < 0x02050000
            "%s() takes %s %d positional argument%s (%d given)",
        #else
            "%s() takes %s %zd positional argument%s (%zd given)",
        #endif
        func_name, more_or_less, num_expected, number, num_found);
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;

    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
        } else {
            #if PY_MAJOR_VERSION < 3
            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
            #else
            if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key))) {
            #endif
                goto invalid_keyword_type;
            } else {
                for (name = first_kw_arg; *name; name++) {
                    #if PY_MAJOR_VERSION >= 3
                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                        PyUnicode_Compare(**name, key) == 0) break;
                    #else
                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                        _PyString_Eq(**name, key)) break;
                    #endif
                }
                if (*name) {
                    values[name-argnames] = value;
                } else {
                    /* unexpected keyword found */
                    for (name=argnames; name != first_kw_arg; name++) {
                        if (**name == key) goto arg_passed_twice;
                        #if PY_MAJOR_VERSION >= 3
                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
                        #else
                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                            _PyString_Eq(**name, key)) goto arg_passed_twice;
                        #endif
                    }
                    if (kwds2) {
                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                    } else {
                        goto invalid_keyword;
                    }
                }
            }
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

static double __Pyx__PyObject_AsDouble(PyObject* obj) {
    PyObject* float_value;
    if (Py_TYPE(obj)->tp_as_number && Py_TYPE(obj)->tp_as_number->nb_float) {
        return PyFloat_AsDouble(obj);
    } else if (PyUnicode_CheckExact(obj) || PyBytes_CheckExact(obj)) {
#if PY_MAJOR_VERSION >= 3
        float_value = PyFloat_FromString(obj);
#else
        float_value = PyFloat_FromString(obj, 0);
#endif
    } else {
        PyObject* args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        PyTuple_SET_ITEM(args, 0, obj);
        float_value = PyObject_Call((PyObject*)&PyFloat_Type, args, 0);
        PyTuple_SET_ITEM(args, 0, 0);
        Py_DECREF(args);
    }
    if (likely(float_value)) {
        double value = PyFloat_AS_DOUBLE(float_value);
        Py_DECREF(float_value);
        return value;
    }
bad:
    return (double)-1;
}

static CYTHON_INLINE int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key)))
        #else
        if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key)))
        #endif
            goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    return 0;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();

    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}

static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;

    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}


static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
        #if PY_VERSION_HEX < 0x02050000
                 "need more than %d value%s to unpack", (int)index,
        #else
                 "need more than %zd value%s to unpack", index,
        #endif
                 (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
        #if PY_VERSION_HEX < 0x02050000
            "too many values to unpack (expected %d)", (int)expected);
        #else
            "too many values to unpack (expected %zd)", expected);
        #endif
}

static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
    /* It appears that PyMethodDescr_Type is not anywhere exposed in the Python/C API */
    static PyTypeObject *methoddescr_type = NULL;
    if (methoddescr_type == NULL) {
       PyObject *meth = __Pyx_GetAttrString((PyObject*)&PyList_Type, "append");
       if (!meth) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    if (PyObject_TypeCheck(method, methoddescr_type)) { /* cdef classes */
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
    else if (PyMethod_Check(method)) { /* python classes */
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else if (PyCFunction_Check(method)) {
        return PyClassMethod_New(method);
    }
#ifdef __pyx_binding_PyCFunctionType_USED
    else if (PyObject_TypeCheck(method, __pyx_binding_PyCFunctionType)) { /* binded CFunction */
        return PyClassMethod_New(method);
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "Class-level classmethod() can only be called on "
                 "a method_descriptor or instance method.");
    return NULL;
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    Py_XINCREF(type);
    Py_XINCREF(value);
    Py_XINCREF(tb);
    /* First, check the traceback argument, replacing None with NULL. */
    if (tb == Py_None) {
        Py_DECREF(tb);
        tb = 0;
    }
    else if (tb != NULL && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto raise_error;
    }
    /* Next, replace a missing value with None */
    if (value == NULL) {
        value = Py_None;
        Py_INCREF(value);
    }
    #if PY_VERSION_HEX < 0x02050000
    if (!PyClass_Check(type))
    #else
    if (!PyType_Check(type))
    #endif
    {
        /* Raising an instance.  The value should be a dummy. */
        if (value != Py_None) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        /* Normalize to raise <class>, <instance> */
        Py_DECREF(value);
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }

    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}

#else /* Python 3+ */

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;

    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (!PyExceptionClass_Check(type)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }

    PyErr_SetObject(type, value);

    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }

bad:
    return;
}
#endif

static CYTHON_INLINE PyObject *__Pyx_PyInt_to_py_bool(bool val) {
    const bool neg_one = (bool)-1, const_zero = (bool)0;
    const int is_unsigned = const_zero < neg_one;
    if ((sizeof(bool) == sizeof(char))  ||
        (sizeof(bool) == sizeof(short))) {
        return PyInt_FromLong((long)val);
    } else if ((sizeof(bool) == sizeof(int)) ||
               (sizeof(bool) == sizeof(long))) {
        if (is_unsigned)
            return PyLong_FromUnsignedLong((unsigned long)val);
        else
            return PyInt_FromLong((long)val);
    } else if (sizeof(bool) == sizeof(PY_LONG_LONG)) {
        if (is_unsigned)
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG)val);
        else
            return PyLong_FromLongLong((PY_LONG_LONG)val);
    } else {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        return _PyLong_FromByteArray(bytes, sizeof(bool),
                                     little, !is_unsigned);
    }
}

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
          #if HAVE_HYPOT
            return hypotf(z.real, z.imag);
          #else
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(a, a);
                    case 3:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, a);
                    case 4:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_absf(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
          #if HAVE_HYPOT
            return hypot(z.real, z.imag);
          #else
            return sqrt(z.real*z.real + z.imag*z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(a, a);
                    case 3:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, a);
                    case 4:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_abs(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static void __Pyx_WriteUnraisable(const char *name) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItemString(dict, "__pyx_vtable__", ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    long size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];

    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(class_name);
    #else
    py_name = PyUnicode_FromString(class_name);
    #endif
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
    if (!strict && ((PyTypeObject *)result)->tp_basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        PyErr_Warn(NULL, warning);
        #else
        PyErr_WarnEx(NULL, warning, 0);
        #endif
    }
    else if (((PyTypeObject *)result)->tp_basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%s.%s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;

    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(name);
    #else
    py_name = PyUnicode_FromString(name);
    #endif
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"

static void __Pyx_AddTraceback(const char *funcname) {
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    PyObject *py_globals = 0;
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;

    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(__pyx_filename);
    #else
    py_srcfile = PyUnicode_FromString(__pyx_filename);
    #endif
    if (!py_srcfile) goto bad;
    if (__pyx_clineno) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_code = PyCode_New(
        0,            /*int argcount,*/
        #if PY_MAJOR_VERSION >= 3
        0,            /*int kwonlyargcount,*/
        #endif
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple,  /*PyObject *consts,*/
        __pyx_empty_tuple,  /*PyObject *names,*/
        __pyx_empty_tuple,  /*PyObject *varnames,*/
        __pyx_empty_tuple,  /*PyObject *freevars,*/
        __pyx_empty_tuple,  /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        __pyx_lineno,   /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    if (!py_code) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = __pyx_lineno;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

/* Type Conversion Functions */

static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}

static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}

static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
